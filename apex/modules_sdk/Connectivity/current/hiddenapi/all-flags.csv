Landroid/net/CaptivePortal$1;-><init>()V,blocked
Landroid/net/CaptivePortal$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/CaptivePortal;,blocked
Landroid/net/CaptivePortal$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/CaptivePortal$1;->newArray(I)[Landroid/net/CaptivePortal;,blocked
Landroid/net/CaptivePortal$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/CaptivePortal;-><clinit>()V,blocked
Landroid/net/CaptivePortal;-><init>(Landroid/os/IBinder;)V,lo-prio,max-target-o
Landroid/net/CaptivePortal;->APP_REQUEST_BASE:I,blocked
Landroid/net/CaptivePortal;->APP_REQUEST_REEVALUATION_REQUIRED:I,sdk,system-api,test-api
Landroid/net/CaptivePortal;->APP_RETURN_DISMISSED:I,sdk,system-api,test-api
Landroid/net/CaptivePortal;->APP_RETURN_UNWANTED:I,sdk,system-api,test-api
Landroid/net/CaptivePortal;->APP_RETURN_WANTED_AS_IS:I,sdk,system-api,test-api
Landroid/net/CaptivePortal;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,sdk,system-api,test-api
Landroid/net/CaptivePortal;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/CaptivePortal;->ignoreNetwork()V,public-api,sdk,system-api,test-api
Landroid/net/CaptivePortal;->logEvent(ILjava/lang/String;)V,sdk,system-api,test-api
Landroid/net/CaptivePortal;->mBinder:Landroid/os/IBinder;,lo-prio,max-target-o
Landroid/net/CaptivePortal;->reevaluateNetwork()V,sdk,system-api,test-api
Landroid/net/CaptivePortal;->reportCaptivePortalDismissed()V,public-api,sdk,system-api,test-api
Landroid/net/CaptivePortal;->useNetwork()V,sdk,system-api,test-api
Landroid/net/CaptivePortal;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/CaptivePortalData$1;-><init>()V,blocked
Landroid/net/CaptivePortalData$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/CaptivePortalData;,blocked
Landroid/net/CaptivePortalData$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/CaptivePortalData$1;->newArray(I)[Landroid/net/CaptivePortalData;,blocked
Landroid/net/CaptivePortalData$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/CaptivePortalData$Builder;-><init>()V,sdk,system-api,test-api
Landroid/net/CaptivePortalData$Builder;-><init>(Landroid/net/CaptivePortalData;)V,sdk,system-api,test-api
Landroid/net/CaptivePortalData$Builder;->build()Landroid/net/CaptivePortalData;,sdk,system-api,test-api
Landroid/net/CaptivePortalData$Builder;->mBytesRemaining:J,blocked
Landroid/net/CaptivePortalData$Builder;->mCaptive:Z,blocked
Landroid/net/CaptivePortalData$Builder;->mExpiryTime:J,blocked
Landroid/net/CaptivePortalData$Builder;->mIsSessionExtendable:Z,blocked
Landroid/net/CaptivePortalData$Builder;->mRefreshTime:J,blocked
Landroid/net/CaptivePortalData$Builder;->mUserPortalUrl:Landroid/net/Uri;,blocked
Landroid/net/CaptivePortalData$Builder;->mUserPortalUrlSource:I,blocked
Landroid/net/CaptivePortalData$Builder;->mVenueFriendlyName:Ljava/lang/CharSequence;,blocked
Landroid/net/CaptivePortalData$Builder;->mVenueInfoUrl:Landroid/net/Uri;,blocked
Landroid/net/CaptivePortalData$Builder;->mVenueInfoUrlSource:I,blocked
Landroid/net/CaptivePortalData$Builder;->setBytesRemaining(J)Landroid/net/CaptivePortalData$Builder;,sdk,system-api,test-api
Landroid/net/CaptivePortalData$Builder;->setCaptive(Z)Landroid/net/CaptivePortalData$Builder;,sdk,system-api,test-api
Landroid/net/CaptivePortalData$Builder;->setExpiryTime(J)Landroid/net/CaptivePortalData$Builder;,sdk,system-api,test-api
Landroid/net/CaptivePortalData$Builder;->setRefreshTime(J)Landroid/net/CaptivePortalData$Builder;,sdk,system-api,test-api
Landroid/net/CaptivePortalData$Builder;->setSessionExtendable(Z)Landroid/net/CaptivePortalData$Builder;,sdk,system-api,test-api
Landroid/net/CaptivePortalData$Builder;->setUserPortalUrl(Landroid/net/Uri;)Landroid/net/CaptivePortalData$Builder;,sdk,system-api,test-api
Landroid/net/CaptivePortalData$Builder;->setUserPortalUrl(Landroid/net/Uri;I)Landroid/net/CaptivePortalData$Builder;,sdk,system-api,test-api
Landroid/net/CaptivePortalData$Builder;->setVenueFriendlyName(Ljava/lang/CharSequence;)Landroid/net/CaptivePortalData$Builder;,sdk,system-api,test-api
Landroid/net/CaptivePortalData$Builder;->setVenueInfoUrl(Landroid/net/Uri;)Landroid/net/CaptivePortalData$Builder;,sdk,system-api,test-api
Landroid/net/CaptivePortalData$Builder;->setVenueInfoUrl(Landroid/net/Uri;I)Landroid/net/CaptivePortalData$Builder;,sdk,system-api,test-api
Landroid/net/CaptivePortalData;-><clinit>()V,blocked
Landroid/net/CaptivePortalData;-><init>(JLandroid/net/Uri;Landroid/net/Uri;ZJJZLjava/lang/CharSequence;II)V,blocked
Landroid/net/CaptivePortalData;-><init>(JLandroid/net/Uri;Landroid/net/Uri;ZJJZLjava/lang/CharSequence;IILandroid/net/CaptivePortalData$1;)V,blocked
Landroid/net/CaptivePortalData;-><init>(Landroid/os/Parcel;)V,blocked
Landroid/net/CaptivePortalData;-><init>(Landroid/os/Parcel;Landroid/net/CaptivePortalData$1;)V,blocked
Landroid/net/CaptivePortalData;->CAPTIVE_PORTAL_DATA_SOURCE_OTHER:I,sdk,system-api,test-api
Landroid/net/CaptivePortalData;->CAPTIVE_PORTAL_DATA_SOURCE_PASSPOINT:I,sdk,system-api,test-api
Landroid/net/CaptivePortalData;->CREATOR:Landroid/os/Parcelable$Creator;,sdk,system-api,test-api
Landroid/net/CaptivePortalData;->access$000(Landroid/net/CaptivePortalData;)Ljava/lang/String;,blocked
Landroid/net/CaptivePortalData;->access$100(Landroid/net/CaptivePortalData;)Z,blocked
Landroid/net/CaptivePortalData;->access$200(Landroid/net/CaptivePortalData;)J,blocked
Landroid/net/CaptivePortalData;->access$300(Landroid/net/CaptivePortalData;)J,blocked
Landroid/net/CaptivePortalData;->access$400(Landroid/net/CaptivePortalData;)Z,blocked
Landroid/net/CaptivePortalData;->access$500(Landroid/net/CaptivePortalData;)Landroid/net/Uri;,blocked
Landroid/net/CaptivePortalData;->access$600(Landroid/net/CaptivePortalData;)I,blocked
Landroid/net/CaptivePortalData;->access$700(Landroid/net/CaptivePortalData;)Landroid/net/Uri;,blocked
Landroid/net/CaptivePortalData;->access$800(Landroid/net/CaptivePortalData;)I,blocked
Landroid/net/CaptivePortalData;->access$900(Landroid/net/CaptivePortalData;)J,blocked
Landroid/net/CaptivePortalData;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/CaptivePortalData;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/CaptivePortalData;->getByteLimit()J,sdk,system-api,test-api
Landroid/net/CaptivePortalData;->getExpiryTimeMillis()J,sdk,system-api,test-api
Landroid/net/CaptivePortalData;->getRefreshTimeMillis()J,sdk,system-api,test-api
Landroid/net/CaptivePortalData;->getUserPortalUrl()Landroid/net/Uri;,sdk,system-api,test-api
Landroid/net/CaptivePortalData;->getUserPortalUrlSource()I,sdk,system-api,test-api
Landroid/net/CaptivePortalData;->getVenueFriendlyName()Ljava/lang/CharSequence;,sdk,system-api,test-api
Landroid/net/CaptivePortalData;->getVenueInfoUrl()Landroid/net/Uri;,sdk,system-api,test-api
Landroid/net/CaptivePortalData;->getVenueInfoUrlSource()I,sdk,system-api,test-api
Landroid/net/CaptivePortalData;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/CaptivePortalData;->isCaptive()Z,sdk,system-api,test-api
Landroid/net/CaptivePortalData;->isSessionExtendable()Z,sdk,system-api,test-api
Landroid/net/CaptivePortalData;->mByteLimit:J,blocked
Landroid/net/CaptivePortalData;->mCaptive:Z,blocked
Landroid/net/CaptivePortalData;->mExpiryTimeMillis:J,blocked
Landroid/net/CaptivePortalData;->mIsSessionExtendable:Z,blocked
Landroid/net/CaptivePortalData;->mRefreshTimeMillis:J,blocked
Landroid/net/CaptivePortalData;->mUserPortalUrl:Landroid/net/Uri;,blocked
Landroid/net/CaptivePortalData;->mUserPortalUrlSource:I,blocked
Landroid/net/CaptivePortalData;->mVenueFriendlyName:Ljava/lang/String;,blocked
Landroid/net/CaptivePortalData;->mVenueInfoUrl:Landroid/net/Uri;,blocked
Landroid/net/CaptivePortalData;->mVenueInfoUrlSource:I,blocked
Landroid/net/CaptivePortalData;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/CaptivePortalData;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectionInfo$1;-><init>()V,blocked
Landroid/net/ConnectionInfo$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/ConnectionInfo;,blocked
Landroid/net/ConnectionInfo$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/ConnectionInfo$1;->newArray(I)[Landroid/net/ConnectionInfo;,blocked
Landroid/net/ConnectionInfo$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/ConnectionInfo;-><clinit>()V,blocked
Landroid/net/ConnectionInfo;-><init>(ILjava/net/InetSocketAddress;Ljava/net/InetSocketAddress;)V,blocked
Landroid/net/ConnectionInfo;->CREATOR:Landroid/os/Parcelable$Creator;,blocked
Landroid/net/ConnectionInfo;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/ConnectionInfo;->local:Ljava/net/InetSocketAddress;,blocked
Landroid/net/ConnectionInfo;->protocol:I,blocked
Landroid/net/ConnectionInfo;->remote:Ljava/net/InetSocketAddress;,blocked
Landroid/net/ConnectionInfo;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder$$ExternalSyntheticLambda0;-><init>(Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder;Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;)V,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder$$ExternalSyntheticLambda0;->f$0:Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder;,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder$$ExternalSyntheticLambda0;->f$1:Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder$$ExternalSyntheticLambda1;-><init>(Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder;Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;)V,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder$$ExternalSyntheticLambda1;->f$0:Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder;,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder$$ExternalSyntheticLambda1;->f$1:Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder$$ExternalSyntheticLambda1;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder$$ExternalSyntheticLambda2;-><init>(Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder;Landroid/net/Network;Z)V,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder$$ExternalSyntheticLambda2;->f$0:Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder;,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder$$ExternalSyntheticLambda2;->f$1:Landroid/net/Network;,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder$$ExternalSyntheticLambda2;->f$2:Z,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder$$ExternalSyntheticLambda2;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder;-><init>(Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsCallback;Ljava/util/concurrent/Executor;)V,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder;->lambda$onConnectivityReportAvailable$0$ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder(Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;)V,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder;->lambda$onDataStallSuspected$1$ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder(Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;)V,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder;->lambda$onNetworkConnectivityReported$2$ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder(Landroid/net/Network;Z)V,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder;->mCb:Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsCallback;,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder;->mExecutor:Ljava/util/concurrent/Executor;,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder;->onConnectivityReportAvailable(Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;)V,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder;->onDataStallSuspected(Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;)V,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsBinder;->onNetworkConnectivityReported(Landroid/net/Network;Z)V,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsCallback;-><init>()V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsCallback;->onConnectivityReportAvailable(Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsCallback;->onDataStallSuspected(Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsCallback;->onNetworkConnectivityReported(Landroid/net/Network;Z)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport$1;-><init>()V,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport$1;->newArray(I)[Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;-><clinit>()V,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;-><init>(Landroid/net/Network;JLandroid/net/LinkProperties;Landroid/net/NetworkCapabilities;Landroid/os/PersistableBundle;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->KEY_NETWORK_PROBES_ATTEMPTED_BITMASK:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->KEY_NETWORK_PROBES_SUCCEEDED_BITMASK:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->KEY_NETWORK_VALIDATION_RESULT:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->NETWORK_PROBE_DNS:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->NETWORK_PROBE_FALLBACK:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->NETWORK_PROBE_HTTP:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->NETWORK_PROBE_HTTPS:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->NETWORK_PROBE_PRIVATE_DNS:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->NETWORK_VALIDATION_RESULT_INVALID:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->NETWORK_VALIDATION_RESULT_PARTIALLY_VALID:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->NETWORK_VALIDATION_RESULT_SKIPPED:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->NETWORK_VALIDATION_RESULT_VALID:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->getAdditionalInfo()Landroid/os/PersistableBundle;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->getLinkProperties()Landroid/net/LinkProperties;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->getNetwork()Landroid/net/Network;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->getNetworkCapabilities()Landroid/net/NetworkCapabilities;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->getReportTimestamp()J,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->mAdditionalInfo:Landroid/os/PersistableBundle;,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->mLinkProperties:Landroid/net/LinkProperties;,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->mNetwork:Landroid/net/Network;,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->mNetworkCapabilities:Landroid/net/NetworkCapabilities;,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->mReportTimestamp:J,blocked
Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport$1;-><init>()V,blocked
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;,blocked
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport$1;->newArray(I)[Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;,blocked
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;-><clinit>()V,blocked
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;-><init>(Landroid/net/Network;JILandroid/net/LinkProperties;Landroid/net/NetworkCapabilities;Landroid/os/PersistableBundle;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->DETECTION_METHOD_DNS_EVENTS:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->DETECTION_METHOD_TCP_METRICS:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->KEY_DNS_CONSECUTIVE_TIMEOUTS:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->KEY_TCP_METRICS_COLLECTION_PERIOD_MILLIS:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->KEY_TCP_PACKET_FAIL_RATE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->getDetectionMethod()I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->getLinkProperties()Landroid/net/LinkProperties;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->getNetwork()Landroid/net/Network;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->getNetworkCapabilities()Landroid/net/NetworkCapabilities;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->getReportTimestamp()J,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->getStallDetails()Landroid/os/PersistableBundle;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->mDetectionMethod:I,blocked
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->mLinkProperties:Landroid/net/LinkProperties;,blocked
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->mNetwork:Landroid/net/Network;,blocked
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->mNetworkCapabilities:Landroid/net/NetworkCapabilities;,blocked
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->mReportTimestamp:J,blocked
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->mStallDetails:Landroid/os/PersistableBundle;,blocked
Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager;-><clinit>()V,blocked
Landroid/net/ConnectivityDiagnosticsManager;-><init>(Landroid/content/Context;Landroid/net/IConnectivityManager;)V,blocked
Landroid/net/ConnectivityDiagnosticsManager;->mContext:Landroid/content/Context;,blocked
Landroid/net/ConnectivityDiagnosticsManager;->mService:Landroid/net/IConnectivityManager;,blocked
Landroid/net/ConnectivityDiagnosticsManager;->persistableBundleEquals(Landroid/os/PersistableBundle;Landroid/os/PersistableBundle;)Z,blocked
Landroid/net/ConnectivityDiagnosticsManager;->registerConnectivityDiagnosticsCallback(Landroid/net/NetworkRequest;Ljava/util/concurrent/Executor;Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsCallback;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityDiagnosticsManager;->sCallbacks:Ljava/util/Map;,blocked
Landroid/net/ConnectivityDiagnosticsManager;->unregisterConnectivityDiagnosticsCallback(Landroid/net/ConnectivityDiagnosticsManager$ConnectivityDiagnosticsCallback;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda0;-><clinit>()V,blocked
Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda0;-><init>()V,blocked
Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda0;->INSTANCE:Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda0;,blocked
Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda0;->createService(Landroid/content/Context;Landroid/os/IBinder;)Ljava/lang/Object;,sdk,system-api,test-api
Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda1;-><clinit>()V,blocked
Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda1;-><init>()V,blocked
Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda1;->INSTANCE:Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda1;,blocked
Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda1;->createService(Landroid/content/Context;Landroid/os/IBinder;)Ljava/lang/Object;,sdk,system-api,test-api
Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda2;-><clinit>()V,blocked
Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda2;-><init>()V,blocked
Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda2;->INSTANCE:Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda2;,blocked
Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda2;->createService(Landroid/content/Context;)Ljava/lang/Object;,sdk,system-api,test-api
Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda3;-><clinit>()V,blocked
Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda3;-><init>()V,blocked
Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda3;->INSTANCE:Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda3;,blocked
Landroid/net/ConnectivityFrameworkInitializer$$ExternalSyntheticLambda3;->createService(Landroid/content/Context;)Ljava/lang/Object;,sdk,system-api,test-api
Landroid/net/ConnectivityFrameworkInitializer;-><init>()V,blocked
Landroid/net/ConnectivityFrameworkInitializer;->lambda$registerServiceWrappers$0(Landroid/content/Context;Landroid/os/IBinder;)Landroid/net/ConnectivityManager;,blocked
Landroid/net/ConnectivityFrameworkInitializer;->lambda$registerServiceWrappers$1(Landroid/content/Context;)Landroid/net/ConnectivityDiagnosticsManager;,blocked
Landroid/net/ConnectivityFrameworkInitializer;->lambda$registerServiceWrappers$2(Landroid/content/Context;)Landroid/net/TestNetworkManager;,blocked
Landroid/net/ConnectivityFrameworkInitializer;->lambda$registerServiceWrappers$3(Landroid/content/Context;Landroid/os/IBinder;)Landroid/net/DnsResolverServiceManager;,blocked
Landroid/net/ConnectivityFrameworkInitializer;->registerServiceWrappers()V,blocked
Landroid/net/ConnectivityManager$1;-><init>(Landroid/net/ConnectivityManager;Landroid/net/ConnectivityManager$OnNetworkActiveListener;)V,blocked
Landroid/net/ConnectivityManager$1;->onNetworkActive()V,blocked
Landroid/net/ConnectivityManager$1;->this$0:Landroid/net/ConnectivityManager;,blocked
Landroid/net/ConnectivityManager$1;->val$l:Landroid/net/ConnectivityManager$OnNetworkActiveListener;,blocked
Landroid/net/ConnectivityManager$2;-><init>(Landroid/net/ConnectivityManager;Landroid/os/Handler;)V,blocked
Landroid/net/ConnectivityManager$2;->execute(Ljava/lang/Runnable;)V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$2;->this$0:Landroid/net/ConnectivityManager;,blocked
Landroid/net/ConnectivityManager$2;->val$handler:Landroid/os/Handler;,blocked
Landroid/net/ConnectivityManager$3;-><init>(Landroid/net/ConnectivityManager;Landroid/net/ConnectivityManager$OnStartTetheringCallback;)V,blocked
Landroid/net/ConnectivityManager$3;->onTetheringFailed(I)V,sdk,system-api,test-api
Landroid/net/ConnectivityManager$3;->onTetheringStarted()V,sdk,system-api,test-api
Landroid/net/ConnectivityManager$3;->this$0:Landroid/net/ConnectivityManager;,blocked
Landroid/net/ConnectivityManager$3;->val$callback:Landroid/net/ConnectivityManager$OnStartTetheringCallback;,blocked
Landroid/net/ConnectivityManager$4;-><init>(Landroid/net/ConnectivityManager;Landroid/net/ConnectivityManager$OnTetheringEventCallback;)V,blocked
Landroid/net/ConnectivityManager$4;->onUpstreamChanged(Landroid/net/Network;)V,sdk,system-api,test-api
Landroid/net/ConnectivityManager$4;->this$0:Landroid/net/ConnectivityManager;,blocked
Landroid/net/ConnectivityManager$4;->val$callback:Landroid/net/ConnectivityManager$OnTetheringEventCallback;,blocked
Landroid/net/ConnectivityManager$5$$ExternalSyntheticLambda0;-><init>(Landroid/net/ConnectivityManager$OnTetheringEntitlementResultListener;I)V,blocked
Landroid/net/ConnectivityManager$5$$ExternalSyntheticLambda0;->f$0:Landroid/net/ConnectivityManager$OnTetheringEntitlementResultListener;,blocked
Landroid/net/ConnectivityManager$5$$ExternalSyntheticLambda0;->f$1:I,blocked
Landroid/net/ConnectivityManager$5$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$5;-><init>(Landroid/net/ConnectivityManager;Landroid/os/Handler;Ljava/util/concurrent/Executor;Landroid/net/ConnectivityManager$OnTetheringEntitlementResultListener;)V,blocked
Landroid/net/ConnectivityManager$5;->lambda$onReceiveResult$0(Landroid/net/ConnectivityManager$OnTetheringEntitlementResultListener;I)V,blocked
Landroid/net/ConnectivityManager$5;->onReceiveResult(ILandroid/os/Bundle;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$5;->this$0:Landroid/net/ConnectivityManager;,blocked
Landroid/net/ConnectivityManager$5;->val$executor:Ljava/util/concurrent/Executor;,blocked
Landroid/net/ConnectivityManager$5;->val$listener:Landroid/net/ConnectivityManager$OnTetheringEntitlementResultListener;,blocked
Landroid/net/ConnectivityManager$6$$ExternalSyntheticLambda0;-><init>(Ljava/lang/Runnable;)V,blocked
Landroid/net/ConnectivityManager$6$$ExternalSyntheticLambda0;->f$0:Ljava/lang/Runnable;,blocked
Landroid/net/ConnectivityManager$6$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$6;-><init>(Landroid/net/ConnectivityManager;Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V,blocked
Landroid/net/ConnectivityManager$6;->onComplete()V,blocked
Landroid/net/ConnectivityManager$6;->this$0:Landroid/net/ConnectivityManager;,blocked
Landroid/net/ConnectivityManager$6;->val$executor:Ljava/util/concurrent/Executor;,blocked
Landroid/net/ConnectivityManager$6;->val$listener:Ljava/lang/Runnable;,blocked
Landroid/net/ConnectivityManager$7;-><init>(Landroid/net/ConnectivityManager;Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V,blocked
Landroid/net/ConnectivityManager$7;->onComplete()V,blocked
Landroid/net/ConnectivityManager$7;->this$0:Landroid/net/ConnectivityManager;,blocked
Landroid/net/ConnectivityManager$7;->val$executor:Ljava/util/concurrent/Executor;,blocked
Landroid/net/ConnectivityManager$7;->val$listener:Ljava/lang/Runnable;,blocked
Landroid/net/ConnectivityManager$CallbackHandler;-><init>(Landroid/net/ConnectivityManager;Landroid/os/Handler;)V,blocked
Landroid/net/ConnectivityManager$CallbackHandler;-><init>(Landroid/net/ConnectivityManager;Landroid/os/Looper;)V,blocked
Landroid/net/ConnectivityManager$CallbackHandler;->DBG:Z,lo-prio,max-target-o
Landroid/net/ConnectivityManager$CallbackHandler;->TAG:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager$CallbackHandler;->getObject(Landroid/os/Message;Ljava/lang/Class;)Ljava/lang/Object;,lo-prio,max-target-o
Landroid/net/ConnectivityManager$CallbackHandler;->handleMessage(Landroid/os/Message;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$CallbackHandler;->this$0:Landroid/net/ConnectivityManager;,blocked
Landroid/net/ConnectivityManager$Errors;->TOO_MANY_REQUESTS:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager$LegacyRequest$1;-><init>(Landroid/net/ConnectivityManager$LegacyRequest;)V,blocked
Landroid/net/ConnectivityManager$LegacyRequest$1;->onAvailable(Landroid/net/Network;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$LegacyRequest$1;->onLost(Landroid/net/Network;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$LegacyRequest$1;->this$0:Landroid/net/ConnectivityManager$LegacyRequest;,blocked
Landroid/net/ConnectivityManager$LegacyRequest;-><init>()V,lo-prio,max-target-o
Landroid/net/ConnectivityManager$LegacyRequest;-><init>(Landroid/net/ConnectivityManager$1;)V,blocked
Landroid/net/ConnectivityManager$LegacyRequest;->access$000(Landroid/net/ConnectivityManager$LegacyRequest;)V,blocked
Landroid/net/ConnectivityManager$LegacyRequest;->clearDnsBinding()V,lo-prio,max-target-o
Landroid/net/ConnectivityManager$LegacyRequest;->currentNetwork:Landroid/net/Network;,lo-prio,max-target-o
Landroid/net/ConnectivityManager$LegacyRequest;->delay:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager$LegacyRequest;->expireSequenceNumber:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager$LegacyRequest;->networkCallback:Landroid/net/ConnectivityManager$NetworkCallback;,lo-prio,max-target-o
Landroid/net/ConnectivityManager$LegacyRequest;->networkCapabilities:Landroid/net/NetworkCapabilities;,lo-prio,max-target-o
Landroid/net/ConnectivityManager$LegacyRequest;->networkRequest:Landroid/net/NetworkRequest;,lo-prio,max-target-o
Landroid/net/ConnectivityManager$NetworkCallback;-><init>()V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$NetworkCallback;-><init>(I)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$NetworkCallback;->FLAG_INCLUDE_LOCATION_INFO:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$NetworkCallback;->FLAG_NONE:I,blocked
Landroid/net/ConnectivityManager$NetworkCallback;->VALID_FLAGS:I,blocked
Landroid/net/ConnectivityManager$NetworkCallback;->access$1100(Landroid/net/ConnectivityManager$NetworkCallback;)I,blocked
Landroid/net/ConnectivityManager$NetworkCallback;->access$900(Landroid/net/ConnectivityManager$NetworkCallback;)Landroid/net/NetworkRequest;,blocked
Landroid/net/ConnectivityManager$NetworkCallback;->access$902(Landroid/net/ConnectivityManager$NetworkCallback;Landroid/net/NetworkRequest;)Landroid/net/NetworkRequest;,blocked
Landroid/net/ConnectivityManager$NetworkCallback;->mFlags:I,blocked
Landroid/net/ConnectivityManager$NetworkCallback;->networkRequest:Landroid/net/NetworkRequest;,lo-prio,max-target-o
Landroid/net/ConnectivityManager$NetworkCallback;->onAvailable(Landroid/net/Network;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$NetworkCallback;->onAvailable(Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;I)V,blocked
Landroid/net/ConnectivityManager$NetworkCallback;->onAvailable(Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;Z)V,blocked
Landroid/net/ConnectivityManager$NetworkCallback;->onBlockedStatusChanged(Landroid/net/Network;I)V,blocked
Landroid/net/ConnectivityManager$NetworkCallback;->onBlockedStatusChanged(Landroid/net/Network;Z)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$NetworkCallback;->onCapabilitiesChanged(Landroid/net/Network;Landroid/net/NetworkCapabilities;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$NetworkCallback;->onLinkPropertiesChanged(Landroid/net/Network;Landroid/net/LinkProperties;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$NetworkCallback;->onLosing(Landroid/net/Network;I)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$NetworkCallback;->onLost(Landroid/net/Network;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$NetworkCallback;->onNetworkResumed(Landroid/net/Network;)V,lo-prio,max-target-o
Landroid/net/ConnectivityManager$NetworkCallback;->onNetworkSuspended(Landroid/net/Network;)V,lo-prio,max-target-o
Landroid/net/ConnectivityManager$NetworkCallback;->onPreCheck(Landroid/net/Network;)V,lo-prio,max-target-o
Landroid/net/ConnectivityManager$NetworkCallback;->onUnavailable()V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$OnNetworkActiveListener;->onNetworkActive()V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$OnStartTetheringCallback;-><init>()V,sdk,system-api,test-api
Landroid/net/ConnectivityManager$OnStartTetheringCallback;->onTetheringFailed()V,sdk,system-api,test-api
Landroid/net/ConnectivityManager$OnStartTetheringCallback;->onTetheringStarted()V,sdk,system-api,test-api
Landroid/net/ConnectivityManager$OnTetheringEntitlementResultListener;->onTetheringEntitlementResult(I)V,sdk,system-api,test-api
Landroid/net/ConnectivityManager$OnTetheringEventCallback;-><init>()V,sdk,system-api,test-api
Landroid/net/ConnectivityManager$OnTetheringEventCallback;->onUpstreamChanged(Landroid/net/Network;)V,sdk,system-api,test-api
Landroid/net/ConnectivityManager$PacketKeepalive$$ExternalSyntheticLambda0;-><init>(Landroid/net/ConnectivityManager$PacketKeepalive;)V,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$$ExternalSyntheticLambda0;->f$0:Landroid/net/ConnectivityManager$PacketKeepalive;,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$PacketKeepalive$1$$ExternalSyntheticLambda0;-><init>(Landroid/net/ConnectivityManager$PacketKeepalive$1;ILandroid/net/ConnectivityManager$PacketKeepaliveCallback;)V,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1$$ExternalSyntheticLambda0;->f$0:Landroid/net/ConnectivityManager$PacketKeepalive$1;,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1$$ExternalSyntheticLambda0;->f$1:I,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1$$ExternalSyntheticLambda0;->f$2:Landroid/net/ConnectivityManager$PacketKeepaliveCallback;,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$PacketKeepalive$1$$ExternalSyntheticLambda1;-><init>(Landroid/net/ConnectivityManager$PacketKeepalive$1;Landroid/net/ConnectivityManager$PacketKeepaliveCallback;)V,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1$$ExternalSyntheticLambda1;->f$0:Landroid/net/ConnectivityManager$PacketKeepalive$1;,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1$$ExternalSyntheticLambda1;->f$1:Landroid/net/ConnectivityManager$PacketKeepaliveCallback;,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1$$ExternalSyntheticLambda1;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$PacketKeepalive$1$$ExternalSyntheticLambda2;-><init>(Landroid/net/ConnectivityManager$PacketKeepalive$1;Landroid/net/ConnectivityManager$PacketKeepaliveCallback;I)V,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1$$ExternalSyntheticLambda2;->f$0:Landroid/net/ConnectivityManager$PacketKeepalive$1;,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1$$ExternalSyntheticLambda2;->f$1:Landroid/net/ConnectivityManager$PacketKeepaliveCallback;,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1$$ExternalSyntheticLambda2;->f$2:I,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1$$ExternalSyntheticLambda2;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager$PacketKeepalive$1;-><init>(Landroid/net/ConnectivityManager$PacketKeepalive;Landroid/net/ConnectivityManager;Landroid/net/ConnectivityManager$PacketKeepaliveCallback;)V,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1;->lambda$onError$2$ConnectivityManager$PacketKeepalive$1(Landroid/net/ConnectivityManager$PacketKeepaliveCallback;I)V,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1;->lambda$onStarted$0$ConnectivityManager$PacketKeepalive$1(ILandroid/net/ConnectivityManager$PacketKeepaliveCallback;)V,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1;->lambda$onStopped$1$ConnectivityManager$PacketKeepalive$1(Landroid/net/ConnectivityManager$PacketKeepaliveCallback;)V,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1;->onDataReceived()V,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1;->onError(I)V,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1;->onStarted(I)V,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1;->onStopped()V,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1;->this$1:Landroid/net/ConnectivityManager$PacketKeepalive;,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1;->val$callback:Landroid/net/ConnectivityManager$PacketKeepaliveCallback;,blocked
Landroid/net/ConnectivityManager$PacketKeepalive$1;->val$this$0:Landroid/net/ConnectivityManager;,blocked
Landroid/net/ConnectivityManager$PacketKeepalive;-><init>(Landroid/net/ConnectivityManager;Landroid/net/Network;Landroid/net/ConnectivityManager$PacketKeepaliveCallback;)V,blocked
Landroid/net/ConnectivityManager$PacketKeepalive;-><init>(Landroid/net/ConnectivityManager;Landroid/net/Network;Landroid/net/ConnectivityManager$PacketKeepaliveCallback;Landroid/net/ConnectivityManager$1;)V,blocked
Landroid/net/ConnectivityManager$PacketKeepalive;->BINDER_DIED:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager$PacketKeepalive;->ERROR_HARDWARE_ERROR:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager$PacketKeepalive;->ERROR_HARDWARE_UNSUPPORTED:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager$PacketKeepalive;->ERROR_INVALID_INTERVAL:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager$PacketKeepalive;->ERROR_INVALID_IP_ADDRESS:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager$PacketKeepalive;->ERROR_INVALID_LENGTH:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager$PacketKeepalive;->ERROR_INVALID_NETWORK:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager$PacketKeepalive;->ERROR_INVALID_PORT:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager$PacketKeepalive;->MIN_INTERVAL:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager$PacketKeepalive;->NATT_PORT:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager$PacketKeepalive;->NO_KEEPALIVE:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager$PacketKeepalive;->SUCCESS:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager$PacketKeepalive;->TAG:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager$PacketKeepalive;->access$200(Landroid/net/ConnectivityManager$PacketKeepalive;)Ljava/util/concurrent/ExecutorService;,blocked
Landroid/net/ConnectivityManager$PacketKeepalive;->access$302(Landroid/net/ConnectivityManager$PacketKeepalive;Ljava/lang/Integer;)Ljava/lang/Integer;,blocked
Landroid/net/ConnectivityManager$PacketKeepalive;->access$600(Landroid/net/ConnectivityManager$PacketKeepalive;)Landroid/net/ISocketKeepaliveCallback;,blocked
Landroid/net/ConnectivityManager$PacketKeepalive;->lambda$stop$0$ConnectivityManager$PacketKeepalive()V,blocked
Landroid/net/ConnectivityManager$PacketKeepalive;->mCallback:Landroid/net/ISocketKeepaliveCallback;,blocked
Landroid/net/ConnectivityManager$PacketKeepalive;->mExecutor:Ljava/util/concurrent/ExecutorService;,blocked
Landroid/net/ConnectivityManager$PacketKeepalive;->mNetwork:Landroid/net/Network;,lo-prio,max-target-o
Landroid/net/ConnectivityManager$PacketKeepalive;->mSlot:Ljava/lang/Integer;,lo-prio,max-target-o
Landroid/net/ConnectivityManager$PacketKeepalive;->stop()V,max-target-r
Landroid/net/ConnectivityManager$PacketKeepalive;->this$0:Landroid/net/ConnectivityManager;,blocked
Landroid/net/ConnectivityManager$PacketKeepaliveCallback;-><init>()V,max-target-r
Landroid/net/ConnectivityManager$PacketKeepaliveCallback;->onError(I)V,max-target-r
Landroid/net/ConnectivityManager$PacketKeepaliveCallback;->onStarted()V,max-target-r
Landroid/net/ConnectivityManager$PacketKeepaliveCallback;->onStopped()V,max-target-r
Landroid/net/ConnectivityManager$TooManyRequestsException;-><init>()V,lo-prio,max-target-o
Landroid/net/ConnectivityManager;-><clinit>()V,blocked
Landroid/net/ConnectivityManager;-><init>(Landroid/content/Context;Landroid/net/IConnectivityManager;)V,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->ACTION_BACKGROUND_DATA_SETTING_CHANGED:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->ACTION_CAPTIVE_PORTAL_SIGN_IN:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->ACTION_CAPTIVE_PORTAL_TEST_COMPLETED:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->ACTION_CLEAR_DNS_CACHE:Ljava/lang/String;,blocked
Landroid/net/ConnectivityManager;->ACTION_DATA_ACTIVITY_CHANGE:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->ACTION_PROMPT_LOST_VALIDATION:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->ACTION_PROMPT_PARTIAL_CONNECTIVITY:Ljava/lang/String;,blocked
Landroid/net/ConnectivityManager;->ACTION_PROMPT_UNVALIDATED:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->ACTION_RESTRICT_BACKGROUND_CHANGED:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->ACTION_TETHER_STATE_CHANGED:Ljava/lang/String;,max-target-r
Landroid/net/ConnectivityManager;->ALREADY_UNREGISTERED:Landroid/net/NetworkRequest;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->BLOCKED_METERED_REASON_ADMIN_DISABLED:I,blocked
Landroid/net/ConnectivityManager;->BLOCKED_METERED_REASON_DATA_SAVER:I,blocked
Landroid/net/ConnectivityManager;->BLOCKED_METERED_REASON_MASK:I,blocked
Landroid/net/ConnectivityManager;->BLOCKED_METERED_REASON_USER_RESTRICTED:I,blocked
Landroid/net/ConnectivityManager;->BLOCKED_REASON_APP_STANDBY:I,blocked
Landroid/net/ConnectivityManager;->BLOCKED_REASON_BATTERY_SAVER:I,blocked
Landroid/net/ConnectivityManager;->BLOCKED_REASON_DOZE:I,blocked
Landroid/net/ConnectivityManager;->BLOCKED_REASON_LOCKDOWN_VPN:I,blocked
Landroid/net/ConnectivityManager;->BLOCKED_REASON_NONE:I,blocked
Landroid/net/ConnectivityManager;->BLOCKED_REASON_RESTRICTED_MODE:I,blocked
Landroid/net/ConnectivityManager;->CALLBACK_AVAILABLE:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->CALLBACK_BLK_CHANGED:I,blocked
Landroid/net/ConnectivityManager;->CALLBACK_CAP_CHANGED:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->CALLBACK_IP_CHANGED:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->CALLBACK_LOSING:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->CALLBACK_LOST:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->CALLBACK_PRECHECK:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->CALLBACK_RESUMED:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->CALLBACK_SUSPENDED:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->CALLBACK_UNAVAIL:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->CONNECTIVITY_ACTION:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->DEBUG:Z,blocked
Landroid/net/ConnectivityManager;->DEFAULT_NETWORK_PREFERENCE:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->DEPRECATED_PHONE_CONSTANT_APN_ALREADY_ACTIVE:I,blocked
Landroid/net/ConnectivityManager;->DEPRECATED_PHONE_CONSTANT_APN_REQUEST_FAILED:I,blocked
Landroid/net/ConnectivityManager;->DEPRECATED_PHONE_CONSTANT_APN_REQUEST_STARTED:I,blocked
Landroid/net/ConnectivityManager;->EXPIRE_LEGACY_REQUEST:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->EXTRA_ACTIVE_LOCAL_ONLY:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->EXTRA_ACTIVE_TETHER:Ljava/lang/String;,max-target-r
Landroid/net/ConnectivityManager;->EXTRA_ADD_TETHER_TYPE:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->EXTRA_AVAILABLE_TETHER:Ljava/lang/String;,max-target-r
Landroid/net/ConnectivityManager;->EXTRA_CAPTIVE_PORTAL:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->EXTRA_CAPTIVE_PORTAL_PROBE_SPEC:Ljava/lang/String;,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->EXTRA_CAPTIVE_PORTAL_URL:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->EXTRA_CAPTIVE_PORTAL_USER_AGENT:Ljava/lang/String;,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->EXTRA_DEVICE_TYPE:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->EXTRA_ERRORED_TETHER:Ljava/lang/String;,max-target-r
Landroid/net/ConnectivityManager;->EXTRA_EXTRA_INFO:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->EXTRA_INET_CONDITION:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->EXTRA_IS_ACTIVE:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->EXTRA_IS_CAPTIVE_PORTAL:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->EXTRA_IS_FAILOVER:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->EXTRA_NETWORK:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->EXTRA_NETWORK_INFO:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->EXTRA_NETWORK_REQUEST:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->EXTRA_NETWORK_TYPE:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->EXTRA_NO_CONNECTIVITY:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->EXTRA_OTHER_NETWORK_INFO:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->EXTRA_PROVISION_CALLBACK:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->EXTRA_REALTIME_NS:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->EXTRA_REASON:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->EXTRA_REM_TETHER_TYPE:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->EXTRA_RUN_PROVISION:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->EXTRA_SET_ALARM:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->INET_CONDITION_ACTION:Ljava/lang/String;,unsupported
Landroid/net/ConnectivityManager;->MAX_NETWORK_TYPE:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->MAX_RADIO_TYPE:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->MIN_NETWORK_TYPE:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->MULTIPATH_PREFERENCE_HANDOVER:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->MULTIPATH_PREFERENCE_PERFORMANCE:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->MULTIPATH_PREFERENCE_RELIABILITY:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->MULTIPATH_PREFERENCE_UNMETERED:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->NETID_UNSET:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->PROFILE_NETWORK_PREFERENCE_DEFAULT:I,blocked
Landroid/net/ConnectivityManager;->PROFILE_NETWORK_PREFERENCE_ENTERPRISE:I,blocked
Landroid/net/ConnectivityManager;->REQUEST_ID_UNSET:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->RESTRICT_BACKGROUND_STATUS_DISABLED:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->RESTRICT_BACKGROUND_STATUS_ENABLED:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->RESTRICT_BACKGROUND_STATUS_WHITELISTED:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TAG:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->TETHERING_BLUETOOTH:I,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TETHERING_INVALID:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->TETHERING_USB:I,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TETHERING_WIFI:I,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TETHERING_WIFI_P2P:I,blocked
Landroid/net/ConnectivityManager;->TETHER_ERROR_DHCPSERVER_ERROR:I,blocked
Landroid/net/ConnectivityManager;->TETHER_ERROR_DISABLE_NAT_ERROR:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->TETHER_ERROR_ENABLE_NAT_ERROR:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->TETHER_ERROR_ENTITLEMENT_UNKONWN:I,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TETHER_ERROR_IFACE_CFG_ERROR:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->TETHER_ERROR_MASTER_ERROR:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->TETHER_ERROR_NO_ERROR:I,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TETHER_ERROR_PROVISION_FAILED:I,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TETHER_ERROR_SERVICE_UNAVAIL:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->TETHER_ERROR_TETHER_IFACE_ERROR:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->TETHER_ERROR_UNAVAIL_IFACE:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->TETHER_ERROR_UNKNOWN_IFACE:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->TETHER_ERROR_UNSUPPORTED:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->TETHER_ERROR_UNTETHER_IFACE_ERROR:I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->TUN_INTF_NETID_RANGE:I,blocked
Landroid/net/ConnectivityManager;->TUN_INTF_NETID_START:I,blocked
Landroid/net/ConnectivityManager;->TYPE_BLUETOOTH:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TYPE_DUMMY:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TYPE_ETHERNET:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TYPE_MOBILE:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TYPE_MOBILE_CBS:I,max-target-p
Landroid/net/ConnectivityManager;->TYPE_MOBILE_DUN:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TYPE_MOBILE_EMERGENCY:I,max-target-p
Landroid/net/ConnectivityManager;->TYPE_MOBILE_FOTA:I,max-target-p
Landroid/net/ConnectivityManager;->TYPE_MOBILE_HIPRI:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TYPE_MOBILE_IA:I,unsupported
Landroid/net/ConnectivityManager;->TYPE_MOBILE_IMS:I,unsupported
Landroid/net/ConnectivityManager;->TYPE_MOBILE_MMS:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TYPE_MOBILE_SUPL:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TYPE_NONE:I,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TYPE_PROXY:I,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TYPE_TEST:I,blocked
Landroid/net/ConnectivityManager;->TYPE_VPN:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TYPE_WIFI:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TYPE_WIFI_P2P:I,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->TYPE_WIMAX:I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->access$1000()Landroid/net/NetworkRequest;,blocked
Landroid/net/ConnectivityManager;->access$400(Landroid/net/ConnectivityManager;)Landroid/net/IConnectivityManager;,blocked
Landroid/net/ConnectivityManager;->access$700(Landroid/net/ConnectivityManager;Landroid/net/NetworkCapabilities;I)V,blocked
Landroid/net/ConnectivityManager;->access$800()Ljava/util/HashMap;,blocked
Landroid/net/ConnectivityManager;->addDefaultNetworkActiveListener(Landroid/net/ConnectivityManager$OnNetworkActiveListener;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->bindProcessToNetwork(Landroid/net/Network;)Z,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->checkAndNoteWriteSettingsOperation(Landroid/content/Context;ILjava/lang/String;Ljava/lang/String;Z)Z,blocked
Landroid/net/ConnectivityManager;->checkCallbackNotNull(Landroid/net/ConnectivityManager$NetworkCallback;)V,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->checkLegacyRoutingApiAccess()V,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->checkPendingIntentNotNull(Landroid/app/PendingIntent;)V,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->checkTimeout(I)V,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->convertServiceException(Landroid/os/ServiceSpecificException;)Ljava/lang/RuntimeException;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->createDiagnosticsManager()Landroid/net/ConnectivityDiagnosticsManager;,blocked
Landroid/net/ConnectivityManager;->createInvalidFd()Landroid/os/ParcelFileDescriptor;,blocked
Landroid/net/ConnectivityManager;->createNattKeepalive(Landroid/net/Network;Landroid/os/ParcelFileDescriptor;Ljava/net/InetAddress;Ljava/net/InetAddress;Ljava/util/concurrent/Executor;Landroid/net/SocketKeepalive$Callback;)Landroid/net/SocketKeepalive;,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->createSocketKeepalive(Landroid/net/Network;Landroid/net/IpSecManager$UdpEncapsulationSocket;Ljava/net/InetAddress;Ljava/net/InetAddress;Ljava/util/concurrent/Executor;Landroid/net/SocketKeepalive$Callback;)Landroid/net/SocketKeepalive;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->createSocketKeepalive(Landroid/net/Network;Ljava/net/Socket;Ljava/util/concurrent/Executor;Landroid/net/SocketKeepalive$Callback;)Landroid/net/SocketKeepalive;,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->declareNetworkRequestUnfulfillable(Landroid/net/NetworkRequest;)V,blocked
Landroid/net/ConnectivityManager;->expireRequest(Landroid/net/NetworkCapabilities;I)V,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->factoryReset()V,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->findRequestForFeature(Landroid/net/NetworkCapabilities;)Landroid/net/NetworkRequest;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->from(Landroid/content/Context;)Landroid/net/ConnectivityManager;,unsupported
Landroid/net/ConnectivityManager;->getActiveLinkProperties()Landroid/net/LinkProperties;,max-target-p
Landroid/net/ConnectivityManager;->getActiveNetwork()Landroid/net/Network;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->getActiveNetworkForUid(I)Landroid/net/Network;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->getActiveNetworkForUid(IZ)Landroid/net/Network;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->getActiveNetworkInfoForUid(I)Landroid/net/NetworkInfo;,max-target-r
Landroid/net/ConnectivityManager;->getActiveNetworkInfoForUid(IZ)Landroid/net/NetworkInfo;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->getAllNetworkInfo()[Landroid/net/NetworkInfo;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->getAllNetworkStateSnapshots()Ljava/util/List;,blocked
Landroid/net/ConnectivityManager;->getAllNetworks()[Landroid/net/Network;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->getAttributionTag()Ljava/lang/String;,blocked
Landroid/net/ConnectivityManager;->getBackgroundDataSetting()Z,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->getBoundNetworkForProcess()Landroid/net/Network;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->getCallbackName(I)Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->getCaptivePortalServerUrl()Ljava/lang/String;,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->getConnectionOwnerUid(ILjava/net/InetSocketAddress;Ljava/net/InetSocketAddress;)I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->getDefaultHandler()Landroid/net/ConnectivityManager$CallbackHandler;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->getDefaultNetworkCapabilitiesForUser(I)[Landroid/net/NetworkCapabilities;,unsupported
Landroid/net/ConnectivityManager;->getDefaultProxy()Landroid/net/ProxyInfo;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->getDefaultRequest()Landroid/net/NetworkRequest;,blocked
Landroid/net/ConnectivityManager;->getGlobalProxy()Landroid/net/ProxyInfo;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->getInstance()Landroid/net/ConnectivityManager;,unsupported
Landroid/net/ConnectivityManager;->getInstanceOrNull()Landroid/net/ConnectivityManager;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->getIpSecNetIdRange()Landroid/util/Range;,blocked
Landroid/net/ConnectivityManager;->getLastTetherError(Ljava/lang/String;)I,max-target-r
Landroid/net/ConnectivityManager;->getLatestTetheringEntitlementResult(IZLjava/util/concurrent/Executor;Landroid/net/ConnectivityManager$OnTetheringEntitlementResultListener;)V,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->getLinkProperties(I)Landroid/net/LinkProperties;,max-target-p
Landroid/net/ConnectivityManager;->getLinkProperties(Landroid/net/Network;)Landroid/net/LinkProperties;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->getMobileDataEnabled()Z,unsupported
Landroid/net/ConnectivityManager;->getMultipathPreference(Landroid/net/Network;)I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->getNetworkCapabilities(Landroid/net/Network;)Landroid/net/NetworkCapabilities;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->getNetworkForType(I)Landroid/net/Network;,unsupported
Landroid/net/ConnectivityManager;->getNetworkInfo(I)Landroid/net/NetworkInfo;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->getNetworkInfo(Landroid/net/Network;)Landroid/net/NetworkInfo;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->getNetworkInfoForUid(Landroid/net/Network;IZ)Landroid/net/NetworkInfo;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->getNetworkPreference()I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->getNetworkTypeName(I)Ljava/lang/String;,max-target-r
Landroid/net/ConnectivityManager;->getNetworkWatchlistConfigHash()[B,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->getProcessDefaultNetwork()Landroid/net/Network;,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->getProxyForNetwork(Landroid/net/Network;)Landroid/net/ProxyInfo;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->getQosCallbackConnection(Landroid/net/QosCallback;)Landroid/net/QosCallbackConnection;,blocked
Landroid/net/ConnectivityManager;->getRestrictBackgroundStatus()I,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->getTetherableBluetoothRegexs()[Ljava/lang/String;,unsupported
Landroid/net/ConnectivityManager;->getTetherableIfaces()[Ljava/lang/String;,unsupported
Landroid/net/ConnectivityManager;->getTetherableUsbRegexs()[Ljava/lang/String;,unsupported
Landroid/net/ConnectivityManager;->getTetherableWifiRegexs()[Ljava/lang/String;,unsupported
Landroid/net/ConnectivityManager;->getTetheredDhcpRanges()[Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->getTetheredIfaces()[Ljava/lang/String;,unsupported
Landroid/net/ConnectivityManager;->getTetheringErroredIfaces()[Ljava/lang/String;,unsupported
Landroid/net/ConnectivityManager;->getTetheringManager()Landroid/net/TetheringManager;,blocked
Landroid/net/ConnectivityManager;->isActiveNetworkMetered()Z,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->isDefaultNetworkActive()Z,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->isNetworkSupported(I)Z,max-target-p
Landroid/net/ConnectivityManager;->isNetworkTypeMobile(I)Z,max-target-p
Landroid/net/ConnectivityManager;->isNetworkTypeValid(I)Z,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->isNetworkTypeWifi(I)Z,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->isTetheringSupported()Z,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->legacyTypeForNetworkCapabilities(Landroid/net/NetworkCapabilities;)I,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->mContext:Landroid/content/Context;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->mNetworkActivityListeners:Landroid/util/ArrayMap;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->mQosCallbackConnections:Ljava/util/List;,blocked
Landroid/net/ConnectivityManager;->mService:Landroid/net/IConnectivityManager;,max-target-p
Landroid/net/ConnectivityManager;->mTetheringEventCallbacks:Landroid/util/ArrayMap;,blocked
Landroid/net/ConnectivityManager;->mTetheringManager:Landroid/net/TetheringManager;,blocked
Landroid/net/ConnectivityManager;->networkCapabilitiesForFeature(ILjava/lang/String;)Landroid/net/NetworkCapabilities;,max-target-r
Landroid/net/ConnectivityManager;->networkCapabilitiesForType(I)Landroid/net/NetworkCapabilities;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->offerNetwork(ILandroid/net/NetworkScore;Landroid/net/NetworkCapabilities;Landroid/net/INetworkOfferCallback;)V,blocked
Landroid/net/ConnectivityManager;->printStackTrace()V,blocked
Landroid/net/ConnectivityManager;->registerBestMatchingNetworkCallback(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager$NetworkCallback;Landroid/os/Handler;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->registerDefaultNetworkCallback(Landroid/net/ConnectivityManager$NetworkCallback;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->registerDefaultNetworkCallback(Landroid/net/ConnectivityManager$NetworkCallback;Landroid/os/Handler;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->registerDefaultNetworkCallbackForUid(ILandroid/net/ConnectivityManager$NetworkCallback;Landroid/os/Handler;)V,blocked
Landroid/net/ConnectivityManager;->registerNetworkAgent(Landroid/net/INetworkAgent;Landroid/net/NetworkInfo;Landroid/net/LinkProperties;Landroid/net/NetworkCapabilities;Landroid/net/NetworkScore;Landroid/net/NetworkAgentConfig;I)Landroid/net/Network;,blocked
Landroid/net/ConnectivityManager;->registerNetworkCallback(Landroid/net/NetworkRequest;Landroid/app/PendingIntent;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->registerNetworkCallback(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager$NetworkCallback;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->registerNetworkCallback(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager$NetworkCallback;Landroid/os/Handler;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->registerNetworkProvider(Landroid/net/NetworkProvider;)I,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->registerQosCallback(Landroid/net/QosSocketInfo;Ljava/util/concurrent/Executor;Landroid/net/QosCallback;)V,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->registerSystemDefaultNetworkCallback(Landroid/net/ConnectivityManager$NetworkCallback;Landroid/os/Handler;)V,blocked
Landroid/net/ConnectivityManager;->registerTetheringEventCallback(Ljava/util/concurrent/Executor;Landroid/net/ConnectivityManager$OnTetheringEventCallback;)V,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->releaseNetworkRequest(Landroid/app/PendingIntent;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->removeDefaultNetworkActiveListener(Landroid/net/ConnectivityManager$OnNetworkActiveListener;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->removeRequestForFeature(Landroid/net/NetworkCapabilities;)Z,max-target-r
Landroid/net/ConnectivityManager;->renewRequestLocked(Landroid/net/ConnectivityManager$LegacyRequest;)V,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->reportBadNetwork(Landroid/net/Network;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->reportInetCondition(II)V,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->reportNetworkConnectivity(Landroid/net/Network;Z)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->requestBackgroundNetwork(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager$NetworkCallback;Landroid/os/Handler;)V,blocked
Landroid/net/ConnectivityManager;->requestBandwidthUpdate(Landroid/net/Network;)Z,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->requestNetwork(Landroid/net/NetworkRequest;IILandroid/os/Handler;Landroid/net/ConnectivityManager$NetworkCallback;)V,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->requestNetwork(Landroid/net/NetworkRequest;Landroid/app/PendingIntent;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->requestNetwork(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager$NetworkCallback;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->requestNetwork(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager$NetworkCallback;I)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->requestNetwork(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager$NetworkCallback;Landroid/os/Handler;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->requestNetwork(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager$NetworkCallback;Landroid/os/Handler;I)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->requestNetworkForFeatureLocked(Landroid/net/NetworkCapabilities;)Landroid/net/NetworkRequest;,max-target-r
Landroid/net/ConnectivityManager;->requestRouteToHost(II)Z,removed,unsupported
Landroid/net/ConnectivityManager;->requestRouteToHostAddress(ILjava/net/InetAddress;)Z,unsupported
Landroid/net/ConnectivityManager;->sCallbackHandler:Landroid/net/ConnectivityManager$CallbackHandler;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->sCallbacks:Ljava/util/HashMap;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->sInstance:Landroid/net/ConnectivityManager;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->sLegacyRequests:Ljava/util/HashMap;,max-target-r
Landroid/net/ConnectivityManager;->sLegacyTypeToCapability:Landroid/util/SparseIntArray;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->sLegacyTypeToTransport:Landroid/util/SparseIntArray;,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->sendExpireMsgForFeature(Landroid/net/NetworkCapabilities;II)V,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->sendRequestForNetwork(ILandroid/net/NetworkCapabilities;Landroid/net/ConnectivityManager$NetworkCallback;ILandroid/net/NetworkRequest$Type;ILandroid/net/ConnectivityManager$CallbackHandler;)Landroid/net/NetworkRequest;,blocked
Landroid/net/ConnectivityManager;->sendRequestForNetwork(Landroid/net/NetworkCapabilities;Landroid/net/ConnectivityManager$NetworkCallback;ILandroid/net/NetworkRequest$Type;ILandroid/net/ConnectivityManager$CallbackHandler;)Landroid/net/NetworkRequest;,blocked
Landroid/net/ConnectivityManager;->setAcceptPartialConnectivity(Landroid/net/Network;ZZ)V,blocked
Landroid/net/ConnectivityManager;->setAcceptUnvalidated(Landroid/net/Network;ZZ)V,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->setAirplaneMode(Z)V,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->setAvoidUnvalidated(Landroid/net/Network;)V,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->setBackgroundDataSetting(Z)V,unsupported
Landroid/net/ConnectivityManager;->setGlobalProxy(Landroid/net/ProxyInfo;)V,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->setLegacyLockdownVpnEnabled(Z)V,blocked
Landroid/net/ConnectivityManager;->setNetworkPreference(I)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->setOemNetworkPreference(Landroid/net/OemNetworkPreferences;Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->setProcessDefaultNetwork(Landroid/net/Network;)Z,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->setProcessDefaultNetworkForHostResolution(Landroid/net/Network;)Z,max-target-r
Landroid/net/ConnectivityManager;->setProfileNetworkPreference(Landroid/os/UserHandle;ILjava/util/concurrent/Executor;Ljava/lang/Runnable;)V,blocked
Landroid/net/ConnectivityManager;->setProvisioningNotificationVisible(ZILjava/lang/String;)V,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->setRequireVpnForUids(ZLjava/util/Collection;)V,blocked
Landroid/net/ConnectivityManager;->setTestAllowBadWifiUntil(J)V,blocked
Landroid/net/ConnectivityManager;->setUsbTethering(Z)I,unsupported
Landroid/net/ConnectivityManager;->shouldAvoidBadWifi()Z,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->simulateDataStall(IJLandroid/net/Network;Landroid/os/PersistableBundle;)V,blocked
Landroid/net/ConnectivityManager;->startCaptivePortalApp(Landroid/net/Network;)V,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->startCaptivePortalApp(Landroid/net/Network;Landroid/os/Bundle;)V,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->startNattKeepalive(Landroid/net/Network;ILandroid/net/ConnectivityManager$PacketKeepaliveCallback;Ljava/net/InetAddress;ILjava/net/InetAddress;)Landroid/net/ConnectivityManager$PacketKeepalive;,max-target-r
Landroid/net/ConnectivityManager;->startOrGetTestNetworkManager()Landroid/net/TestNetworkManager;,blocked
Landroid/net/ConnectivityManager;->startTethering(IZLandroid/net/ConnectivityManager$OnStartTetheringCallback;)V,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->startTethering(IZLandroid/net/ConnectivityManager$OnStartTetheringCallback;Landroid/os/Handler;)V,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->startUsingNetworkFeature(ILjava/lang/String;)I,removed,unsupported
Landroid/net/ConnectivityManager;->stopTethering(I)V,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->stopUsingNetworkFeature(ILjava/lang/String;)I,removed,unsupported
Landroid/net/ConnectivityManager;->systemReady()V,blocked
Landroid/net/ConnectivityManager;->tether(Ljava/lang/String;)I,max-target-r
Landroid/net/ConnectivityManager;->unofferNetwork(Landroid/net/INetworkOfferCallback;)V,blocked
Landroid/net/ConnectivityManager;->unregisterNetworkCallback(Landroid/app/PendingIntent;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->unregisterNetworkCallback(Landroid/net/ConnectivityManager$NetworkCallback;)V,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->unregisterNetworkProvider(Landroid/net/NetworkProvider;)V,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->unregisterQosCallback(Landroid/net/QosCallback;)V,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->unregisterTetheringEventCallback(Landroid/net/ConnectivityManager$OnTetheringEventCallback;)V,sdk,system-api,test-api
Landroid/net/ConnectivityManager;->unsupportedStartingFrom(I)V,lo-prio,max-target-o
Landroid/net/ConnectivityManager;->untether(Ljava/lang/String;)I,unsupported
Landroid/net/ConnectivityResources$$ExternalSyntheticLambda0;-><clinit>()V,blocked
Landroid/net/ConnectivityResources$$ExternalSyntheticLambda0;-><init>()V,blocked
Landroid/net/ConnectivityResources$$ExternalSyntheticLambda0;->INSTANCE:Landroid/net/ConnectivityResources$$ExternalSyntheticLambda0;,blocked
Landroid/net/ConnectivityResources$$ExternalSyntheticLambda0;->test(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/ConnectivityResources;-><clinit>()V,blocked
Landroid/net/ConnectivityResources;-><init>(Landroid/content/Context;)V,blocked
Landroid/net/ConnectivityResources;->RESOURCES_APK_INTENT:Ljava/lang/String;,blocked
Landroid/net/ConnectivityResources;->RES_PKG_DIR:Ljava/lang/String;,blocked
Landroid/net/ConnectivityResources;->get()Landroid/content/res/Resources;,blocked
Landroid/net/ConnectivityResources;->getResourcesContext()Landroid/content/Context;,blocked
Landroid/net/ConnectivityResources;->lambda$getResourcesContext$0(Landroid/content/pm/ResolveInfo;)Z,blocked
Landroid/net/ConnectivityResources;->mContext:Landroid/content/Context;,blocked
Landroid/net/ConnectivityResources;->mResourcesContext:Landroid/content/Context;,blocked
Landroid/net/ConnectivityResources;->sTestResourcesContext:Landroid/content/Context;,blocked
Landroid/net/ConnectivityResources;->setResourcesContextForTest(Landroid/content/Context;)V,blocked
Landroid/net/ConnectivitySettingsManager;-><init>()V,blocked
Landroid/net/ConnectivitySettingsManager;->CAPTIVE_PORTAL_HTTP_URL:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->CAPTIVE_PORTAL_MODE:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->CAPTIVE_PORTAL_MODE_AVOID:I,blocked
Landroid/net/ConnectivitySettingsManager;->CAPTIVE_PORTAL_MODE_IGNORE:I,blocked
Landroid/net/ConnectivitySettingsManager;->CAPTIVE_PORTAL_MODE_PROMPT:I,blocked
Landroid/net/ConnectivitySettingsManager;->CONNECTIVITY_RELEASE_PENDING_INTENT_DELAY_MS:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->DATA_ACTIVITY_TIMEOUT_MOBILE:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->DATA_ACTIVITY_TIMEOUT_WIFI:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->DNS_RESOLVER_DEFAULT_MAX_SAMPLES:I,blocked
Landroid/net/ConnectivitySettingsManager;->DNS_RESOLVER_DEFAULT_MIN_SAMPLES:I,blocked
Landroid/net/ConnectivitySettingsManager;->DNS_RESOLVER_MAX_SAMPLES:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->DNS_RESOLVER_MIN_SAMPLES:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->DNS_RESOLVER_SAMPLE_VALIDITY_SECONDS:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->DNS_RESOLVER_SUCCESS_THRESHOLD_PERCENT:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->GLOBAL_HTTP_PROXY_EXCLUSION_LIST:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->GLOBAL_HTTP_PROXY_HOST:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->GLOBAL_HTTP_PROXY_PAC:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->GLOBAL_HTTP_PROXY_PORT:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->MOBILE_DATA_ALWAYS_ON:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->MOBILE_DATA_PREFERRED_UIDS:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->NETWORK_AVOID_BAD_WIFI:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->NETWORK_AVOID_BAD_WIFI_AVOID:I,blocked
Landroid/net/ConnectivitySettingsManager;->NETWORK_AVOID_BAD_WIFI_IGNORE:I,blocked
Landroid/net/ConnectivitySettingsManager;->NETWORK_AVOID_BAD_WIFI_PROMPT:I,blocked
Landroid/net/ConnectivitySettingsManager;->NETWORK_METERED_MULTIPATH_PREFERENCE:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->NETWORK_SWITCH_NOTIFICATION_DAILY_LIMIT:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->NETWORK_SWITCH_NOTIFICATION_RATE_LIMIT_MILLIS:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->PRIVATE_DNS_DEFAULT_MODE:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->PRIVATE_DNS_MODE:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->PRIVATE_DNS_MODE_OFF:I,blocked
Landroid/net/ConnectivitySettingsManager;->PRIVATE_DNS_MODE_OPPORTUNISTIC:I,blocked
Landroid/net/ConnectivitySettingsManager;->PRIVATE_DNS_MODE_PROVIDER_HOSTNAME:I,blocked
Landroid/net/ConnectivitySettingsManager;->PRIVATE_DNS_SPECIFIER:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->UIDS_ALLOWED_ON_RESTRICTED_NETWORKS:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->WIFI_ALWAYS_REQUESTED:Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->clearGlobalProxy(Landroid/content/Context;)V,blocked
Landroid/net/ConnectivitySettingsManager;->getCaptivePortalHttpUrl(Landroid/content/Context;)Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->getCaptivePortalMode(Landroid/content/Context;I)I,blocked
Landroid/net/ConnectivitySettingsManager;->getConnectivityKeepPendingIntentDuration(Landroid/content/Context;Ljava/time/Duration;)Ljava/time/Duration;,blocked
Landroid/net/ConnectivitySettingsManager;->getDnsResolverSampleRanges(Landroid/content/Context;)Landroid/util/Range;,blocked
Landroid/net/ConnectivitySettingsManager;->getDnsResolverSampleValidityDuration(Landroid/content/Context;Ljava/time/Duration;)Ljava/time/Duration;,blocked
Landroid/net/ConnectivitySettingsManager;->getDnsResolverSuccessThresholdPercent(Landroid/content/Context;I)I,blocked
Landroid/net/ConnectivitySettingsManager;->getGlobalProxy(Landroid/content/Context;)Landroid/net/ProxyInfo;,blocked
Landroid/net/ConnectivitySettingsManager;->getMobileDataActivityTimeout(Landroid/content/Context;Ljava/time/Duration;)Ljava/time/Duration;,blocked
Landroid/net/ConnectivitySettingsManager;->getMobileDataAlwaysOn(Landroid/content/Context;Z)Z,blocked
Landroid/net/ConnectivitySettingsManager;->getMobileDataPreferredUids(Landroid/content/Context;)Ljava/util/Set;,blocked
Landroid/net/ConnectivitySettingsManager;->getNetworkAvoidBadWifi(Landroid/content/Context;)I,blocked
Landroid/net/ConnectivitySettingsManager;->getNetworkMeteredMultipathPreference(Landroid/content/Context;)Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->getNetworkSwitchNotificationMaximumDailyCount(Landroid/content/Context;I)I,blocked
Landroid/net/ConnectivitySettingsManager;->getNetworkSwitchNotificationRateDuration(Landroid/content/Context;Ljava/time/Duration;)Ljava/time/Duration;,blocked
Landroid/net/ConnectivitySettingsManager;->getPrivateDnsDefaultMode(Landroid/content/Context;)Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->getPrivateDnsHostname(Landroid/content/Context;)Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->getPrivateDnsMode(Landroid/content/Context;)I,blocked
Landroid/net/ConnectivitySettingsManager;->getUidSetFromString(Ljava/lang/String;)Ljava/util/Set;,blocked
Landroid/net/ConnectivitySettingsManager;->getUidStringFromSet(Ljava/util/Set;)Ljava/lang/String;,blocked
Landroid/net/ConnectivitySettingsManager;->getUidsAllowedOnRestrictedNetworks(Landroid/content/Context;)Ljava/util/Set;,blocked
Landroid/net/ConnectivitySettingsManager;->getWifiAlwaysRequested(Landroid/content/Context;Z)Z,blocked
Landroid/net/ConnectivitySettingsManager;->getWifiDataActivityTimeout(Landroid/content/Context;Ljava/time/Duration;)Ljava/time/Duration;,blocked
Landroid/net/ConnectivitySettingsManager;->isCallingFromSystem()Z,blocked
Landroid/net/ConnectivitySettingsManager;->setCaptivePortalHttpUrl(Landroid/content/Context;Ljava/lang/String;)V,blocked
Landroid/net/ConnectivitySettingsManager;->setCaptivePortalMode(Landroid/content/Context;I)V,blocked
Landroid/net/ConnectivitySettingsManager;->setConnectivityKeepPendingIntentDuration(Landroid/content/Context;Ljava/time/Duration;)V,blocked
Landroid/net/ConnectivitySettingsManager;->setDnsResolverSampleRanges(Landroid/content/Context;Landroid/util/Range;)V,blocked
Landroid/net/ConnectivitySettingsManager;->setDnsResolverSampleValidityDuration(Landroid/content/Context;Ljava/time/Duration;)V,blocked
Landroid/net/ConnectivitySettingsManager;->setDnsResolverSuccessThresholdPercent(Landroid/content/Context;I)V,blocked
Landroid/net/ConnectivitySettingsManager;->setGlobalProxy(Landroid/content/Context;Landroid/net/ProxyInfo;)V,blocked
Landroid/net/ConnectivitySettingsManager;->setMobileDataActivityTimeout(Landroid/content/Context;Ljava/time/Duration;)V,blocked
Landroid/net/ConnectivitySettingsManager;->setMobileDataAlwaysOn(Landroid/content/Context;Z)V,blocked
Landroid/net/ConnectivitySettingsManager;->setMobileDataPreferredUids(Landroid/content/Context;Ljava/util/Set;)V,blocked
Landroid/net/ConnectivitySettingsManager;->setNetworkAvoidBadWifi(Landroid/content/Context;I)V,blocked
Landroid/net/ConnectivitySettingsManager;->setNetworkMeteredMultipathPreference(Landroid/content/Context;Ljava/lang/String;)V,blocked
Landroid/net/ConnectivitySettingsManager;->setNetworkSwitchNotificationMaximumDailyCount(Landroid/content/Context;I)V,blocked
Landroid/net/ConnectivitySettingsManager;->setNetworkSwitchNotificationRateDuration(Landroid/content/Context;Ljava/time/Duration;)V,blocked
Landroid/net/ConnectivitySettingsManager;->setPrivateDnsDefaultMode(Landroid/content/Context;I)V,blocked
Landroid/net/ConnectivitySettingsManager;->setPrivateDnsHostname(Landroid/content/Context;Ljava/lang/String;)V,blocked
Landroid/net/ConnectivitySettingsManager;->setPrivateDnsMode(Landroid/content/Context;I)V,blocked
Landroid/net/ConnectivitySettingsManager;->setUidsAllowedOnRestrictedNetworks(Landroid/content/Context;Ljava/util/Set;)V,blocked
Landroid/net/ConnectivitySettingsManager;->setWifiAlwaysRequested(Landroid/content/Context;Z)V,blocked
Landroid/net/ConnectivitySettingsManager;->setWifiDataActivityTimeout(Landroid/content/Context;Ljava/time/Duration;)V,blocked
Landroid/net/ConnectivityThread$Singleton;-><clinit>()V,blocked
Landroid/net/ConnectivityThread$Singleton;-><init>()V,lo-prio,max-target-o
Landroid/net/ConnectivityThread$Singleton;->INSTANCE:Landroid/net/ConnectivityThread;,lo-prio,max-target-o
Landroid/net/ConnectivityThread$Singleton;->access$100()Landroid/net/ConnectivityThread;,blocked
Landroid/net/ConnectivityThread;-><init>()V,lo-prio,max-target-o
Landroid/net/ConnectivityThread;->access$000()Landroid/net/ConnectivityThread;,blocked
Landroid/net/ConnectivityThread;->createInstance()Landroid/net/ConnectivityThread;,lo-prio,max-target-o
Landroid/net/ConnectivityThread;->get()Landroid/net/ConnectivityThread;,lo-prio,max-target-o
Landroid/net/ConnectivityThread;->getInstanceLooper()Landroid/os/Looper;,lo-prio,max-target-o
Landroid/net/DhcpInfo$1;-><init>()V,blocked
Landroid/net/DhcpInfo$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/DhcpInfo;,blocked
Landroid/net/DhcpInfo$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/DhcpInfo$1;->newArray(I)[Landroid/net/DhcpInfo;,blocked
Landroid/net/DhcpInfo$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/DhcpInfo;-><clinit>()V,blocked
Landroid/net/DhcpInfo;-><init>()V,public-api,sdk,system-api,test-api
Landroid/net/DhcpInfo;-><init>(Landroid/net/DhcpInfo;)V,lo-prio,max-target-o
Landroid/net/DhcpInfo;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,sdk,system-api,test-api
Landroid/net/DhcpInfo;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/DhcpInfo;->dns1:I,public-api,sdk,system-api,test-api
Landroid/net/DhcpInfo;->dns2:I,public-api,sdk,system-api,test-api
Landroid/net/DhcpInfo;->gateway:I,public-api,sdk,system-api,test-api
Landroid/net/DhcpInfo;->ipAddress:I,public-api,sdk,system-api,test-api
Landroid/net/DhcpInfo;->leaseDuration:I,public-api,sdk,system-api,test-api
Landroid/net/DhcpInfo;->netmask:I,public-api,sdk,system-api,test-api
Landroid/net/DhcpInfo;->putAddress(Ljava/lang/StringBuffer;I)V,lo-prio,max-target-o
Landroid/net/DhcpInfo;->serverAddress:I,public-api,sdk,system-api,test-api
Landroid/net/DhcpInfo;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/DhcpInfo;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver$$ExternalSyntheticLambda0;-><init>(Landroid/net/DnsResolver;Ljava/lang/Object;Ljava/io/FileDescriptor;)V,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda0;->f$0:Landroid/net/DnsResolver;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda0;->f$1:Ljava/lang/Object;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda0;->f$2:Ljava/io/FileDescriptor;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda0;->onCancel()V,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver$$ExternalSyntheticLambda10;-><init>(Ljava/lang/Object;Landroid/os/CancellationSignal;Ljava/io/FileDescriptor;Landroid/net/DnsResolver$Callback;)V,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda10;->f$0:Ljava/lang/Object;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda10;->f$1:Landroid/os/CancellationSignal;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda10;->f$2:Ljava/io/FileDescriptor;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda10;->f$3:Landroid/net/DnsResolver$Callback;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda10;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver$$ExternalSyntheticLambda1;-><init>(Landroid/net/DnsResolver;Ljava/lang/Object;ZLjava/io/FileDescriptor;ZLjava/io/FileDescriptor;)V,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda1;->f$0:Landroid/net/DnsResolver;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda1;->f$1:Ljava/lang/Object;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda1;->f$2:Z,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda1;->f$3:Ljava/io/FileDescriptor;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda1;->f$4:Z,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda1;->f$5:Ljava/io/FileDescriptor;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda1;->onCancel()V,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver$$ExternalSyntheticLambda2;-><init>(Landroid/os/MessageQueue;Ljava/util/concurrent/Executor;Ljava/lang/Object;Landroid/os/CancellationSignal;Landroid/net/DnsResolver$Callback;)V,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda2;->f$0:Landroid/os/MessageQueue;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda2;->f$1:Ljava/util/concurrent/Executor;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda2;->f$2:Ljava/lang/Object;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda2;->f$3:Landroid/os/CancellationSignal;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda2;->f$4:Landroid/net/DnsResolver$Callback;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda2;->onFileDescriptorEvents(Ljava/io/FileDescriptor;I)I,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver$$ExternalSyntheticLambda3;-><init>(Landroid/net/DnsResolver$Callback;)V,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda3;->f$0:Landroid/net/DnsResolver$Callback;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda3;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver$$ExternalSyntheticLambda4;-><init>(Landroid/net/DnsResolver$Callback;Landroid/system/ErrnoException;)V,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda4;->f$0:Landroid/net/DnsResolver$Callback;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda4;->f$1:Landroid/system/ErrnoException;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda4;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver$$ExternalSyntheticLambda5;-><init>(Landroid/net/DnsResolver$Callback;Landroid/system/ErrnoException;)V,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda5;->f$0:Landroid/net/DnsResolver$Callback;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda5;->f$1:Landroid/system/ErrnoException;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda5;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver$$ExternalSyntheticLambda6;-><init>(Landroid/net/DnsResolver$Callback;Landroid/system/ErrnoException;)V,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda6;->f$0:Landroid/net/DnsResolver$Callback;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda6;->f$1:Landroid/system/ErrnoException;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda6;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver$$ExternalSyntheticLambda7;-><init>(Landroid/net/DnsResolver$Callback;Landroid/system/ErrnoException;)V,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda7;->f$0:Landroid/net/DnsResolver$Callback;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda7;->f$1:Landroid/system/ErrnoException;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda7;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver$$ExternalSyntheticLambda8;-><init>(Landroid/net/DnsResolver$Callback;Landroid/system/ErrnoException;)V,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda8;->f$0:Landroid/net/DnsResolver$Callback;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda8;->f$1:Landroid/system/ErrnoException;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda8;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver$$ExternalSyntheticLambda9;-><init>(Landroid/net/DnsResolver$Callback;Landroid/system/ErrnoException;)V,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda9;->f$0:Landroid/net/DnsResolver$Callback;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda9;->f$1:Landroid/system/ErrnoException;,blocked
Landroid/net/DnsResolver$$ExternalSyntheticLambda9;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver$Callback;->onAnswer(Ljava/lang/Object;I)V,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver$Callback;->onError(Landroid/net/DnsResolver$DnsException;)V,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver$DnsAddressAnswer;-><init>([B)V,blocked
Landroid/net/DnsResolver$DnsAddressAnswer;->DBG:Z,blocked
Landroid/net/DnsResolver$DnsAddressAnswer;->TAG:Ljava/lang/String;,blocked
Landroid/net/DnsResolver$DnsAddressAnswer;->getAddresses()Ljava/util/List;,blocked
Landroid/net/DnsResolver$DnsAddressAnswer;->mQueryType:I,blocked
Landroid/net/DnsResolver$DnsException;-><init>(ILjava/lang/Throwable;)V,blocked
Landroid/net/DnsResolver$DnsException;->code:I,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver$DnsResponse;-><init>([BI)V,blocked
Landroid/net/DnsResolver$DnsResponse;->answerbuf:[B,blocked
Landroid/net/DnsResolver$DnsResponse;->rcode:I,blocked
Landroid/net/DnsResolver$InetAddressAnswerAccumulator;-><init>(Landroid/net/DnsResolver;Landroid/net/Network;ILandroid/net/DnsResolver$Callback;)V,blocked
Landroid/net/DnsResolver$InetAddressAnswerAccumulator;->mAllAnswers:Ljava/util/List;,blocked
Landroid/net/DnsResolver$InetAddressAnswerAccumulator;->mDnsException:Landroid/net/DnsResolver$DnsException;,blocked
Landroid/net/DnsResolver$InetAddressAnswerAccumulator;->mNetwork:Landroid/net/Network;,blocked
Landroid/net/DnsResolver$InetAddressAnswerAccumulator;->mRcode:I,blocked
Landroid/net/DnsResolver$InetAddressAnswerAccumulator;->mReceivedAnswerCount:I,blocked
Landroid/net/DnsResolver$InetAddressAnswerAccumulator;->mTargetAnswerCount:I,blocked
Landroid/net/DnsResolver$InetAddressAnswerAccumulator;->mUserCallback:Landroid/net/DnsResolver$Callback;,blocked
Landroid/net/DnsResolver$InetAddressAnswerAccumulator;->maybeReportAnswer()V,blocked
Landroid/net/DnsResolver$InetAddressAnswerAccumulator;->maybeReportError()Z,blocked
Landroid/net/DnsResolver$InetAddressAnswerAccumulator;->onAnswer(Ljava/lang/Object;I)V,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver$InetAddressAnswerAccumulator;->onAnswer([BI)V,blocked
Landroid/net/DnsResolver$InetAddressAnswerAccumulator;->onError(Landroid/net/DnsResolver$DnsException;)V,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver$InetAddressAnswerAccumulator;->this$0:Landroid/net/DnsResolver;,blocked
Landroid/net/DnsResolver;-><clinit>()V,blocked
Landroid/net/DnsResolver;-><init>()V,blocked
Landroid/net/DnsResolver;->CLASS_IN:I,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver;->ERROR_PARSE:I,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver;->ERROR_SYSTEM:I,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver;->FD_EVENTS:I,blocked
Landroid/net/DnsResolver;->FLAG_EMPTY:I,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver;->FLAG_NO_CACHE_LOOKUP:I,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver;->FLAG_NO_CACHE_STORE:I,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver;->FLAG_NO_RETRY:I,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver;->MAXPACKET:I,blocked
Landroid/net/DnsResolver;->NETID_UNSET:I,blocked
Landroid/net/DnsResolver;->SLEEP_TIME_MS:I,blocked
Landroid/net/DnsResolver;->TAG:Ljava/lang/String;,blocked
Landroid/net/DnsResolver;->TYPE_A:I,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver;->TYPE_AAAA:I,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver;->addCancellationSignal(Landroid/os/CancellationSignal;Ljava/io/FileDescriptor;Ljava/lang/Object;)V,blocked
Landroid/net/DnsResolver;->cancelQuery(Ljava/io/FileDescriptor;)V,blocked
Landroid/net/DnsResolver;->getInstance()Landroid/net/DnsResolver;,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver;->lambda$addCancellationSignal$10$DnsResolver(Ljava/lang/Object;Ljava/io/FileDescriptor;)V,blocked
Landroid/net/DnsResolver;->lambda$query$2(Landroid/net/DnsResolver$Callback;Landroid/system/ErrnoException;)V,blocked
Landroid/net/DnsResolver;->lambda$query$3(Landroid/net/DnsResolver$Callback;)V,blocked
Landroid/net/DnsResolver;->lambda$query$4(Landroid/net/DnsResolver$Callback;Landroid/system/ErrnoException;)V,blocked
Landroid/net/DnsResolver;->lambda$query$5(Landroid/net/DnsResolver$Callback;Landroid/system/ErrnoException;)V,blocked
Landroid/net/DnsResolver;->lambda$query$6$DnsResolver(Ljava/lang/Object;ZLjava/io/FileDescriptor;ZLjava/io/FileDescriptor;)V,blocked
Landroid/net/DnsResolver;->lambda$query$7(Landroid/net/DnsResolver$Callback;Landroid/system/ErrnoException;)V,blocked
Landroid/net/DnsResolver;->lambda$rawQuery$0(Landroid/net/DnsResolver$Callback;Landroid/system/ErrnoException;)V,blocked
Landroid/net/DnsResolver;->lambda$rawQuery$1(Landroid/net/DnsResolver$Callback;Landroid/system/ErrnoException;)V,blocked
Landroid/net/DnsResolver;->lambda$registerFDListener$8(Ljava/lang/Object;Landroid/os/CancellationSignal;Ljava/io/FileDescriptor;Landroid/net/DnsResolver$Callback;)V,blocked
Landroid/net/DnsResolver;->lambda$registerFDListener$9(Landroid/os/MessageQueue;Ljava/util/concurrent/Executor;Ljava/lang/Object;Landroid/os/CancellationSignal;Landroid/net/DnsResolver$Callback;Ljava/io/FileDescriptor;I)I,blocked
Landroid/net/DnsResolver;->query(Landroid/net/Network;Ljava/lang/String;IILjava/util/concurrent/Executor;Landroid/os/CancellationSignal;Landroid/net/DnsResolver$Callback;)V,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver;->query(Landroid/net/Network;Ljava/lang/String;ILjava/util/concurrent/Executor;Landroid/os/CancellationSignal;Landroid/net/DnsResolver$Callback;)V,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver;->rawQuery(Landroid/net/Network;Ljava/lang/String;IIILjava/util/concurrent/Executor;Landroid/os/CancellationSignal;Landroid/net/DnsResolver$Callback;)V,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver;->rawQuery(Landroid/net/Network;[BILjava/util/concurrent/Executor;Landroid/os/CancellationSignal;Landroid/net/DnsResolver$Callback;)V,public-api,sdk,system-api,test-api
Landroid/net/DnsResolver;->registerFDListener(Ljava/util/concurrent/Executor;Ljava/io/FileDescriptor;Landroid/net/DnsResolver$Callback;Landroid/os/CancellationSignal;Ljava/lang/Object;)V,blocked
Landroid/net/DnsResolver;->sInstance:Landroid/net/DnsResolver;,blocked
Landroid/net/DnsResolverServiceManager;-><init>(Landroid/os/IBinder;)V,blocked
Landroid/net/DnsResolverServiceManager;->DNS_RESOLVER_SERVICE:Ljava/lang/String;,blocked
Landroid/net/DnsResolverServiceManager;->getService()Landroid/os/IBinder;,blocked
Landroid/net/DnsResolverServiceManager;->mResolver:Landroid/os/IBinder;,blocked
Landroid/net/ICaptivePortal$Default;-><init>()V,blocked
Landroid/net/ICaptivePortal$Default;->appRequest(I)V,blocked
Landroid/net/ICaptivePortal$Default;->appResponse(I)V,blocked
Landroid/net/ICaptivePortal$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/ICaptivePortal$Stub$Proxy;-><init>(Landroid/os/IBinder;)V,lo-prio,max-target-o
Landroid/net/ICaptivePortal$Stub$Proxy;->appRequest(I)V,blocked
Landroid/net/ICaptivePortal$Stub$Proxy;->appResponse(I)V,lo-prio,max-target-o
Landroid/net/ICaptivePortal$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/ICaptivePortal$Stub$Proxy;->getInterfaceDescriptor()Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ICaptivePortal$Stub$Proxy;->mRemote:Landroid/os/IBinder;,lo-prio,max-target-o
Landroid/net/ICaptivePortal$Stub$Proxy;->sDefaultImpl:Landroid/net/ICaptivePortal;,blocked
Landroid/net/ICaptivePortal$Stub;-><init>()V,lo-prio,max-target-o
Landroid/net/ICaptivePortal$Stub;->DESCRIPTOR:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ICaptivePortal$Stub;->TRANSACTION_appRequest:I,blocked
Landroid/net/ICaptivePortal$Stub;->TRANSACTION_appResponse:I,lo-prio,max-target-o
Landroid/net/ICaptivePortal$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/ICaptivePortal$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/ICaptivePortal;,lo-prio,max-target-o
Landroid/net/ICaptivePortal$Stub;->getDefaultImpl()Landroid/net/ICaptivePortal;,blocked
Landroid/net/ICaptivePortal$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/net/ICaptivePortal$Stub;->setDefaultImpl(Landroid/net/ICaptivePortal;)Z,blocked
Landroid/net/ICaptivePortal;->appRequest(I)V,blocked
Landroid/net/ICaptivePortal;->appResponse(I)V,lo-prio,max-target-o
Landroid/net/IConnectivityDiagnosticsCallback$Default;-><init>()V,blocked
Landroid/net/IConnectivityDiagnosticsCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/IConnectivityDiagnosticsCallback$Default;->onConnectivityReportAvailable(Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;)V,blocked
Landroid/net/IConnectivityDiagnosticsCallback$Default;->onDataStallSuspected(Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;)V,blocked
Landroid/net/IConnectivityDiagnosticsCallback$Default;->onNetworkConnectivityReported(Landroid/net/Network;Z)V,blocked
Landroid/net/IConnectivityDiagnosticsCallback$Stub$Proxy;-><init>(Landroid/os/IBinder;)V,blocked
Landroid/net/IConnectivityDiagnosticsCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/IConnectivityDiagnosticsCallback$Stub$Proxy;->getInterfaceDescriptor()Ljava/lang/String;,blocked
Landroid/net/IConnectivityDiagnosticsCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;,blocked
Landroid/net/IConnectivityDiagnosticsCallback$Stub$Proxy;->onConnectivityReportAvailable(Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;)V,blocked
Landroid/net/IConnectivityDiagnosticsCallback$Stub$Proxy;->onDataStallSuspected(Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;)V,blocked
Landroid/net/IConnectivityDiagnosticsCallback$Stub$Proxy;->onNetworkConnectivityReported(Landroid/net/Network;Z)V,blocked
Landroid/net/IConnectivityDiagnosticsCallback$Stub$Proxy;->sDefaultImpl:Landroid/net/IConnectivityDiagnosticsCallback;,blocked
Landroid/net/IConnectivityDiagnosticsCallback$Stub;-><init>()V,blocked
Landroid/net/IConnectivityDiagnosticsCallback$Stub;->TRANSACTION_onConnectivityReportAvailable:I,blocked
Landroid/net/IConnectivityDiagnosticsCallback$Stub;->TRANSACTION_onDataStallSuspected:I,blocked
Landroid/net/IConnectivityDiagnosticsCallback$Stub;->TRANSACTION_onNetworkConnectivityReported:I,blocked
Landroid/net/IConnectivityDiagnosticsCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/IConnectivityDiagnosticsCallback$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/IConnectivityDiagnosticsCallback;,blocked
Landroid/net/IConnectivityDiagnosticsCallback$Stub;->getDefaultImpl()Landroid/net/IConnectivityDiagnosticsCallback;,blocked
Landroid/net/IConnectivityDiagnosticsCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/net/IConnectivityDiagnosticsCallback$Stub;->setDefaultImpl(Landroid/net/IConnectivityDiagnosticsCallback;)Z,blocked
Landroid/net/IConnectivityDiagnosticsCallback;->DESCRIPTOR:Ljava/lang/String;,blocked
Landroid/net/IConnectivityDiagnosticsCallback;->onConnectivityReportAvailable(Landroid/net/ConnectivityDiagnosticsManager$ConnectivityReport;)V,blocked
Landroid/net/IConnectivityDiagnosticsCallback;->onDataStallSuspected(Landroid/net/ConnectivityDiagnosticsManager$DataStallReport;)V,blocked
Landroid/net/IConnectivityDiagnosticsCallback;->onNetworkConnectivityReported(Landroid/net/Network;Z)V,blocked
Landroid/net/IConnectivityManager$Default;-><init>()V,blocked
Landroid/net/IConnectivityManager$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/IConnectivityManager$Default;->declareNetworkRequestUnfulfillable(Landroid/net/NetworkRequest;)V,blocked
Landroid/net/IConnectivityManager$Default;->factoryReset()V,blocked
Landroid/net/IConnectivityManager$Default;->getActiveLinkProperties()Landroid/net/LinkProperties;,blocked
Landroid/net/IConnectivityManager$Default;->getActiveNetwork()Landroid/net/Network;,blocked
Landroid/net/IConnectivityManager$Default;->getActiveNetworkForUid(IZ)Landroid/net/Network;,blocked
Landroid/net/IConnectivityManager$Default;->getActiveNetworkInfo()Landroid/net/NetworkInfo;,blocked
Landroid/net/IConnectivityManager$Default;->getActiveNetworkInfoForUid(IZ)Landroid/net/NetworkInfo;,blocked
Landroid/net/IConnectivityManager$Default;->getAllNetworkInfo()[Landroid/net/NetworkInfo;,blocked
Landroid/net/IConnectivityManager$Default;->getAllNetworkState()[Landroid/net/NetworkState;,blocked
Landroid/net/IConnectivityManager$Default;->getAllNetworkStateSnapshots()Ljava/util/List;,blocked
Landroid/net/IConnectivityManager$Default;->getAllNetworks()[Landroid/net/Network;,blocked
Landroid/net/IConnectivityManager$Default;->getCaptivePortalServerUrl()Ljava/lang/String;,blocked
Landroid/net/IConnectivityManager$Default;->getConnectionOwnerUid(Landroid/net/ConnectionInfo;)I,blocked
Landroid/net/IConnectivityManager$Default;->getDefaultNetworkCapabilitiesForUser(ILjava/lang/String;Ljava/lang/String;)[Landroid/net/NetworkCapabilities;,blocked
Landroid/net/IConnectivityManager$Default;->getDefaultRequest()Landroid/net/NetworkRequest;,blocked
Landroid/net/IConnectivityManager$Default;->getGlobalProxy()Landroid/net/ProxyInfo;,blocked
Landroid/net/IConnectivityManager$Default;->getLastTetherError(Ljava/lang/String;)I,blocked
Landroid/net/IConnectivityManager$Default;->getLinkProperties(Landroid/net/Network;)Landroid/net/LinkProperties;,blocked
Landroid/net/IConnectivityManager$Default;->getLinkPropertiesForType(I)Landroid/net/LinkProperties;,blocked
Landroid/net/IConnectivityManager$Default;->getMultipathPreference(Landroid/net/Network;)I,blocked
Landroid/net/IConnectivityManager$Default;->getNetworkCapabilities(Landroid/net/Network;Ljava/lang/String;Ljava/lang/String;)Landroid/net/NetworkCapabilities;,blocked
Landroid/net/IConnectivityManager$Default;->getNetworkForType(I)Landroid/net/Network;,blocked
Landroid/net/IConnectivityManager$Default;->getNetworkInfo(I)Landroid/net/NetworkInfo;,blocked
Landroid/net/IConnectivityManager$Default;->getNetworkInfoForUid(Landroid/net/Network;IZ)Landroid/net/NetworkInfo;,blocked
Landroid/net/IConnectivityManager$Default;->getNetworkWatchlistConfigHash()[B,blocked
Landroid/net/IConnectivityManager$Default;->getProxyForNetwork(Landroid/net/Network;)Landroid/net/ProxyInfo;,blocked
Landroid/net/IConnectivityManager$Default;->getRestoreDefaultNetworkDelay(I)I,blocked
Landroid/net/IConnectivityManager$Default;->getRestrictBackgroundStatusByCaller()I,blocked
Landroid/net/IConnectivityManager$Default;->getTetherableIfaces()[Ljava/lang/String;,blocked
Landroid/net/IConnectivityManager$Default;->getTetherableUsbRegexs()[Ljava/lang/String;,blocked
Landroid/net/IConnectivityManager$Default;->getTetherableWifiRegexs()[Ljava/lang/String;,blocked
Landroid/net/IConnectivityManager$Default;->getTetheredIfaces()[Ljava/lang/String;,blocked
Landroid/net/IConnectivityManager$Default;->getTetheringErroredIfaces()[Ljava/lang/String;,blocked
Landroid/net/IConnectivityManager$Default;->isActiveNetworkMetered()Z,blocked
Landroid/net/IConnectivityManager$Default;->isDefaultNetworkActive()Z,blocked
Landroid/net/IConnectivityManager$Default;->isNetworkSupported(I)Z,blocked
Landroid/net/IConnectivityManager$Default;->listenForNetwork(Landroid/net/NetworkCapabilities;Landroid/os/Messenger;Landroid/os/IBinder;ILjava/lang/String;Ljava/lang/String;)Landroid/net/NetworkRequest;,blocked
Landroid/net/IConnectivityManager$Default;->offerNetwork(ILandroid/net/NetworkScore;Landroid/net/NetworkCapabilities;Landroid/net/INetworkOfferCallback;)V,blocked
Landroid/net/IConnectivityManager$Default;->pendingListenForNetwork(Landroid/net/NetworkCapabilities;Landroid/app/PendingIntent;Ljava/lang/String;Ljava/lang/String;)V,blocked
Landroid/net/IConnectivityManager$Default;->pendingRequestForNetwork(Landroid/net/NetworkCapabilities;Landroid/app/PendingIntent;Ljava/lang/String;Ljava/lang/String;)Landroid/net/NetworkRequest;,blocked
Landroid/net/IConnectivityManager$Default;->registerConnectivityDiagnosticsCallback(Landroid/net/IConnectivityDiagnosticsCallback;Landroid/net/NetworkRequest;Ljava/lang/String;)V,blocked
Landroid/net/IConnectivityManager$Default;->registerNetworkActivityListener(Landroid/net/INetworkActivityListener;)V,blocked
Landroid/net/IConnectivityManager$Default;->registerNetworkAgent(Landroid/net/INetworkAgent;Landroid/net/NetworkInfo;Landroid/net/LinkProperties;Landroid/net/NetworkCapabilities;Landroid/net/NetworkScore;Landroid/net/NetworkAgentConfig;I)Landroid/net/Network;,blocked
Landroid/net/IConnectivityManager$Default;->registerNetworkProvider(Landroid/os/Messenger;Ljava/lang/String;)I,blocked
Landroid/net/IConnectivityManager$Default;->registerQosSocketCallback(Landroid/net/QosSocketInfo;Landroid/net/IQosCallback;)V,blocked
Landroid/net/IConnectivityManager$Default;->releaseNetworkRequest(Landroid/net/NetworkRequest;)V,blocked
Landroid/net/IConnectivityManager$Default;->releasePendingNetworkRequest(Landroid/app/PendingIntent;)V,blocked
Landroid/net/IConnectivityManager$Default;->reportInetCondition(II)V,blocked
Landroid/net/IConnectivityManager$Default;->reportNetworkConnectivity(Landroid/net/Network;Z)V,blocked
Landroid/net/IConnectivityManager$Default;->requestBandwidthUpdate(Landroid/net/Network;)Z,blocked
Landroid/net/IConnectivityManager$Default;->requestNetwork(ILandroid/net/NetworkCapabilities;ILandroid/os/Messenger;ILandroid/os/IBinder;IILjava/lang/String;Ljava/lang/String;)Landroid/net/NetworkRequest;,blocked
Landroid/net/IConnectivityManager$Default;->requestRouteToHostAddress(I[BLjava/lang/String;Ljava/lang/String;)Z,blocked
Landroid/net/IConnectivityManager$Default;->setAcceptPartialConnectivity(Landroid/net/Network;ZZ)V,blocked
Landroid/net/IConnectivityManager$Default;->setAcceptUnvalidated(Landroid/net/Network;ZZ)V,blocked
Landroid/net/IConnectivityManager$Default;->setAirplaneMode(Z)V,blocked
Landroid/net/IConnectivityManager$Default;->setAvoidUnvalidated(Landroid/net/Network;)V,blocked
Landroid/net/IConnectivityManager$Default;->setGlobalProxy(Landroid/net/ProxyInfo;)V,blocked
Landroid/net/IConnectivityManager$Default;->setLegacyLockdownVpnEnabled(Z)V,blocked
Landroid/net/IConnectivityManager$Default;->setOemNetworkPreference(Landroid/net/OemNetworkPreferences;Landroid/net/IOnCompleteListener;)V,blocked
Landroid/net/IConnectivityManager$Default;->setProfileNetworkPreference(Landroid/os/UserHandle;ILandroid/net/IOnCompleteListener;)V,blocked
Landroid/net/IConnectivityManager$Default;->setProvisioningNotificationVisible(ZILjava/lang/String;)V,blocked
Landroid/net/IConnectivityManager$Default;->setRequireVpnForUids(Z[Landroid/net/UidRange;)V,blocked
Landroid/net/IConnectivityManager$Default;->setTestAllowBadWifiUntil(J)V,blocked
Landroid/net/IConnectivityManager$Default;->shouldAvoidBadWifi()Z,blocked
Landroid/net/IConnectivityManager$Default;->simulateDataStall(IJLandroid/net/Network;Landroid/os/PersistableBundle;)V,blocked
Landroid/net/IConnectivityManager$Default;->startCaptivePortalApp(Landroid/net/Network;)V,blocked
Landroid/net/IConnectivityManager$Default;->startCaptivePortalAppInternal(Landroid/net/Network;Landroid/os/Bundle;)V,blocked
Landroid/net/IConnectivityManager$Default;->startNattKeepalive(Landroid/net/Network;ILandroid/net/ISocketKeepaliveCallback;Ljava/lang/String;ILjava/lang/String;)V,blocked
Landroid/net/IConnectivityManager$Default;->startNattKeepaliveWithFd(Landroid/net/Network;Landroid/os/ParcelFileDescriptor;IILandroid/net/ISocketKeepaliveCallback;Ljava/lang/String;Ljava/lang/String;)V,blocked
Landroid/net/IConnectivityManager$Default;->startOrGetTestNetworkService()Landroid/os/IBinder;,blocked
Landroid/net/IConnectivityManager$Default;->startTcpKeepalive(Landroid/net/Network;Landroid/os/ParcelFileDescriptor;ILandroid/net/ISocketKeepaliveCallback;)V,blocked
Landroid/net/IConnectivityManager$Default;->stopKeepalive(Landroid/net/Network;I)V,blocked
Landroid/net/IConnectivityManager$Default;->systemReady()V,blocked
Landroid/net/IConnectivityManager$Default;->unofferNetwork(Landroid/net/INetworkOfferCallback;)V,blocked
Landroid/net/IConnectivityManager$Default;->unregisterConnectivityDiagnosticsCallback(Landroid/net/IConnectivityDiagnosticsCallback;)V,blocked
Landroid/net/IConnectivityManager$Default;->unregisterNetworkActivityListener(Landroid/net/INetworkActivityListener;)V,blocked
Landroid/net/IConnectivityManager$Default;->unregisterNetworkProvider(Landroid/os/Messenger;)V,blocked
Landroid/net/IConnectivityManager$Default;->unregisterQosCallback(Landroid/net/IQosCallback;)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;-><init>(Landroid/os/IBinder;)V,unsupported
Landroid/net/IConnectivityManager$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/IConnectivityManager$Stub$Proxy;->declareNetworkRequestUnfulfillable(Landroid/net/NetworkRequest;)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->factoryReset()V,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->getActiveLinkProperties()Landroid/net/LinkProperties;,unsupported
Landroid/net/IConnectivityManager$Stub$Proxy;->getActiveNetwork()Landroid/net/Network;,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->getActiveNetworkForUid(IZ)Landroid/net/Network;,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->getActiveNetworkInfo()Landroid/net/NetworkInfo;,unsupported
Landroid/net/IConnectivityManager$Stub$Proxy;->getActiveNetworkInfoForUid(IZ)Landroid/net/NetworkInfo;,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->getAllNetworkInfo()[Landroid/net/NetworkInfo;,unsupported
Landroid/net/IConnectivityManager$Stub$Proxy;->getAllNetworkState()[Landroid/net/NetworkState;,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->getAllNetworkStateSnapshots()Ljava/util/List;,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->getAllNetworks()[Landroid/net/Network;,unsupported
Landroid/net/IConnectivityManager$Stub$Proxy;->getCaptivePortalServerUrl()Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->getConnectionOwnerUid(Landroid/net/ConnectionInfo;)I,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->getDefaultNetworkCapabilitiesForUser(ILjava/lang/String;Ljava/lang/String;)[Landroid/net/NetworkCapabilities;,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->getDefaultRequest()Landroid/net/NetworkRequest;,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->getGlobalProxy()Landroid/net/ProxyInfo;,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->getInterfaceDescriptor()Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->getLastTetherError(Ljava/lang/String;)I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->getLinkProperties(Landroid/net/Network;)Landroid/net/LinkProperties;,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->getLinkPropertiesForType(I)Landroid/net/LinkProperties;,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->getMultipathPreference(Landroid/net/Network;)I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->getNetworkCapabilities(Landroid/net/Network;Ljava/lang/String;Ljava/lang/String;)Landroid/net/NetworkCapabilities;,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->getNetworkForType(I)Landroid/net/Network;,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->getNetworkInfo(I)Landroid/net/NetworkInfo;,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->getNetworkInfoForUid(Landroid/net/Network;IZ)Landroid/net/NetworkInfo;,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->getNetworkWatchlistConfigHash()[B,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->getProxyForNetwork(Landroid/net/Network;)Landroid/net/ProxyInfo;,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->getRestoreDefaultNetworkDelay(I)I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->getRestrictBackgroundStatusByCaller()I,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->getTetherableIfaces()[Ljava/lang/String;,unsupported
Landroid/net/IConnectivityManager$Stub$Proxy;->getTetherableUsbRegexs()[Ljava/lang/String;,unsupported
Landroid/net/IConnectivityManager$Stub$Proxy;->getTetherableWifiRegexs()[Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->getTetheredIfaces()[Ljava/lang/String;,unsupported
Landroid/net/IConnectivityManager$Stub$Proxy;->getTetheringErroredIfaces()[Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->isActiveNetworkMetered()Z,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->isDefaultNetworkActive()Z,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->isNetworkSupported(I)Z,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->listenForNetwork(Landroid/net/NetworkCapabilities;Landroid/os/Messenger;Landroid/os/IBinder;ILjava/lang/String;Ljava/lang/String;)Landroid/net/NetworkRequest;,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->mRemote:Landroid/os/IBinder;,unsupported
Landroid/net/IConnectivityManager$Stub$Proxy;->offerNetwork(ILandroid/net/NetworkScore;Landroid/net/NetworkCapabilities;Landroid/net/INetworkOfferCallback;)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->pendingListenForNetwork(Landroid/net/NetworkCapabilities;Landroid/app/PendingIntent;Ljava/lang/String;Ljava/lang/String;)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->pendingRequestForNetwork(Landroid/net/NetworkCapabilities;Landroid/app/PendingIntent;Ljava/lang/String;Ljava/lang/String;)Landroid/net/NetworkRequest;,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->registerConnectivityDiagnosticsCallback(Landroid/net/IConnectivityDiagnosticsCallback;Landroid/net/NetworkRequest;Ljava/lang/String;)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->registerNetworkActivityListener(Landroid/net/INetworkActivityListener;)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->registerNetworkAgent(Landroid/net/INetworkAgent;Landroid/net/NetworkInfo;Landroid/net/LinkProperties;Landroid/net/NetworkCapabilities;Landroid/net/NetworkScore;Landroid/net/NetworkAgentConfig;I)Landroid/net/Network;,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->registerNetworkProvider(Landroid/os/Messenger;Ljava/lang/String;)I,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->registerQosSocketCallback(Landroid/net/QosSocketInfo;Landroid/net/IQosCallback;)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->releaseNetworkRequest(Landroid/net/NetworkRequest;)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->releasePendingNetworkRequest(Landroid/app/PendingIntent;)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->reportInetCondition(II)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->reportNetworkConnectivity(Landroid/net/Network;Z)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->requestBandwidthUpdate(Landroid/net/Network;)Z,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->requestNetwork(ILandroid/net/NetworkCapabilities;ILandroid/os/Messenger;ILandroid/os/IBinder;IILjava/lang/String;Ljava/lang/String;)Landroid/net/NetworkRequest;,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->requestRouteToHostAddress(I[BLjava/lang/String;Ljava/lang/String;)Z,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->sDefaultImpl:Landroid/net/IConnectivityManager;,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->setAcceptPartialConnectivity(Landroid/net/Network;ZZ)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->setAcceptUnvalidated(Landroid/net/Network;ZZ)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->setAirplaneMode(Z)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->setAvoidUnvalidated(Landroid/net/Network;)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->setGlobalProxy(Landroid/net/ProxyInfo;)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->setLegacyLockdownVpnEnabled(Z)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->setOemNetworkPreference(Landroid/net/OemNetworkPreferences;Landroid/net/IOnCompleteListener;)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->setProfileNetworkPreference(Landroid/os/UserHandle;ILandroid/net/IOnCompleteListener;)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->setProvisioningNotificationVisible(ZILjava/lang/String;)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->setRequireVpnForUids(Z[Landroid/net/UidRange;)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->setTestAllowBadWifiUntil(J)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->shouldAvoidBadWifi()Z,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->simulateDataStall(IJLandroid/net/Network;Landroid/os/PersistableBundle;)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->startCaptivePortalApp(Landroid/net/Network;)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->startCaptivePortalAppInternal(Landroid/net/Network;Landroid/os/Bundle;)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->startNattKeepalive(Landroid/net/Network;ILandroid/net/ISocketKeepaliveCallback;Ljava/lang/String;ILjava/lang/String;)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->startNattKeepaliveWithFd(Landroid/net/Network;Landroid/os/ParcelFileDescriptor;IILandroid/net/ISocketKeepaliveCallback;Ljava/lang/String;Ljava/lang/String;)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->startOrGetTestNetworkService()Landroid/os/IBinder;,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->startTcpKeepalive(Landroid/net/Network;Landroid/os/ParcelFileDescriptor;ILandroid/net/ISocketKeepaliveCallback;)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->stopKeepalive(Landroid/net/Network;I)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub$Proxy;->systemReady()V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->unofferNetwork(Landroid/net/INetworkOfferCallback;)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->unregisterConnectivityDiagnosticsCallback(Landroid/net/IConnectivityDiagnosticsCallback;)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->unregisterNetworkActivityListener(Landroid/net/INetworkActivityListener;)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->unregisterNetworkProvider(Landroid/os/Messenger;)V,blocked
Landroid/net/IConnectivityManager$Stub$Proxy;->unregisterQosCallback(Landroid/net/IQosCallback;)V,blocked
Landroid/net/IConnectivityManager$Stub;-><init>()V,blocked
Landroid/net/IConnectivityManager$Stub;->DESCRIPTOR:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_declareNetworkRequestUnfulfillable:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_factoryReset:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getActiveLinkProperties:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getActiveNetwork:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getActiveNetworkForUid:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getActiveNetworkInfo:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getActiveNetworkInfoForUid:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getAllNetworkInfo:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getAllNetworkState:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getAllNetworkStateSnapshots:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getAllNetworks:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getCaptivePortalServerUrl:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getConnectionOwnerUid:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getDefaultNetworkCapabilitiesForUser:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getDefaultRequest:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getGlobalProxy:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getLastTetherError:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getLinkProperties:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getLinkPropertiesForType:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getMultipathPreference:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getNetworkCapabilities:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getNetworkForType:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getNetworkInfo:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getNetworkInfoForUid:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getNetworkWatchlistConfigHash:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getProxyForNetwork:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getRestoreDefaultNetworkDelay:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getRestrictBackgroundStatusByCaller:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getTetherableIfaces:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getTetherableUsbRegexs:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getTetherableWifiRegexs:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getTetheredIfaces:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_getTetheringErroredIfaces:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_isActiveNetworkMetered:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_isDefaultNetworkActive:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_isNetworkSupported:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_listenForNetwork:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_offerNetwork:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_pendingListenForNetwork:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_pendingRequestForNetwork:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_registerConnectivityDiagnosticsCallback:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_registerNetworkActivityListener:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_registerNetworkAgent:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_registerNetworkProvider:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_registerQosSocketCallback:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_releaseNetworkRequest:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_releasePendingNetworkRequest:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_reportInetCondition:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_reportNetworkConnectivity:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_requestBandwidthUpdate:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_requestNetwork:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_requestRouteToHostAddress:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_setAcceptPartialConnectivity:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_setAcceptUnvalidated:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_setAirplaneMode:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_setAvoidUnvalidated:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_setGlobalProxy:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_setLegacyLockdownVpnEnabled:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_setOemNetworkPreference:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_setProfileNetworkPreference:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_setProvisioningNotificationVisible:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_setRequireVpnForUids:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_setTestAllowBadWifiUntil:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_shouldAvoidBadWifi:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_simulateDataStall:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_startCaptivePortalApp:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_startCaptivePortalAppInternal:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_startNattKeepalive:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_startNattKeepaliveWithFd:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_startOrGetTestNetworkService:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_startTcpKeepalive:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_stopKeepalive:I,lo-prio,max-target-o
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_systemReady:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_unofferNetwork:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_unregisterConnectivityDiagnosticsCallback:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_unregisterNetworkActivityListener:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_unregisterNetworkProvider:I,blocked
Landroid/net/IConnectivityManager$Stub;->TRANSACTION_unregisterQosCallback:I,blocked
Landroid/net/IConnectivityManager$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/IConnectivityManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/IConnectivityManager;,unsupported
Landroid/net/IConnectivityManager$Stub;->getDefaultImpl()Landroid/net/IConnectivityManager;,blocked
Landroid/net/IConnectivityManager$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/net/IConnectivityManager$Stub;->setDefaultImpl(Landroid/net/IConnectivityManager;)Z,blocked
Landroid/net/IConnectivityManager;->declareNetworkRequestUnfulfillable(Landroid/net/NetworkRequest;)V,blocked
Landroid/net/IConnectivityManager;->factoryReset()V,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->getActiveLinkProperties()Landroid/net/LinkProperties;,unsupported
Landroid/net/IConnectivityManager;->getActiveNetwork()Landroid/net/Network;,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->getActiveNetworkForUid(IZ)Landroid/net/Network;,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->getActiveNetworkInfo()Landroid/net/NetworkInfo;,unsupported
Landroid/net/IConnectivityManager;->getActiveNetworkInfoForUid(IZ)Landroid/net/NetworkInfo;,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->getAllNetworkInfo()[Landroid/net/NetworkInfo;,unsupported
Landroid/net/IConnectivityManager;->getAllNetworkState()[Landroid/net/NetworkState;,max-target-r
Landroid/net/IConnectivityManager;->getAllNetworkStateSnapshots()Ljava/util/List;,blocked
Landroid/net/IConnectivityManager;->getAllNetworks()[Landroid/net/Network;,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->getCaptivePortalServerUrl()Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->getConnectionOwnerUid(Landroid/net/ConnectionInfo;)I,blocked
Landroid/net/IConnectivityManager;->getDefaultNetworkCapabilitiesForUser(ILjava/lang/String;Ljava/lang/String;)[Landroid/net/NetworkCapabilities;,blocked
Landroid/net/IConnectivityManager;->getDefaultRequest()Landroid/net/NetworkRequest;,blocked
Landroid/net/IConnectivityManager;->getGlobalProxy()Landroid/net/ProxyInfo;,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->getLastTetherError(Ljava/lang/String;)I,max-target-q
Landroid/net/IConnectivityManager;->getLinkProperties(Landroid/net/Network;)Landroid/net/LinkProperties;,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->getLinkPropertiesForType(I)Landroid/net/LinkProperties;,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->getMultipathPreference(Landroid/net/Network;)I,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->getNetworkCapabilities(Landroid/net/Network;Ljava/lang/String;Ljava/lang/String;)Landroid/net/NetworkCapabilities;,blocked
Landroid/net/IConnectivityManager;->getNetworkForType(I)Landroid/net/Network;,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->getNetworkInfo(I)Landroid/net/NetworkInfo;,max-target-p
Landroid/net/IConnectivityManager;->getNetworkInfoForUid(Landroid/net/Network;IZ)Landroid/net/NetworkInfo;,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->getNetworkWatchlistConfigHash()[B,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->getProxyForNetwork(Landroid/net/Network;)Landroid/net/ProxyInfo;,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->getRestoreDefaultNetworkDelay(I)I,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->getRestrictBackgroundStatusByCaller()I,blocked
Landroid/net/IConnectivityManager;->getTetherableIfaces()[Ljava/lang/String;,max-target-q
Landroid/net/IConnectivityManager;->getTetherableUsbRegexs()[Ljava/lang/String;,max-target-q
Landroid/net/IConnectivityManager;->getTetherableWifiRegexs()[Ljava/lang/String;,max-target-q
Landroid/net/IConnectivityManager;->getTetheredIfaces()[Ljava/lang/String;,max-target-q
Landroid/net/IConnectivityManager;->getTetheringErroredIfaces()[Ljava/lang/String;,max-target-q
Landroid/net/IConnectivityManager;->isActiveNetworkMetered()Z,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->isDefaultNetworkActive()Z,blocked
Landroid/net/IConnectivityManager;->isNetworkSupported(I)Z,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->listenForNetwork(Landroid/net/NetworkCapabilities;Landroid/os/Messenger;Landroid/os/IBinder;ILjava/lang/String;Ljava/lang/String;)Landroid/net/NetworkRequest;,blocked
Landroid/net/IConnectivityManager;->offerNetwork(ILandroid/net/NetworkScore;Landroid/net/NetworkCapabilities;Landroid/net/INetworkOfferCallback;)V,blocked
Landroid/net/IConnectivityManager;->pendingListenForNetwork(Landroid/net/NetworkCapabilities;Landroid/app/PendingIntent;Ljava/lang/String;Ljava/lang/String;)V,blocked
Landroid/net/IConnectivityManager;->pendingRequestForNetwork(Landroid/net/NetworkCapabilities;Landroid/app/PendingIntent;Ljava/lang/String;Ljava/lang/String;)Landroid/net/NetworkRequest;,blocked
Landroid/net/IConnectivityManager;->registerConnectivityDiagnosticsCallback(Landroid/net/IConnectivityDiagnosticsCallback;Landroid/net/NetworkRequest;Ljava/lang/String;)V,blocked
Landroid/net/IConnectivityManager;->registerNetworkActivityListener(Landroid/net/INetworkActivityListener;)V,blocked
Landroid/net/IConnectivityManager;->registerNetworkAgent(Landroid/net/INetworkAgent;Landroid/net/NetworkInfo;Landroid/net/LinkProperties;Landroid/net/NetworkCapabilities;Landroid/net/NetworkScore;Landroid/net/NetworkAgentConfig;I)Landroid/net/Network;,blocked
Landroid/net/IConnectivityManager;->registerNetworkProvider(Landroid/os/Messenger;Ljava/lang/String;)I,blocked
Landroid/net/IConnectivityManager;->registerQosSocketCallback(Landroid/net/QosSocketInfo;Landroid/net/IQosCallback;)V,blocked
Landroid/net/IConnectivityManager;->releaseNetworkRequest(Landroid/net/NetworkRequest;)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->releasePendingNetworkRequest(Landroid/app/PendingIntent;)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->reportInetCondition(II)V,max-target-p
Landroid/net/IConnectivityManager;->reportNetworkConnectivity(Landroid/net/Network;Z)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->requestBandwidthUpdate(Landroid/net/Network;)Z,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->requestNetwork(ILandroid/net/NetworkCapabilities;ILandroid/os/Messenger;ILandroid/os/IBinder;IILjava/lang/String;Ljava/lang/String;)Landroid/net/NetworkRequest;,blocked
Landroid/net/IConnectivityManager;->requestRouteToHostAddress(I[BLjava/lang/String;Ljava/lang/String;)Z,blocked
Landroid/net/IConnectivityManager;->setAcceptPartialConnectivity(Landroid/net/Network;ZZ)V,blocked
Landroid/net/IConnectivityManager;->setAcceptUnvalidated(Landroid/net/Network;ZZ)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->setAirplaneMode(Z)V,blocked
Landroid/net/IConnectivityManager;->setAvoidUnvalidated(Landroid/net/Network;)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->setGlobalProxy(Landroid/net/ProxyInfo;)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->setLegacyLockdownVpnEnabled(Z)V,blocked
Landroid/net/IConnectivityManager;->setOemNetworkPreference(Landroid/net/OemNetworkPreferences;Landroid/net/IOnCompleteListener;)V,blocked
Landroid/net/IConnectivityManager;->setProfileNetworkPreference(Landroid/os/UserHandle;ILandroid/net/IOnCompleteListener;)V,blocked
Landroid/net/IConnectivityManager;->setProvisioningNotificationVisible(ZILjava/lang/String;)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->setRequireVpnForUids(Z[Landroid/net/UidRange;)V,blocked
Landroid/net/IConnectivityManager;->setTestAllowBadWifiUntil(J)V,blocked
Landroid/net/IConnectivityManager;->shouldAvoidBadWifi()Z,blocked
Landroid/net/IConnectivityManager;->simulateDataStall(IJLandroid/net/Network;Landroid/os/PersistableBundle;)V,blocked
Landroid/net/IConnectivityManager;->startCaptivePortalApp(Landroid/net/Network;)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->startCaptivePortalAppInternal(Landroid/net/Network;Landroid/os/Bundle;)V,blocked
Landroid/net/IConnectivityManager;->startNattKeepalive(Landroid/net/Network;ILandroid/net/ISocketKeepaliveCallback;Ljava/lang/String;ILjava/lang/String;)V,blocked
Landroid/net/IConnectivityManager;->startNattKeepaliveWithFd(Landroid/net/Network;Landroid/os/ParcelFileDescriptor;IILandroid/net/ISocketKeepaliveCallback;Ljava/lang/String;Ljava/lang/String;)V,blocked
Landroid/net/IConnectivityManager;->startOrGetTestNetworkService()Landroid/os/IBinder;,blocked
Landroid/net/IConnectivityManager;->startTcpKeepalive(Landroid/net/Network;Landroid/os/ParcelFileDescriptor;ILandroid/net/ISocketKeepaliveCallback;)V,blocked
Landroid/net/IConnectivityManager;->stopKeepalive(Landroid/net/Network;I)V,lo-prio,max-target-o
Landroid/net/IConnectivityManager;->systemReady()V,blocked
Landroid/net/IConnectivityManager;->unofferNetwork(Landroid/net/INetworkOfferCallback;)V,blocked
Landroid/net/IConnectivityManager;->unregisterConnectivityDiagnosticsCallback(Landroid/net/IConnectivityDiagnosticsCallback;)V,blocked
Landroid/net/IConnectivityManager;->unregisterNetworkActivityListener(Landroid/net/INetworkActivityListener;)V,blocked
Landroid/net/IConnectivityManager;->unregisterNetworkProvider(Landroid/os/Messenger;)V,blocked
Landroid/net/IConnectivityManager;->unregisterQosCallback(Landroid/net/IQosCallback;)V,blocked
Landroid/net/IIntResultListener$Default;-><init>()V,blocked
Landroid/net/IIntResultListener$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/IIntResultListener$Default;->onResult(I)V,blocked
Landroid/net/IIntResultListener$Stub$Proxy;-><init>(Landroid/os/IBinder;)V,blocked
Landroid/net/IIntResultListener$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/IIntResultListener$Stub$Proxy;->getInterfaceDescriptor()Ljava/lang/String;,blocked
Landroid/net/IIntResultListener$Stub$Proxy;->mRemote:Landroid/os/IBinder;,blocked
Landroid/net/IIntResultListener$Stub$Proxy;->onResult(I)V,blocked
Landroid/net/IIntResultListener$Stub$Proxy;->sDefaultImpl:Landroid/net/IIntResultListener;,blocked
Landroid/net/IIntResultListener$Stub;-><init>()V,blocked
Landroid/net/IIntResultListener$Stub;->TRANSACTION_onResult:I,blocked
Landroid/net/IIntResultListener$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/IIntResultListener$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/IIntResultListener;,blocked
Landroid/net/IIntResultListener$Stub;->getDefaultImpl()Landroid/net/IIntResultListener;,blocked
Landroid/net/IIntResultListener$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/net/IIntResultListener$Stub;->setDefaultImpl(Landroid/net/IIntResultListener;)Z,blocked
Landroid/net/IIntResultListener;->DESCRIPTOR:Ljava/lang/String;,blocked
Landroid/net/IIntResultListener;->onResult(I)V,blocked
Landroid/net/INetworkActivityListener$Default;-><init>()V,blocked
Landroid/net/INetworkActivityListener$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/INetworkActivityListener$Default;->onNetworkActive()V,blocked
Landroid/net/INetworkActivityListener$Stub$Proxy;-><init>(Landroid/os/IBinder;)V,blocked
Landroid/net/INetworkActivityListener$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/INetworkActivityListener$Stub$Proxy;->getInterfaceDescriptor()Ljava/lang/String;,blocked
Landroid/net/INetworkActivityListener$Stub$Proxy;->mRemote:Landroid/os/IBinder;,blocked
Landroid/net/INetworkActivityListener$Stub$Proxy;->onNetworkActive()V,blocked
Landroid/net/INetworkActivityListener$Stub$Proxy;->sDefaultImpl:Landroid/net/INetworkActivityListener;,blocked
Landroid/net/INetworkActivityListener$Stub;-><init>()V,blocked
Landroid/net/INetworkActivityListener$Stub;->TRANSACTION_onNetworkActive:I,blocked
Landroid/net/INetworkActivityListener$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/INetworkActivityListener$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/INetworkActivityListener;,blocked
Landroid/net/INetworkActivityListener$Stub;->getDefaultImpl()Landroid/net/INetworkActivityListener;,blocked
Landroid/net/INetworkActivityListener$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/net/INetworkActivityListener$Stub;->setDefaultImpl(Landroid/net/INetworkActivityListener;)Z,blocked
Landroid/net/INetworkActivityListener;->DESCRIPTOR:Ljava/lang/String;,blocked
Landroid/net/INetworkActivityListener;->onNetworkActive()V,blocked
Landroid/net/INetworkAgent$Default;-><init>()V,blocked
Landroid/net/INetworkAgent$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/INetworkAgent$Default;->onAddNattKeepalivePacketFilter(ILandroid/net/NattKeepalivePacketData;)V,blocked
Landroid/net/INetworkAgent$Default;->onAddTcpKeepalivePacketFilter(ILandroid/net/TcpKeepalivePacketData;)V,blocked
Landroid/net/INetworkAgent$Default;->onBandwidthUpdateRequested()V,blocked
Landroid/net/INetworkAgent$Default;->onDisconnected()V,blocked
Landroid/net/INetworkAgent$Default;->onNetworkCreated()V,blocked
Landroid/net/INetworkAgent$Default;->onNetworkDestroyed()V,blocked
Landroid/net/INetworkAgent$Default;->onPreventAutomaticReconnect()V,blocked
Landroid/net/INetworkAgent$Default;->onQosCallbackUnregistered(I)V,blocked
Landroid/net/INetworkAgent$Default;->onQosFilterCallbackRegistered(ILandroid/net/QosFilterParcelable;)V,blocked
Landroid/net/INetworkAgent$Default;->onRegistered(Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/INetworkAgent$Default;->onRemoveKeepalivePacketFilter(I)V,blocked
Landroid/net/INetworkAgent$Default;->onSaveAcceptUnvalidated(Z)V,blocked
Landroid/net/INetworkAgent$Default;->onSignalStrengthThresholdsUpdated([I)V,blocked
Landroid/net/INetworkAgent$Default;->onStartNattSocketKeepalive(IILandroid/net/NattKeepalivePacketData;)V,blocked
Landroid/net/INetworkAgent$Default;->onStartTcpSocketKeepalive(IILandroid/net/TcpKeepalivePacketData;)V,blocked
Landroid/net/INetworkAgent$Default;->onStopSocketKeepalive(I)V,blocked
Landroid/net/INetworkAgent$Default;->onValidationStatusChanged(ILjava/lang/String;)V,blocked
Landroid/net/INetworkAgent$Stub$Proxy;-><init>(Landroid/os/IBinder;)V,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/INetworkAgent$Stub$Proxy;->getInterfaceDescriptor()Ljava/lang/String;,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->mRemote:Landroid/os/IBinder;,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->onAddNattKeepalivePacketFilter(ILandroid/net/NattKeepalivePacketData;)V,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->onAddTcpKeepalivePacketFilter(ILandroid/net/TcpKeepalivePacketData;)V,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->onBandwidthUpdateRequested()V,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->onDisconnected()V,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->onNetworkCreated()V,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->onNetworkDestroyed()V,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->onPreventAutomaticReconnect()V,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->onQosCallbackUnregistered(I)V,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->onQosFilterCallbackRegistered(ILandroid/net/QosFilterParcelable;)V,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->onRegistered(Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->onRemoveKeepalivePacketFilter(I)V,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->onSaveAcceptUnvalidated(Z)V,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->onSignalStrengthThresholdsUpdated([I)V,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->onStartNattSocketKeepalive(IILandroid/net/NattKeepalivePacketData;)V,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->onStartTcpSocketKeepalive(IILandroid/net/TcpKeepalivePacketData;)V,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->onStopSocketKeepalive(I)V,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->onValidationStatusChanged(ILjava/lang/String;)V,blocked
Landroid/net/INetworkAgent$Stub$Proxy;->sDefaultImpl:Landroid/net/INetworkAgent;,blocked
Landroid/net/INetworkAgent$Stub;-><init>()V,blocked
Landroid/net/INetworkAgent$Stub;->TRANSACTION_onAddNattKeepalivePacketFilter:I,blocked
Landroid/net/INetworkAgent$Stub;->TRANSACTION_onAddTcpKeepalivePacketFilter:I,blocked
Landroid/net/INetworkAgent$Stub;->TRANSACTION_onBandwidthUpdateRequested:I,blocked
Landroid/net/INetworkAgent$Stub;->TRANSACTION_onDisconnected:I,blocked
Landroid/net/INetworkAgent$Stub;->TRANSACTION_onNetworkCreated:I,blocked
Landroid/net/INetworkAgent$Stub;->TRANSACTION_onNetworkDestroyed:I,blocked
Landroid/net/INetworkAgent$Stub;->TRANSACTION_onPreventAutomaticReconnect:I,blocked
Landroid/net/INetworkAgent$Stub;->TRANSACTION_onQosCallbackUnregistered:I,blocked
Landroid/net/INetworkAgent$Stub;->TRANSACTION_onQosFilterCallbackRegistered:I,blocked
Landroid/net/INetworkAgent$Stub;->TRANSACTION_onRegistered:I,blocked
Landroid/net/INetworkAgent$Stub;->TRANSACTION_onRemoveKeepalivePacketFilter:I,blocked
Landroid/net/INetworkAgent$Stub;->TRANSACTION_onSaveAcceptUnvalidated:I,blocked
Landroid/net/INetworkAgent$Stub;->TRANSACTION_onSignalStrengthThresholdsUpdated:I,blocked
Landroid/net/INetworkAgent$Stub;->TRANSACTION_onStartNattSocketKeepalive:I,blocked
Landroid/net/INetworkAgent$Stub;->TRANSACTION_onStartTcpSocketKeepalive:I,blocked
Landroid/net/INetworkAgent$Stub;->TRANSACTION_onStopSocketKeepalive:I,blocked
Landroid/net/INetworkAgent$Stub;->TRANSACTION_onValidationStatusChanged:I,blocked
Landroid/net/INetworkAgent$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/INetworkAgent$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/INetworkAgent;,blocked
Landroid/net/INetworkAgent$Stub;->getDefaultImpl()Landroid/net/INetworkAgent;,blocked
Landroid/net/INetworkAgent$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/net/INetworkAgent$Stub;->setDefaultImpl(Landroid/net/INetworkAgent;)Z,blocked
Landroid/net/INetworkAgent;->DESCRIPTOR:Ljava/lang/String;,blocked
Landroid/net/INetworkAgent;->onAddNattKeepalivePacketFilter(ILandroid/net/NattKeepalivePacketData;)V,blocked
Landroid/net/INetworkAgent;->onAddTcpKeepalivePacketFilter(ILandroid/net/TcpKeepalivePacketData;)V,blocked
Landroid/net/INetworkAgent;->onBandwidthUpdateRequested()V,blocked
Landroid/net/INetworkAgent;->onDisconnected()V,blocked
Landroid/net/INetworkAgent;->onNetworkCreated()V,blocked
Landroid/net/INetworkAgent;->onNetworkDestroyed()V,blocked
Landroid/net/INetworkAgent;->onPreventAutomaticReconnect()V,blocked
Landroid/net/INetworkAgent;->onQosCallbackUnregistered(I)V,blocked
Landroid/net/INetworkAgent;->onQosFilterCallbackRegistered(ILandroid/net/QosFilterParcelable;)V,blocked
Landroid/net/INetworkAgent;->onRegistered(Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/INetworkAgent;->onRemoveKeepalivePacketFilter(I)V,blocked
Landroid/net/INetworkAgent;->onSaveAcceptUnvalidated(Z)V,blocked
Landroid/net/INetworkAgent;->onSignalStrengthThresholdsUpdated([I)V,blocked
Landroid/net/INetworkAgent;->onStartNattSocketKeepalive(IILandroid/net/NattKeepalivePacketData;)V,blocked
Landroid/net/INetworkAgent;->onStartTcpSocketKeepalive(IILandroid/net/TcpKeepalivePacketData;)V,blocked
Landroid/net/INetworkAgent;->onStopSocketKeepalive(I)V,blocked
Landroid/net/INetworkAgent;->onValidationStatusChanged(ILjava/lang/String;)V,blocked
Landroid/net/INetworkAgentRegistry$Default;-><init>()V,blocked
Landroid/net/INetworkAgentRegistry$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/INetworkAgentRegistry$Default;->sendEpsQosSessionAvailable(ILandroid/net/QosSession;Landroid/telephony/data/EpsBearerQosSessionAttributes;)V,blocked
Landroid/net/INetworkAgentRegistry$Default;->sendExplicitlySelected(ZZ)V,blocked
Landroid/net/INetworkAgentRegistry$Default;->sendLingerDuration(I)V,blocked
Landroid/net/INetworkAgentRegistry$Default;->sendLinkProperties(Landroid/net/LinkProperties;)V,blocked
Landroid/net/INetworkAgentRegistry$Default;->sendNetworkCapabilities(Landroid/net/NetworkCapabilities;)V,blocked
Landroid/net/INetworkAgentRegistry$Default;->sendNetworkInfo(Landroid/net/NetworkInfo;)V,blocked
Landroid/net/INetworkAgentRegistry$Default;->sendNrQosSessionAvailable(ILandroid/net/QosSession;Landroid/telephony/data/NrQosSessionAttributes;)V,blocked
Landroid/net/INetworkAgentRegistry$Default;->sendQosCallbackError(II)V,blocked
Landroid/net/INetworkAgentRegistry$Default;->sendQosSessionLost(ILandroid/net/QosSession;)V,blocked
Landroid/net/INetworkAgentRegistry$Default;->sendScore(Landroid/net/NetworkScore;)V,blocked
Landroid/net/INetworkAgentRegistry$Default;->sendSocketKeepaliveEvent(II)V,blocked
Landroid/net/INetworkAgentRegistry$Default;->sendTeardownDelayMs(I)V,blocked
Landroid/net/INetworkAgentRegistry$Default;->sendUnderlyingNetworks(Ljava/util/List;)V,blocked
Landroid/net/INetworkAgentRegistry$Stub$Proxy;-><init>(Landroid/os/IBinder;)V,blocked
Landroid/net/INetworkAgentRegistry$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/INetworkAgentRegistry$Stub$Proxy;->getInterfaceDescriptor()Ljava/lang/String;,blocked
Landroid/net/INetworkAgentRegistry$Stub$Proxy;->mRemote:Landroid/os/IBinder;,blocked
Landroid/net/INetworkAgentRegistry$Stub$Proxy;->sDefaultImpl:Landroid/net/INetworkAgentRegistry;,blocked
Landroid/net/INetworkAgentRegistry$Stub$Proxy;->sendEpsQosSessionAvailable(ILandroid/net/QosSession;Landroid/telephony/data/EpsBearerQosSessionAttributes;)V,blocked
Landroid/net/INetworkAgentRegistry$Stub$Proxy;->sendExplicitlySelected(ZZ)V,blocked
Landroid/net/INetworkAgentRegistry$Stub$Proxy;->sendLingerDuration(I)V,blocked
Landroid/net/INetworkAgentRegistry$Stub$Proxy;->sendLinkProperties(Landroid/net/LinkProperties;)V,blocked
Landroid/net/INetworkAgentRegistry$Stub$Proxy;->sendNetworkCapabilities(Landroid/net/NetworkCapabilities;)V,blocked
Landroid/net/INetworkAgentRegistry$Stub$Proxy;->sendNetworkInfo(Landroid/net/NetworkInfo;)V,blocked
Landroid/net/INetworkAgentRegistry$Stub$Proxy;->sendNrQosSessionAvailable(ILandroid/net/QosSession;Landroid/telephony/data/NrQosSessionAttributes;)V,blocked
Landroid/net/INetworkAgentRegistry$Stub$Proxy;->sendQosCallbackError(II)V,blocked
Landroid/net/INetworkAgentRegistry$Stub$Proxy;->sendQosSessionLost(ILandroid/net/QosSession;)V,blocked
Landroid/net/INetworkAgentRegistry$Stub$Proxy;->sendScore(Landroid/net/NetworkScore;)V,blocked
Landroid/net/INetworkAgentRegistry$Stub$Proxy;->sendSocketKeepaliveEvent(II)V,blocked
Landroid/net/INetworkAgentRegistry$Stub$Proxy;->sendTeardownDelayMs(I)V,blocked
Landroid/net/INetworkAgentRegistry$Stub$Proxy;->sendUnderlyingNetworks(Ljava/util/List;)V,blocked
Landroid/net/INetworkAgentRegistry$Stub;-><init>()V,blocked
Landroid/net/INetworkAgentRegistry$Stub;->TRANSACTION_sendEpsQosSessionAvailable:I,blocked
Landroid/net/INetworkAgentRegistry$Stub;->TRANSACTION_sendExplicitlySelected:I,blocked
Landroid/net/INetworkAgentRegistry$Stub;->TRANSACTION_sendLingerDuration:I,blocked
Landroid/net/INetworkAgentRegistry$Stub;->TRANSACTION_sendLinkProperties:I,blocked
Landroid/net/INetworkAgentRegistry$Stub;->TRANSACTION_sendNetworkCapabilities:I,blocked
Landroid/net/INetworkAgentRegistry$Stub;->TRANSACTION_sendNetworkInfo:I,blocked
Landroid/net/INetworkAgentRegistry$Stub;->TRANSACTION_sendNrQosSessionAvailable:I,blocked
Landroid/net/INetworkAgentRegistry$Stub;->TRANSACTION_sendQosCallbackError:I,blocked
Landroid/net/INetworkAgentRegistry$Stub;->TRANSACTION_sendQosSessionLost:I,blocked
Landroid/net/INetworkAgentRegistry$Stub;->TRANSACTION_sendScore:I,blocked
Landroid/net/INetworkAgentRegistry$Stub;->TRANSACTION_sendSocketKeepaliveEvent:I,blocked
Landroid/net/INetworkAgentRegistry$Stub;->TRANSACTION_sendTeardownDelayMs:I,blocked
Landroid/net/INetworkAgentRegistry$Stub;->TRANSACTION_sendUnderlyingNetworks:I,blocked
Landroid/net/INetworkAgentRegistry$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/INetworkAgentRegistry$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/INetworkAgentRegistry;,blocked
Landroid/net/INetworkAgentRegistry$Stub;->getDefaultImpl()Landroid/net/INetworkAgentRegistry;,blocked
Landroid/net/INetworkAgentRegistry$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/net/INetworkAgentRegistry$Stub;->setDefaultImpl(Landroid/net/INetworkAgentRegistry;)Z,blocked
Landroid/net/INetworkAgentRegistry;->DESCRIPTOR:Ljava/lang/String;,blocked
Landroid/net/INetworkAgentRegistry;->sendEpsQosSessionAvailable(ILandroid/net/QosSession;Landroid/telephony/data/EpsBearerQosSessionAttributes;)V,blocked
Landroid/net/INetworkAgentRegistry;->sendExplicitlySelected(ZZ)V,blocked
Landroid/net/INetworkAgentRegistry;->sendLingerDuration(I)V,blocked
Landroid/net/INetworkAgentRegistry;->sendLinkProperties(Landroid/net/LinkProperties;)V,blocked
Landroid/net/INetworkAgentRegistry;->sendNetworkCapabilities(Landroid/net/NetworkCapabilities;)V,blocked
Landroid/net/INetworkAgentRegistry;->sendNetworkInfo(Landroid/net/NetworkInfo;)V,blocked
Landroid/net/INetworkAgentRegistry;->sendNrQosSessionAvailable(ILandroid/net/QosSession;Landroid/telephony/data/NrQosSessionAttributes;)V,blocked
Landroid/net/INetworkAgentRegistry;->sendQosCallbackError(II)V,blocked
Landroid/net/INetworkAgentRegistry;->sendQosSessionLost(ILandroid/net/QosSession;)V,blocked
Landroid/net/INetworkAgentRegistry;->sendScore(Landroid/net/NetworkScore;)V,blocked
Landroid/net/INetworkAgentRegistry;->sendSocketKeepaliveEvent(II)V,blocked
Landroid/net/INetworkAgentRegistry;->sendTeardownDelayMs(I)V,blocked
Landroid/net/INetworkAgentRegistry;->sendUnderlyingNetworks(Ljava/util/List;)V,blocked
Landroid/net/INetworkOfferCallback$Default;-><init>()V,blocked
Landroid/net/INetworkOfferCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/INetworkOfferCallback$Default;->onNetworkNeeded(Landroid/net/NetworkRequest;)V,blocked
Landroid/net/INetworkOfferCallback$Default;->onNetworkUnneeded(Landroid/net/NetworkRequest;)V,blocked
Landroid/net/INetworkOfferCallback$Stub$Proxy;-><init>(Landroid/os/IBinder;)V,blocked
Landroid/net/INetworkOfferCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/INetworkOfferCallback$Stub$Proxy;->getInterfaceDescriptor()Ljava/lang/String;,blocked
Landroid/net/INetworkOfferCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;,blocked
Landroid/net/INetworkOfferCallback$Stub$Proxy;->onNetworkNeeded(Landroid/net/NetworkRequest;)V,blocked
Landroid/net/INetworkOfferCallback$Stub$Proxy;->onNetworkUnneeded(Landroid/net/NetworkRequest;)V,blocked
Landroid/net/INetworkOfferCallback$Stub$Proxy;->sDefaultImpl:Landroid/net/INetworkOfferCallback;,blocked
Landroid/net/INetworkOfferCallback$Stub;-><init>()V,blocked
Landroid/net/INetworkOfferCallback$Stub;->TRANSACTION_onNetworkNeeded:I,blocked
Landroid/net/INetworkOfferCallback$Stub;->TRANSACTION_onNetworkUnneeded:I,blocked
Landroid/net/INetworkOfferCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/INetworkOfferCallback$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/INetworkOfferCallback;,blocked
Landroid/net/INetworkOfferCallback$Stub;->getDefaultImpl()Landroid/net/INetworkOfferCallback;,blocked
Landroid/net/INetworkOfferCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/net/INetworkOfferCallback$Stub;->setDefaultImpl(Landroid/net/INetworkOfferCallback;)Z,blocked
Landroid/net/INetworkOfferCallback;->DESCRIPTOR:Ljava/lang/String;,blocked
Landroid/net/INetworkOfferCallback;->onNetworkNeeded(Landroid/net/NetworkRequest;)V,blocked
Landroid/net/INetworkOfferCallback;->onNetworkUnneeded(Landroid/net/NetworkRequest;)V,blocked
Landroid/net/IOnCompleteListener$Default;-><init>()V,blocked
Landroid/net/IOnCompleteListener$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/IOnCompleteListener$Default;->onComplete()V,blocked
Landroid/net/IOnCompleteListener$Stub$Proxy;-><init>(Landroid/os/IBinder;)V,blocked
Landroid/net/IOnCompleteListener$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/IOnCompleteListener$Stub$Proxy;->getInterfaceDescriptor()Ljava/lang/String;,blocked
Landroid/net/IOnCompleteListener$Stub$Proxy;->mRemote:Landroid/os/IBinder;,blocked
Landroid/net/IOnCompleteListener$Stub$Proxy;->onComplete()V,blocked
Landroid/net/IOnCompleteListener$Stub$Proxy;->sDefaultImpl:Landroid/net/IOnCompleteListener;,blocked
Landroid/net/IOnCompleteListener$Stub;-><init>()V,blocked
Landroid/net/IOnCompleteListener$Stub;->TRANSACTION_onComplete:I,blocked
Landroid/net/IOnCompleteListener$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/IOnCompleteListener$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/IOnCompleteListener;,blocked
Landroid/net/IOnCompleteListener$Stub;->getDefaultImpl()Landroid/net/IOnCompleteListener;,blocked
Landroid/net/IOnCompleteListener$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/net/IOnCompleteListener$Stub;->setDefaultImpl(Landroid/net/IOnCompleteListener;)Z,blocked
Landroid/net/IOnCompleteListener;->DESCRIPTOR:Ljava/lang/String;,blocked
Landroid/net/IOnCompleteListener;->onComplete()V,blocked
Landroid/net/IQosCallback$Default;-><init>()V,blocked
Landroid/net/IQosCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/IQosCallback$Default;->onError(I)V,blocked
Landroid/net/IQosCallback$Default;->onNrQosSessionAvailable(Landroid/net/QosSession;Landroid/telephony/data/NrQosSessionAttributes;)V,blocked
Landroid/net/IQosCallback$Default;->onQosEpsBearerSessionAvailable(Landroid/net/QosSession;Landroid/telephony/data/EpsBearerQosSessionAttributes;)V,blocked
Landroid/net/IQosCallback$Default;->onQosSessionLost(Landroid/net/QosSession;)V,blocked
Landroid/net/IQosCallback$Stub$Proxy;-><init>(Landroid/os/IBinder;)V,blocked
Landroid/net/IQosCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/IQosCallback$Stub$Proxy;->getInterfaceDescriptor()Ljava/lang/String;,blocked
Landroid/net/IQosCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;,blocked
Landroid/net/IQosCallback$Stub$Proxy;->onError(I)V,blocked
Landroid/net/IQosCallback$Stub$Proxy;->onNrQosSessionAvailable(Landroid/net/QosSession;Landroid/telephony/data/NrQosSessionAttributes;)V,blocked
Landroid/net/IQosCallback$Stub$Proxy;->onQosEpsBearerSessionAvailable(Landroid/net/QosSession;Landroid/telephony/data/EpsBearerQosSessionAttributes;)V,blocked
Landroid/net/IQosCallback$Stub$Proxy;->onQosSessionLost(Landroid/net/QosSession;)V,blocked
Landroid/net/IQosCallback$Stub$Proxy;->sDefaultImpl:Landroid/net/IQosCallback;,blocked
Landroid/net/IQosCallback$Stub;-><init>()V,blocked
Landroid/net/IQosCallback$Stub;->TRANSACTION_onError:I,blocked
Landroid/net/IQosCallback$Stub;->TRANSACTION_onNrQosSessionAvailable:I,blocked
Landroid/net/IQosCallback$Stub;->TRANSACTION_onQosEpsBearerSessionAvailable:I,blocked
Landroid/net/IQosCallback$Stub;->TRANSACTION_onQosSessionLost:I,blocked
Landroid/net/IQosCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/IQosCallback$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/IQosCallback;,blocked
Landroid/net/IQosCallback$Stub;->getDefaultImpl()Landroid/net/IQosCallback;,blocked
Landroid/net/IQosCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/net/IQosCallback$Stub;->setDefaultImpl(Landroid/net/IQosCallback;)Z,blocked
Landroid/net/IQosCallback;->DESCRIPTOR:Ljava/lang/String;,blocked
Landroid/net/IQosCallback;->onError(I)V,blocked
Landroid/net/IQosCallback;->onNrQosSessionAvailable(Landroid/net/QosSession;Landroid/telephony/data/NrQosSessionAttributes;)V,blocked
Landroid/net/IQosCallback;->onQosEpsBearerSessionAvailable(Landroid/net/QosSession;Landroid/telephony/data/EpsBearerQosSessionAttributes;)V,blocked
Landroid/net/IQosCallback;->onQosSessionLost(Landroid/net/QosSession;)V,blocked
Landroid/net/ISocketKeepaliveCallback$Default;-><init>()V,blocked
Landroid/net/ISocketKeepaliveCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/ISocketKeepaliveCallback$Default;->onDataReceived()V,blocked
Landroid/net/ISocketKeepaliveCallback$Default;->onError(I)V,blocked
Landroid/net/ISocketKeepaliveCallback$Default;->onStarted(I)V,blocked
Landroid/net/ISocketKeepaliveCallback$Default;->onStopped()V,blocked
Landroid/net/ISocketKeepaliveCallback$Stub$Proxy;-><init>(Landroid/os/IBinder;)V,blocked
Landroid/net/ISocketKeepaliveCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/ISocketKeepaliveCallback$Stub$Proxy;->getInterfaceDescriptor()Ljava/lang/String;,blocked
Landroid/net/ISocketKeepaliveCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;,blocked
Landroid/net/ISocketKeepaliveCallback$Stub$Proxy;->onDataReceived()V,blocked
Landroid/net/ISocketKeepaliveCallback$Stub$Proxy;->onError(I)V,blocked
Landroid/net/ISocketKeepaliveCallback$Stub$Proxy;->onStarted(I)V,blocked
Landroid/net/ISocketKeepaliveCallback$Stub$Proxy;->onStopped()V,blocked
Landroid/net/ISocketKeepaliveCallback$Stub$Proxy;->sDefaultImpl:Landroid/net/ISocketKeepaliveCallback;,blocked
Landroid/net/ISocketKeepaliveCallback$Stub;-><init>()V,blocked
Landroid/net/ISocketKeepaliveCallback$Stub;->TRANSACTION_onDataReceived:I,blocked
Landroid/net/ISocketKeepaliveCallback$Stub;->TRANSACTION_onError:I,blocked
Landroid/net/ISocketKeepaliveCallback$Stub;->TRANSACTION_onStarted:I,blocked
Landroid/net/ISocketKeepaliveCallback$Stub;->TRANSACTION_onStopped:I,blocked
Landroid/net/ISocketKeepaliveCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/ISocketKeepaliveCallback$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/ISocketKeepaliveCallback;,blocked
Landroid/net/ISocketKeepaliveCallback$Stub;->getDefaultImpl()Landroid/net/ISocketKeepaliveCallback;,blocked
Landroid/net/ISocketKeepaliveCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/net/ISocketKeepaliveCallback$Stub;->setDefaultImpl(Landroid/net/ISocketKeepaliveCallback;)Z,blocked
Landroid/net/ISocketKeepaliveCallback;->DESCRIPTOR:Ljava/lang/String;,blocked
Landroid/net/ISocketKeepaliveCallback;->onDataReceived()V,blocked
Landroid/net/ISocketKeepaliveCallback;->onError(I)V,blocked
Landroid/net/ISocketKeepaliveCallback;->onStarted(I)V,blocked
Landroid/net/ISocketKeepaliveCallback;->onStopped()V,blocked
Landroid/net/ITestNetworkManager$Default;-><init>()V,blocked
Landroid/net/ITestNetworkManager$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/ITestNetworkManager$Default;->createTapInterface()Landroid/net/TestNetworkInterface;,blocked
Landroid/net/ITestNetworkManager$Default;->createTunInterface([Landroid/net/LinkAddress;)Landroid/net/TestNetworkInterface;,blocked
Landroid/net/ITestNetworkManager$Default;->setupTestNetwork(Ljava/lang/String;Landroid/net/LinkProperties;Z[ILandroid/os/IBinder;)V,blocked
Landroid/net/ITestNetworkManager$Default;->teardownTestNetwork(I)V,blocked
Landroid/net/ITestNetworkManager$Stub$Proxy;-><init>(Landroid/os/IBinder;)V,blocked
Landroid/net/ITestNetworkManager$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/ITestNetworkManager$Stub$Proxy;->createTapInterface()Landroid/net/TestNetworkInterface;,blocked
Landroid/net/ITestNetworkManager$Stub$Proxy;->createTunInterface([Landroid/net/LinkAddress;)Landroid/net/TestNetworkInterface;,blocked
Landroid/net/ITestNetworkManager$Stub$Proxy;->getInterfaceDescriptor()Ljava/lang/String;,blocked
Landroid/net/ITestNetworkManager$Stub$Proxy;->mRemote:Landroid/os/IBinder;,blocked
Landroid/net/ITestNetworkManager$Stub$Proxy;->sDefaultImpl:Landroid/net/ITestNetworkManager;,blocked
Landroid/net/ITestNetworkManager$Stub$Proxy;->setupTestNetwork(Ljava/lang/String;Landroid/net/LinkProperties;Z[ILandroid/os/IBinder;)V,blocked
Landroid/net/ITestNetworkManager$Stub$Proxy;->teardownTestNetwork(I)V,blocked
Landroid/net/ITestNetworkManager$Stub;-><init>()V,blocked
Landroid/net/ITestNetworkManager$Stub;->TRANSACTION_createTapInterface:I,blocked
Landroid/net/ITestNetworkManager$Stub;->TRANSACTION_createTunInterface:I,blocked
Landroid/net/ITestNetworkManager$Stub;->TRANSACTION_setupTestNetwork:I,blocked
Landroid/net/ITestNetworkManager$Stub;->TRANSACTION_teardownTestNetwork:I,blocked
Landroid/net/ITestNetworkManager$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/ITestNetworkManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/ITestNetworkManager;,blocked
Landroid/net/ITestNetworkManager$Stub;->getDefaultImpl()Landroid/net/ITestNetworkManager;,blocked
Landroid/net/ITestNetworkManager$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/net/ITestNetworkManager$Stub;->setDefaultImpl(Landroid/net/ITestNetworkManager;)Z,blocked
Landroid/net/ITestNetworkManager;->DESCRIPTOR:Ljava/lang/String;,blocked
Landroid/net/ITestNetworkManager;->createTapInterface()Landroid/net/TestNetworkInterface;,blocked
Landroid/net/ITestNetworkManager;->createTunInterface([Landroid/net/LinkAddress;)Landroid/net/TestNetworkInterface;,blocked
Landroid/net/ITestNetworkManager;->setupTestNetwork(Ljava/lang/String;Landroid/net/LinkProperties;Z[ILandroid/os/IBinder;)V,blocked
Landroid/net/ITestNetworkManager;->teardownTestNetwork(I)V,blocked
Landroid/net/ITetheringConnector$Default;-><init>()V,blocked
Landroid/net/ITetheringConnector$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/ITetheringConnector$Default;->isTetheringSupported(Ljava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector$Default;->registerTetheringEventCallback(Landroid/net/ITetheringEventCallback;Ljava/lang/String;)V,blocked
Landroid/net/ITetheringConnector$Default;->requestLatestTetheringEntitlementResult(ILandroid/os/ResultReceiver;ZLjava/lang/String;Ljava/lang/String;)V,blocked
Landroid/net/ITetheringConnector$Default;->setUsbTethering(ZLjava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector$Default;->startTethering(Landroid/net/TetheringRequestParcel;Ljava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector$Default;->stopAllTethering(Ljava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector$Default;->stopTethering(ILjava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector$Default;->tether(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector$Default;->unregisterTetheringEventCallback(Landroid/net/ITetheringEventCallback;Ljava/lang/String;)V,blocked
Landroid/net/ITetheringConnector$Default;->untether(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector$Stub$Proxy;-><init>(Landroid/os/IBinder;)V,blocked
Landroid/net/ITetheringConnector$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/ITetheringConnector$Stub$Proxy;->getInterfaceDescriptor()Ljava/lang/String;,blocked
Landroid/net/ITetheringConnector$Stub$Proxy;->isTetheringSupported(Ljava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector$Stub$Proxy;->mRemote:Landroid/os/IBinder;,blocked
Landroid/net/ITetheringConnector$Stub$Proxy;->registerTetheringEventCallback(Landroid/net/ITetheringEventCallback;Ljava/lang/String;)V,blocked
Landroid/net/ITetheringConnector$Stub$Proxy;->requestLatestTetheringEntitlementResult(ILandroid/os/ResultReceiver;ZLjava/lang/String;Ljava/lang/String;)V,blocked
Landroid/net/ITetheringConnector$Stub$Proxy;->sDefaultImpl:Landroid/net/ITetheringConnector;,blocked
Landroid/net/ITetheringConnector$Stub$Proxy;->setUsbTethering(ZLjava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector$Stub$Proxy;->startTethering(Landroid/net/TetheringRequestParcel;Ljava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector$Stub$Proxy;->stopAllTethering(Ljava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector$Stub$Proxy;->stopTethering(ILjava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector$Stub$Proxy;->tether(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector$Stub$Proxy;->unregisterTetheringEventCallback(Landroid/net/ITetheringEventCallback;Ljava/lang/String;)V,blocked
Landroid/net/ITetheringConnector$Stub$Proxy;->untether(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector$Stub;-><init>()V,blocked
Landroid/net/ITetheringConnector$Stub;->TRANSACTION_isTetheringSupported:I,blocked
Landroid/net/ITetheringConnector$Stub;->TRANSACTION_registerTetheringEventCallback:I,blocked
Landroid/net/ITetheringConnector$Stub;->TRANSACTION_requestLatestTetheringEntitlementResult:I,blocked
Landroid/net/ITetheringConnector$Stub;->TRANSACTION_setUsbTethering:I,blocked
Landroid/net/ITetheringConnector$Stub;->TRANSACTION_startTethering:I,blocked
Landroid/net/ITetheringConnector$Stub;->TRANSACTION_stopAllTethering:I,blocked
Landroid/net/ITetheringConnector$Stub;->TRANSACTION_stopTethering:I,blocked
Landroid/net/ITetheringConnector$Stub;->TRANSACTION_tether:I,blocked
Landroid/net/ITetheringConnector$Stub;->TRANSACTION_unregisterTetheringEventCallback:I,blocked
Landroid/net/ITetheringConnector$Stub;->TRANSACTION_untether:I,blocked
Landroid/net/ITetheringConnector$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/ITetheringConnector$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/ITetheringConnector;,blocked
Landroid/net/ITetheringConnector$Stub;->getDefaultImpl()Landroid/net/ITetheringConnector;,blocked
Landroid/net/ITetheringConnector$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/net/ITetheringConnector$Stub;->setDefaultImpl(Landroid/net/ITetheringConnector;)Z,blocked
Landroid/net/ITetheringConnector;->DESCRIPTOR:Ljava/lang/String;,blocked
Landroid/net/ITetheringConnector;->isTetheringSupported(Ljava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector;->registerTetheringEventCallback(Landroid/net/ITetheringEventCallback;Ljava/lang/String;)V,blocked
Landroid/net/ITetheringConnector;->requestLatestTetheringEntitlementResult(ILandroid/os/ResultReceiver;ZLjava/lang/String;Ljava/lang/String;)V,blocked
Landroid/net/ITetheringConnector;->setUsbTethering(ZLjava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector;->startTethering(Landroid/net/TetheringRequestParcel;Ljava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector;->stopAllTethering(Ljava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector;->stopTethering(ILjava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector;->tether(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringConnector;->unregisterTetheringEventCallback(Landroid/net/ITetheringEventCallback;Ljava/lang/String;)V,blocked
Landroid/net/ITetheringConnector;->untether(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/ITetheringEventCallback$Default;-><init>()V,blocked
Landroid/net/ITetheringEventCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/ITetheringEventCallback$Default;->onCallbackStarted(Landroid/net/TetheringCallbackStartedParcel;)V,blocked
Landroid/net/ITetheringEventCallback$Default;->onCallbackStopped(I)V,blocked
Landroid/net/ITetheringEventCallback$Default;->onConfigurationChanged(Landroid/net/TetheringConfigurationParcel;)V,blocked
Landroid/net/ITetheringEventCallback$Default;->onOffloadStatusChanged(I)V,blocked
Landroid/net/ITetheringEventCallback$Default;->onTetherClientsChanged(Ljava/util/List;)V,blocked
Landroid/net/ITetheringEventCallback$Default;->onTetherStatesChanged(Landroid/net/TetherStatesParcel;)V,blocked
Landroid/net/ITetheringEventCallback$Default;->onUpstreamChanged(Landroid/net/Network;)V,blocked
Landroid/net/ITetheringEventCallback$Stub$Proxy;-><init>(Landroid/os/IBinder;)V,blocked
Landroid/net/ITetheringEventCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/ITetheringEventCallback$Stub$Proxy;->getInterfaceDescriptor()Ljava/lang/String;,blocked
Landroid/net/ITetheringEventCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;,blocked
Landroid/net/ITetheringEventCallback$Stub$Proxy;->onCallbackStarted(Landroid/net/TetheringCallbackStartedParcel;)V,blocked
Landroid/net/ITetheringEventCallback$Stub$Proxy;->onCallbackStopped(I)V,blocked
Landroid/net/ITetheringEventCallback$Stub$Proxy;->onConfigurationChanged(Landroid/net/TetheringConfigurationParcel;)V,blocked
Landroid/net/ITetheringEventCallback$Stub$Proxy;->onOffloadStatusChanged(I)V,blocked
Landroid/net/ITetheringEventCallback$Stub$Proxy;->onTetherClientsChanged(Ljava/util/List;)V,blocked
Landroid/net/ITetheringEventCallback$Stub$Proxy;->onTetherStatesChanged(Landroid/net/TetherStatesParcel;)V,blocked
Landroid/net/ITetheringEventCallback$Stub$Proxy;->onUpstreamChanged(Landroid/net/Network;)V,blocked
Landroid/net/ITetheringEventCallback$Stub$Proxy;->sDefaultImpl:Landroid/net/ITetheringEventCallback;,blocked
Landroid/net/ITetheringEventCallback$Stub;-><init>()V,blocked
Landroid/net/ITetheringEventCallback$Stub;->TRANSACTION_onCallbackStarted:I,blocked
Landroid/net/ITetheringEventCallback$Stub;->TRANSACTION_onCallbackStopped:I,blocked
Landroid/net/ITetheringEventCallback$Stub;->TRANSACTION_onConfigurationChanged:I,blocked
Landroid/net/ITetheringEventCallback$Stub;->TRANSACTION_onOffloadStatusChanged:I,blocked
Landroid/net/ITetheringEventCallback$Stub;->TRANSACTION_onTetherClientsChanged:I,blocked
Landroid/net/ITetheringEventCallback$Stub;->TRANSACTION_onTetherStatesChanged:I,blocked
Landroid/net/ITetheringEventCallback$Stub;->TRANSACTION_onUpstreamChanged:I,blocked
Landroid/net/ITetheringEventCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/net/ITetheringEventCallback$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/ITetheringEventCallback;,blocked
Landroid/net/ITetheringEventCallback$Stub;->getDefaultImpl()Landroid/net/ITetheringEventCallback;,blocked
Landroid/net/ITetheringEventCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/net/ITetheringEventCallback$Stub;->setDefaultImpl(Landroid/net/ITetheringEventCallback;)Z,blocked
Landroid/net/ITetheringEventCallback;->DESCRIPTOR:Ljava/lang/String;,blocked
Landroid/net/ITetheringEventCallback;->onCallbackStarted(Landroid/net/TetheringCallbackStartedParcel;)V,blocked
Landroid/net/ITetheringEventCallback;->onCallbackStopped(I)V,blocked
Landroid/net/ITetheringEventCallback;->onConfigurationChanged(Landroid/net/TetheringConfigurationParcel;)V,blocked
Landroid/net/ITetheringEventCallback;->onOffloadStatusChanged(I)V,blocked
Landroid/net/ITetheringEventCallback;->onTetherClientsChanged(Ljava/util/List;)V,blocked
Landroid/net/ITetheringEventCallback;->onTetherStatesChanged(Landroid/net/TetherStatesParcel;)V,blocked
Landroid/net/ITetheringEventCallback;->onUpstreamChanged(Landroid/net/Network;)V,blocked
Landroid/net/InetAddresses;-><init>()V,blocked
Landroid/net/InetAddresses;->isNumericAddress(Ljava/lang/String;)Z,public-api,sdk,system-api,test-api
Landroid/net/InetAddresses;->parseNumericAddress(Ljava/lang/String;)Ljava/net/InetAddress;,public-api,sdk,system-api,test-api
Landroid/net/InvalidPacketException;-><init>(I)V,sdk,system-api,test-api
Landroid/net/InvalidPacketException;->ERROR_INVALID_IP_ADDRESS:I,sdk,system-api,test-api
Landroid/net/InvalidPacketException;->ERROR_INVALID_LENGTH:I,sdk,system-api,test-api
Landroid/net/InvalidPacketException;->ERROR_INVALID_PORT:I,sdk,system-api,test-api
Landroid/net/InvalidPacketException;->getError()I,sdk,system-api,test-api
Landroid/net/InvalidPacketException;->mError:I,blocked
Landroid/net/IpConfiguration$1;-><init>()V,blocked
Landroid/net/IpConfiguration$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/IpConfiguration;,blocked
Landroid/net/IpConfiguration$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/IpConfiguration$1;->newArray(I)[Landroid/net/IpConfiguration;,blocked
Landroid/net/IpConfiguration$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/IpConfiguration$IpAssignment;->$VALUES:[Landroid/net/IpConfiguration$IpAssignment;,blocked
Landroid/net/IpConfiguration$IpAssignment;-><clinit>()V,blocked
Landroid/net/IpConfiguration$IpAssignment;-><init>(Ljava/lang/String;I)V,blocked
Landroid/net/IpConfiguration$IpAssignment;->DHCP:Landroid/net/IpConfiguration$IpAssignment;,sdk,system-api,test-api
Landroid/net/IpConfiguration$IpAssignment;->STATIC:Landroid/net/IpConfiguration$IpAssignment;,sdk,system-api,test-api
Landroid/net/IpConfiguration$IpAssignment;->UNASSIGNED:Landroid/net/IpConfiguration$IpAssignment;,sdk,system-api,test-api
Landroid/net/IpConfiguration$IpAssignment;->valueOf(Ljava/lang/String;)Landroid/net/IpConfiguration$IpAssignment;,sdk,system-api,test-api
Landroid/net/IpConfiguration$IpAssignment;->values()[Landroid/net/IpConfiguration$IpAssignment;,sdk,system-api,test-api
Landroid/net/IpConfiguration$ProxySettings;->$VALUES:[Landroid/net/IpConfiguration$ProxySettings;,blocked
Landroid/net/IpConfiguration$ProxySettings;-><clinit>()V,blocked
Landroid/net/IpConfiguration$ProxySettings;-><init>(Ljava/lang/String;I)V,blocked
Landroid/net/IpConfiguration$ProxySettings;->NONE:Landroid/net/IpConfiguration$ProxySettings;,sdk,system-api,test-api
Landroid/net/IpConfiguration$ProxySettings;->PAC:Landroid/net/IpConfiguration$ProxySettings;,sdk,system-api,test-api
Landroid/net/IpConfiguration$ProxySettings;->STATIC:Landroid/net/IpConfiguration$ProxySettings;,sdk,system-api,test-api
Landroid/net/IpConfiguration$ProxySettings;->UNASSIGNED:Landroid/net/IpConfiguration$ProxySettings;,sdk,system-api,test-api
Landroid/net/IpConfiguration$ProxySettings;->valueOf(Ljava/lang/String;)Landroid/net/IpConfiguration$ProxySettings;,sdk,system-api,test-api
Landroid/net/IpConfiguration$ProxySettings;->values()[Landroid/net/IpConfiguration$ProxySettings;,sdk,system-api,test-api
Landroid/net/IpConfiguration;-><clinit>()V,blocked
Landroid/net/IpConfiguration;-><init>()V,sdk,system-api,test-api
Landroid/net/IpConfiguration;-><init>(Landroid/net/IpConfiguration$IpAssignment;Landroid/net/IpConfiguration$ProxySettings;Landroid/net/StaticIpConfiguration;Landroid/net/ProxyInfo;)V,max-target-r
Landroid/net/IpConfiguration;-><init>(Landroid/net/IpConfiguration;)V,sdk,system-api,test-api
Landroid/net/IpConfiguration;->CREATOR:Landroid/os/Parcelable$Creator;,sdk,system-api,test-api
Landroid/net/IpConfiguration;->TAG:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/IpConfiguration;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/IpConfiguration;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/IpConfiguration;->getHttpProxy()Landroid/net/ProxyInfo;,sdk,system-api,test-api
Landroid/net/IpConfiguration;->getIpAssignment()Landroid/net/IpConfiguration$IpAssignment;,sdk,system-api,test-api
Landroid/net/IpConfiguration;->getProxySettings()Landroid/net/IpConfiguration$ProxySettings;,sdk,system-api,test-api
Landroid/net/IpConfiguration;->getStaticIpConfiguration()Landroid/net/StaticIpConfiguration;,sdk,system-api,test-api
Landroid/net/IpConfiguration;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/IpConfiguration;->httpProxy:Landroid/net/ProxyInfo;,unsupported
Landroid/net/IpConfiguration;->init(Landroid/net/IpConfiguration$IpAssignment;Landroid/net/IpConfiguration$ProxySettings;Landroid/net/StaticIpConfiguration;Landroid/net/ProxyInfo;)V,lo-prio,max-target-o
Landroid/net/IpConfiguration;->ipAssignment:Landroid/net/IpConfiguration$IpAssignment;,lo-prio,max-target-o
Landroid/net/IpConfiguration;->proxySettings:Landroid/net/IpConfiguration$ProxySettings;,lo-prio,max-target-o
Landroid/net/IpConfiguration;->setHttpProxy(Landroid/net/ProxyInfo;)V,sdk,system-api,test-api
Landroid/net/IpConfiguration;->setIpAssignment(Landroid/net/IpConfiguration$IpAssignment;)V,sdk,system-api,test-api
Landroid/net/IpConfiguration;->setProxySettings(Landroid/net/IpConfiguration$ProxySettings;)V,sdk,system-api,test-api
Landroid/net/IpConfiguration;->setStaticIpConfiguration(Landroid/net/StaticIpConfiguration;)V,sdk,system-api,test-api
Landroid/net/IpConfiguration;->staticIpConfiguration:Landroid/net/StaticIpConfiguration;,lo-prio,max-target-o
Landroid/net/IpConfiguration;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/IpConfiguration;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/IpPrefix$1;-><init>()V,blocked
Landroid/net/IpPrefix$1;->compare(Landroid/net/IpPrefix;Landroid/net/IpPrefix;)I,blocked
Landroid/net/IpPrefix$1;->compare(Ljava/lang/Object;Ljava/lang/Object;)I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/IpPrefix$2;-><init>()V,blocked
Landroid/net/IpPrefix$2;->createFromParcel(Landroid/os/Parcel;)Landroid/net/IpPrefix;,blocked
Landroid/net/IpPrefix$2;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/IpPrefix$2;->newArray(I)[Landroid/net/IpPrefix;,blocked
Landroid/net/IpPrefix$2;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/IpPrefix;-><clinit>()V,blocked
Landroid/net/IpPrefix;-><init>(Ljava/lang/String;)V,sdk,system-api,test-api
Landroid/net/IpPrefix;-><init>(Ljava/net/InetAddress;I)V,sdk,system-api,test-api
Landroid/net/IpPrefix;-><init>([BI)V,lo-prio,max-target-o
Landroid/net/IpPrefix;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,sdk,system-api,test-api
Landroid/net/IpPrefix;->access$000(Landroid/net/IpPrefix;)[B,blocked
Landroid/net/IpPrefix;->address:[B,lo-prio,max-target-o
Landroid/net/IpPrefix;->checkAndMaskAddressAndPrefixLength()V,lo-prio,max-target-o
Landroid/net/IpPrefix;->contains(Ljava/net/InetAddress;)Z,public-api,sdk,system-api,test-api
Landroid/net/IpPrefix;->containsPrefix(Landroid/net/IpPrefix;)Z,lo-prio,max-target-o
Landroid/net/IpPrefix;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/IpPrefix;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/IpPrefix;->getAddress()Ljava/net/InetAddress;,public-api,sdk,system-api,test-api
Landroid/net/IpPrefix;->getPrefixLength()I,public-api,sdk,system-api,test-api
Landroid/net/IpPrefix;->getRawAddress()[B,public-api,sdk,system-api,test-api
Landroid/net/IpPrefix;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/IpPrefix;->isIPv4()Z,lo-prio,max-target-o
Landroid/net/IpPrefix;->isIPv6()Z,lo-prio,max-target-o
Landroid/net/IpPrefix;->lengthComparator()Ljava/util/Comparator;,lo-prio,max-target-o
Landroid/net/IpPrefix;->prefixLength:I,lo-prio,max-target-o
Landroid/net/IpPrefix;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/IpPrefix;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/KeepalivePacketData;-><init>(Ljava/net/InetAddress;ILjava/net/InetAddress;I[B)V,sdk,system-api,test-api
Landroid/net/KeepalivePacketData;->TAG:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/KeepalivePacketData;->getDstAddress()Ljava/net/InetAddress;,sdk,system-api,test-api
Landroid/net/KeepalivePacketData;->getDstPort()I,sdk,system-api,test-api
Landroid/net/KeepalivePacketData;->getPacket()[B,sdk,system-api,test-api
Landroid/net/KeepalivePacketData;->getSrcAddress()Ljava/net/InetAddress;,sdk,system-api,test-api
Landroid/net/KeepalivePacketData;->getSrcPort()I,sdk,system-api,test-api
Landroid/net/KeepalivePacketData;->mDstAddress:Ljava/net/InetAddress;,blocked
Landroid/net/KeepalivePacketData;->mDstPort:I,blocked
Landroid/net/KeepalivePacketData;->mPacket:[B,lo-prio,max-target-o
Landroid/net/KeepalivePacketData;->mSrcAddress:Ljava/net/InetAddress;,blocked
Landroid/net/KeepalivePacketData;->mSrcPort:I,blocked
Landroid/net/LinkAddress$1;-><init>()V,blocked
Landroid/net/LinkAddress$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/LinkAddress;,blocked
Landroid/net/LinkAddress$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/LinkAddress$1;->newArray(I)[Landroid/net/LinkAddress;,blocked
Landroid/net/LinkAddress$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/LinkAddress;-><clinit>()V,blocked
Landroid/net/LinkAddress;-><init>(Ljava/lang/String;)V,sdk,system-api,test-api
Landroid/net/LinkAddress;-><init>(Ljava/lang/String;II)V,sdk,system-api,test-api
Landroid/net/LinkAddress;-><init>(Ljava/net/InetAddress;I)V,sdk,system-api,test-api
Landroid/net/LinkAddress;-><init>(Ljava/net/InetAddress;III)V,sdk,system-api,test-api
Landroid/net/LinkAddress;-><init>(Ljava/net/InetAddress;IIIJJ)V,sdk,system-api,test-api
Landroid/net/LinkAddress;-><init>(Ljava/net/InterfaceAddress;)V,lo-prio,max-target-o
Landroid/net/LinkAddress;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,sdk,system-api,test-api
Landroid/net/LinkAddress;->LIFETIME_PERMANENT:J,sdk,system-api,test-api
Landroid/net/LinkAddress;->LIFETIME_UNKNOWN:J,sdk,system-api,test-api
Landroid/net/LinkAddress;->address:Ljava/net/InetAddress;,max-target-p
Landroid/net/LinkAddress;->deprecationTime:J,blocked
Landroid/net/LinkAddress;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/LinkAddress;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/LinkAddress;->expirationTime:J,blocked
Landroid/net/LinkAddress;->flags:I,lo-prio,max-target-o
Landroid/net/LinkAddress;->getAddress()Ljava/net/InetAddress;,public-api,sdk,system-api,test-api
Landroid/net/LinkAddress;->getDeprecationTime()J,sdk,system-api,test-api
Landroid/net/LinkAddress;->getExpirationTime()J,sdk,system-api,test-api
Landroid/net/LinkAddress;->getFlags()I,public-api,sdk,system-api,test-api
Landroid/net/LinkAddress;->getNetworkPrefixLength()I,unsupported
Landroid/net/LinkAddress;->getPrefixLength()I,public-api,sdk,system-api,test-api
Landroid/net/LinkAddress;->getScope()I,public-api,sdk,system-api,test-api
Landroid/net/LinkAddress;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/LinkAddress;->init(Ljava/net/InetAddress;IIIJJ)V,blocked
Landroid/net/LinkAddress;->isGlobalPreferred()Z,sdk,system-api,test-api
Landroid/net/LinkAddress;->isIPv6()Z,max-target-p
Landroid/net/LinkAddress;->isIpv4()Z,sdk,system-api,test-api
Landroid/net/LinkAddress;->isIpv6()Z,sdk,system-api,test-api
Landroid/net/LinkAddress;->isIpv6ULA()Z,blocked
Landroid/net/LinkAddress;->isSameAddressAs(Landroid/net/LinkAddress;)Z,sdk,system-api,test-api
Landroid/net/LinkAddress;->prefixLength:I,max-target-p
Landroid/net/LinkAddress;->scope:I,lo-prio,max-target-o
Landroid/net/LinkAddress;->scopeForUnicastAddress(Ljava/net/InetAddress;)I,lo-prio,max-target-o
Landroid/net/LinkAddress;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/LinkAddress;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties$1;-><init>()V,blocked
Landroid/net/LinkProperties$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/LinkProperties;,blocked
Landroid/net/LinkProperties$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties$1;->newArray(I)[Landroid/net/LinkProperties;,blocked
Landroid/net/LinkProperties$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties$ProvisioningChange;->$VALUES:[Landroid/net/LinkProperties$ProvisioningChange;,blocked
Landroid/net/LinkProperties$ProvisioningChange;-><clinit>()V,blocked
Landroid/net/LinkProperties$ProvisioningChange;-><init>(Ljava/lang/String;I)V,blocked
Landroid/net/LinkProperties$ProvisioningChange;->GAINED_PROVISIONING:Landroid/net/LinkProperties$ProvisioningChange;,unsupported
Landroid/net/LinkProperties$ProvisioningChange;->LOST_PROVISIONING:Landroid/net/LinkProperties$ProvisioningChange;,unsupported
Landroid/net/LinkProperties$ProvisioningChange;->STILL_NOT_PROVISIONED:Landroid/net/LinkProperties$ProvisioningChange;,unsupported
Landroid/net/LinkProperties$ProvisioningChange;->STILL_PROVISIONED:Landroid/net/LinkProperties$ProvisioningChange;,unsupported
Landroid/net/LinkProperties$ProvisioningChange;->valueOf(Ljava/lang/String;)Landroid/net/LinkProperties$ProvisioningChange;,lo-prio,max-target-o
Landroid/net/LinkProperties$ProvisioningChange;->values()[Landroid/net/LinkProperties$ProvisioningChange;,unsupported
Landroid/net/LinkProperties;-><clinit>()V,blocked
Landroid/net/LinkProperties;-><init>()V,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;-><init>(Landroid/net/LinkProperties;)V,sdk,system-api,test-api
Landroid/net/LinkProperties;-><init>(Landroid/net/LinkProperties;Z)V,sdk,system-api,test-api
Landroid/net/LinkProperties;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->INET6_ADDR_LENGTH:I,blocked
Landroid/net/LinkProperties;->MAX_MTU:I,lo-prio,max-target-o
Landroid/net/LinkProperties;->MIN_MTU:I,lo-prio,max-target-o
Landroid/net/LinkProperties;->MIN_MTU_V6:I,lo-prio,max-target-o
Landroid/net/LinkProperties;->access$000(Landroid/os/Parcel;)Ljava/net/InetAddress;,blocked
Landroid/net/LinkProperties;->addDnsServer(Ljava/net/InetAddress;)Z,sdk,system-api,test-api
Landroid/net/LinkProperties;->addLinkAddress(Landroid/net/LinkAddress;)Z,sdk,system-api,test-api
Landroid/net/LinkProperties;->addPcscfServer(Ljava/net/InetAddress;)Z,sdk,system-api,test-api
Landroid/net/LinkProperties;->addRoute(Landroid/net/RouteInfo;)Z,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->addStackedLink(Landroid/net/LinkProperties;)Z,unsupported
Landroid/net/LinkProperties;->addValidatedPrivateDnsServer(Ljava/net/InetAddress;)Z,lo-prio,max-target-o
Landroid/net/LinkProperties;->clear()V,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->compareProvisioning(Landroid/net/LinkProperties;Landroid/net/LinkProperties;)Landroid/net/LinkProperties$ProvisioningChange;,max-target-r
Landroid/net/LinkProperties;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->ensureDirectlyConnectedRoutes()V,lo-prio,max-target-o
Landroid/net/LinkProperties;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->findLinkAddressIndex(Landroid/net/LinkAddress;)I,lo-prio,max-target-o
Landroid/net/LinkProperties;->findRouteIndexByRouteKey(Landroid/net/RouteInfo;)I,blocked
Landroid/net/LinkProperties;->getAddresses()Ljava/util/List;,sdk,system-api,test-api
Landroid/net/LinkProperties;->getAllAddresses()Ljava/util/List;,unsupported
Landroid/net/LinkProperties;->getAllInterfaceNames()Ljava/util/List;,sdk,system-api,test-api
Landroid/net/LinkProperties;->getAllLinkAddresses()Ljava/util/List;,sdk,system-api,test-api
Landroid/net/LinkProperties;->getAllRoutes()Ljava/util/List;,sdk,system-api,test-api
Landroid/net/LinkProperties;->getCaptivePortalApiUrl()Landroid/net/Uri;,sdk,system-api,test-api
Landroid/net/LinkProperties;->getCaptivePortalData()Landroid/net/CaptivePortalData;,sdk,system-api,test-api
Landroid/net/LinkProperties;->getDhcpServerAddress()Ljava/net/Inet4Address;,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->getDnsServers()Ljava/util/List;,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->getDomains()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->getHttpProxy()Landroid/net/ProxyInfo;,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->getInterfaceName()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->getLinkAddresses()Ljava/util/List;,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->getMtu()I,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->getNat64Prefix()Landroid/net/IpPrefix;,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->getPcscfServers()Ljava/util/List;,sdk,system-api,test-api
Landroid/net/LinkProperties;->getPrivateDnsServerName()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->getRoutes()Ljava/util/List;,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->getStackedLinks()Ljava/util/List;,max-target-r
Landroid/net/LinkProperties;->getTcpBufferSizes()Ljava/lang/String;,sdk,system-api,test-api
Landroid/net/LinkProperties;->getValidatedPrivateDnsServers()Ljava/util/List;,sdk,system-api,test-api
Landroid/net/LinkProperties;->hasGlobalIPv6Address()Z,max-target-p
Landroid/net/LinkProperties;->hasGlobalIpv6Address()Z,sdk,system-api,test-api
Landroid/net/LinkProperties;->hasIPv4Address()Z,max-target-p
Landroid/net/LinkProperties;->hasIPv4DefaultRoute()Z,max-target-p
Landroid/net/LinkProperties;->hasIPv4DnsServer()Z,max-target-p
Landroid/net/LinkProperties;->hasIPv6DefaultRoute()Z,max-target-p
Landroid/net/LinkProperties;->hasIPv6DnsServer()Z,max-target-p
Landroid/net/LinkProperties;->hasIpv4Address()Z,sdk,system-api,test-api
Landroid/net/LinkProperties;->hasIpv4AddressOnInterface(Ljava/lang/String;)Z,blocked
Landroid/net/LinkProperties;->hasIpv4DefaultRoute()Z,sdk,system-api,test-api
Landroid/net/LinkProperties;->hasIpv4DnsServer()Z,sdk,system-api,test-api
Landroid/net/LinkProperties;->hasIpv4PcscfServer()Z,blocked
Landroid/net/LinkProperties;->hasIpv4UnreachableDefaultRoute()Z,blocked
Landroid/net/LinkProperties;->hasIpv6DefaultRoute()Z,sdk,system-api,test-api
Landroid/net/LinkProperties;->hasIpv6DnsServer()Z,sdk,system-api,test-api
Landroid/net/LinkProperties;->hasIpv6PcscfServer()Z,blocked
Landroid/net/LinkProperties;->hasIpv6UnreachableDefaultRoute()Z,blocked
Landroid/net/LinkProperties;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->isIPv6Provisioned()Z,max-target-p
Landroid/net/LinkProperties;->isIdenticalAddresses(Landroid/net/LinkProperties;)Z,unsupported
Landroid/net/LinkProperties;->isIdenticalCaptivePortalApiUrl(Landroid/net/LinkProperties;)Z,blocked
Landroid/net/LinkProperties;->isIdenticalCaptivePortalData(Landroid/net/LinkProperties;)Z,blocked
Landroid/net/LinkProperties;->isIdenticalDhcpServerAddress(Landroid/net/LinkProperties;)Z,blocked
Landroid/net/LinkProperties;->isIdenticalDnses(Landroid/net/LinkProperties;)Z,unsupported
Landroid/net/LinkProperties;->isIdenticalHttpProxy(Landroid/net/LinkProperties;)Z,max-target-p
Landroid/net/LinkProperties;->isIdenticalInterfaceName(Landroid/net/LinkProperties;)Z,unsupported
Landroid/net/LinkProperties;->isIdenticalMtu(Landroid/net/LinkProperties;)Z,lo-prio,max-target-o
Landroid/net/LinkProperties;->isIdenticalNat64Prefix(Landroid/net/LinkProperties;)Z,blocked
Landroid/net/LinkProperties;->isIdenticalPcscfs(Landroid/net/LinkProperties;)Z,blocked
Landroid/net/LinkProperties;->isIdenticalPrivateDns(Landroid/net/LinkProperties;)Z,lo-prio,max-target-o
Landroid/net/LinkProperties;->isIdenticalRoutes(Landroid/net/LinkProperties;)Z,unsupported
Landroid/net/LinkProperties;->isIdenticalStackedLinks(Landroid/net/LinkProperties;)Z,max-target-r
Landroid/net/LinkProperties;->isIdenticalTcpBufferSizes(Landroid/net/LinkProperties;)Z,lo-prio,max-target-o
Landroid/net/LinkProperties;->isIdenticalValidatedPrivateDnses(Landroid/net/LinkProperties;)Z,lo-prio,max-target-o
Landroid/net/LinkProperties;->isIdenticalWakeOnLan(Landroid/net/LinkProperties;)Z,blocked
Landroid/net/LinkProperties;->isIpv4Provisioned()Z,sdk,system-api,test-api
Landroid/net/LinkProperties;->isIpv6Provisioned()Z,sdk,system-api,test-api
Landroid/net/LinkProperties;->isPrivateDnsActive()Z,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->isProvisioned()Z,sdk,system-api,test-api
Landroid/net/LinkProperties;->isReachable(Ljava/net/InetAddress;)Z,sdk,system-api,test-api
Landroid/net/LinkProperties;->isValidMtu(IZ)Z,lo-prio,max-target-o
Landroid/net/LinkProperties;->isWakeOnLanSupported()Z,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->mCaptivePortalApiUrl:Landroid/net/Uri;,blocked
Landroid/net/LinkProperties;->mCaptivePortalData:Landroid/net/CaptivePortalData;,blocked
Landroid/net/LinkProperties;->mDhcpServerAddress:Ljava/net/Inet4Address;,blocked
Landroid/net/LinkProperties;->mDnses:Ljava/util/ArrayList;,lo-prio,max-target-o
Landroid/net/LinkProperties;->mDomains:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/LinkProperties;->mHttpProxy:Landroid/net/ProxyInfo;,lo-prio,max-target-o
Landroid/net/LinkProperties;->mIfaceName:Ljava/lang/String;,max-target-p
Landroid/net/LinkProperties;->mLinkAddresses:Ljava/util/ArrayList;,lo-prio,max-target-o
Landroid/net/LinkProperties;->mMtu:I,lo-prio,max-target-o
Landroid/net/LinkProperties;->mNat64Prefix:Landroid/net/IpPrefix;,blocked
Landroid/net/LinkProperties;->mParcelSensitiveFields:Z,blocked
Landroid/net/LinkProperties;->mPcscfs:Ljava/util/ArrayList;,blocked
Landroid/net/LinkProperties;->mPrivateDnsServerName:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/LinkProperties;->mRoutes:Ljava/util/ArrayList;,lo-prio,max-target-o
Landroid/net/LinkProperties;->mStackedLinks:Ljava/util/Hashtable;,lo-prio,max-target-o
Landroid/net/LinkProperties;->mTcpBufferSizes:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/LinkProperties;->mUsePrivateDns:Z,lo-prio,max-target-o
Landroid/net/LinkProperties;->mValidatedPrivateDnses:Ljava/util/ArrayList;,lo-prio,max-target-o
Landroid/net/LinkProperties;->mWakeOnLanSupported:Z,blocked
Landroid/net/LinkProperties;->readAddress(Landroid/os/Parcel;)Ljava/net/InetAddress;,blocked
Landroid/net/LinkProperties;->removeDnsServer(Ljava/net/InetAddress;)Z,sdk,system-api,test-api
Landroid/net/LinkProperties;->removeLinkAddress(Landroid/net/LinkAddress;)Z,sdk,system-api,test-api
Landroid/net/LinkProperties;->removePcscfServer(Ljava/net/InetAddress;)Z,blocked
Landroid/net/LinkProperties;->removeRoute(Landroid/net/RouteInfo;)Z,sdk,system-api,test-api
Landroid/net/LinkProperties;->removeStackedLink(Ljava/lang/String;)Z,lo-prio,max-target-o
Landroid/net/LinkProperties;->removeValidatedPrivateDnsServer(Ljava/net/InetAddress;)Z,lo-prio,max-target-o
Landroid/net/LinkProperties;->routeWithInterface(Landroid/net/RouteInfo;)Landroid/net/RouteInfo;,lo-prio,max-target-o
Landroid/net/LinkProperties;->setCaptivePortalApiUrl(Landroid/net/Uri;)V,sdk,system-api,test-api
Landroid/net/LinkProperties;->setCaptivePortalData(Landroid/net/CaptivePortalData;)V,sdk,system-api,test-api
Landroid/net/LinkProperties;->setDhcpServerAddress(Ljava/net/Inet4Address;)V,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->setDnsServers(Ljava/util/Collection;)V,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->setDomains(Ljava/lang/String;)V,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->setHttpProxy(Landroid/net/ProxyInfo;)V,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->setInterfaceName(Ljava/lang/String;)V,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->setLinkAddresses(Ljava/util/Collection;)V,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->setMtu(I)V,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->setNat64Prefix(Landroid/net/IpPrefix;)V,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->setPcscfServers(Ljava/util/Collection;)V,sdk,system-api,test-api
Landroid/net/LinkProperties;->setPrivateDnsServerName(Ljava/lang/String;)V,sdk,system-api,test-api
Landroid/net/LinkProperties;->setTcpBufferSizes(Ljava/lang/String;)V,sdk,system-api,test-api
Landroid/net/LinkProperties;->setUsePrivateDns(Z)V,sdk,system-api,test-api
Landroid/net/LinkProperties;->setValidatedPrivateDnsServers(Ljava/util/Collection;)V,sdk,system-api,test-api
Landroid/net/LinkProperties;->setWakeOnLanSupported(Z)V,blocked
Landroid/net/LinkProperties;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/LinkProperties;->writeAddress(Landroid/os/Parcel;Ljava/net/InetAddress;)V,blocked
Landroid/net/LinkProperties;->writeAddresses(Landroid/os/Parcel;Ljava/util/List;)V,blocked
Landroid/net/LinkProperties;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/MacAddress$1;-><init>()V,blocked
Landroid/net/MacAddress$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/MacAddress;,blocked
Landroid/net/MacAddress$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/MacAddress$1;->newArray(I)[Landroid/net/MacAddress;,blocked
Landroid/net/MacAddress$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/MacAddress;-><clinit>()V,blocked
Landroid/net/MacAddress;-><init>(J)V,lo-prio,max-target-o
Landroid/net/MacAddress;-><init>(JLandroid/net/MacAddress$1;)V,blocked
Landroid/net/MacAddress;->ALL_ZEROS_ADDRESS:Landroid/net/MacAddress;,max-target-r
Landroid/net/MacAddress;->BASE_GOOGLE_MAC:Landroid/net/MacAddress;,lo-prio,max-target-o
Landroid/net/MacAddress;->BROADCAST_ADDRESS:Landroid/net/MacAddress;,public-api,sdk,system-api,test-api
Landroid/net/MacAddress;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,sdk,system-api,test-api
Landroid/net/MacAddress;->DEFAULT_MAC_ADDRESS:Landroid/net/MacAddress;,blocked
Landroid/net/MacAddress;->ETHER_ADDR_BROADCAST:[B,lo-prio,max-target-o
Landroid/net/MacAddress;->ETHER_ADDR_LEN:I,lo-prio,max-target-o
Landroid/net/MacAddress;->LOCALLY_ASSIGNED_MASK:J,lo-prio,max-target-o
Landroid/net/MacAddress;->MULTICAST_MASK:J,lo-prio,max-target-o
Landroid/net/MacAddress;->NIC_MASK:J,lo-prio,max-target-o
Landroid/net/MacAddress;->OUI_MASK:J,lo-prio,max-target-o
Landroid/net/MacAddress;->TYPE_BROADCAST:I,public-api,sdk,system-api,test-api
Landroid/net/MacAddress;->TYPE_MULTICAST:I,public-api,sdk,system-api,test-api
Landroid/net/MacAddress;->TYPE_UNICAST:I,public-api,sdk,system-api,test-api
Landroid/net/MacAddress;->TYPE_UNKNOWN:I,lo-prio,max-target-o
Landroid/net/MacAddress;->VALID_LONG_MASK:J,lo-prio,max-target-o
Landroid/net/MacAddress;->addr([I)[B,blocked
Landroid/net/MacAddress;->byteAddrFromLongAddr(J)[B,lo-prio,max-target-o
Landroid/net/MacAddress;->byteAddrFromStringAddr(Ljava/lang/String;)[B,lo-prio,max-target-o
Landroid/net/MacAddress;->createRandomUnicastAddressWithGoogleBase()Landroid/net/MacAddress;,lo-prio,max-target-o
Landroid/net/MacAddress;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/MacAddress;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/MacAddress;->fromBytes([B)Landroid/net/MacAddress;,public-api,sdk,system-api,test-api
Landroid/net/MacAddress;->fromString(Ljava/lang/String;)Landroid/net/MacAddress;,public-api,sdk,system-api,test-api
Landroid/net/MacAddress;->getAddressType()I,public-api,sdk,system-api,test-api
Landroid/net/MacAddress;->getLinkLocalIpv6FromEui48Mac()Ljava/net/Inet6Address;,public-api,sdk,system-api,test-api
Landroid/net/MacAddress;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/MacAddress;->isLocallyAssigned()Z,public-api,sdk,system-api,test-api
Landroid/net/MacAddress;->isMacAddress([B)Z,lo-prio,max-target-o
Landroid/net/MacAddress;->longAddrFromByteAddr([B)J,lo-prio,max-target-o
Landroid/net/MacAddress;->longAddrFromStringAddr(Ljava/lang/String;)J,lo-prio,max-target-o
Landroid/net/MacAddress;->mAddr:J,lo-prio,max-target-o
Landroid/net/MacAddress;->macAddressType([B)I,lo-prio,max-target-o
Landroid/net/MacAddress;->matches(Landroid/net/MacAddress;Landroid/net/MacAddress;)Z,public-api,sdk,system-api,test-api
Landroid/net/MacAddress;->stringAddrFromByteAddr([B)Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/MacAddress;->stringAddrFromLongAddr(J)Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/MacAddress;->toByteArray()[B,public-api,sdk,system-api,test-api
Landroid/net/MacAddress;->toOuiString()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/MacAddress;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/MacAddress;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/NattKeepalivePacketData$1;-><init>()V,blocked
Landroid/net/NattKeepalivePacketData$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/NattKeepalivePacketData;,blocked
Landroid/net/NattKeepalivePacketData$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/NattKeepalivePacketData$1;->newArray(I)[Landroid/net/NattKeepalivePacketData;,blocked
Landroid/net/NattKeepalivePacketData$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/NattKeepalivePacketData;-><clinit>()V,blocked
Landroid/net/NattKeepalivePacketData;-><init>(Ljava/net/InetAddress;ILjava/net/InetAddress;I[B)V,sdk,system-api,test-api
Landroid/net/NattKeepalivePacketData;->CREATOR:Landroid/os/Parcelable$Creator;,sdk,system-api,test-api
Landroid/net/NattKeepalivePacketData;->IPV4_HEADER_LENGTH:I,blocked
Landroid/net/NattKeepalivePacketData;->UDP_HEADER_LENGTH:I,blocked
Landroid/net/NattKeepalivePacketData;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/NattKeepalivePacketData;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/NattKeepalivePacketData;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/NattKeepalivePacketData;->nattKeepalivePacket(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Landroid/net/NattKeepalivePacketData;,blocked
Landroid/net/NattKeepalivePacketData;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/NattSocketKeepalive$$ExternalSyntheticLambda0;-><init>(Landroid/net/NattSocketKeepalive;)V,blocked
Landroid/net/NattSocketKeepalive$$ExternalSyntheticLambda0;->f$0:Landroid/net/NattSocketKeepalive;,blocked
Landroid/net/NattSocketKeepalive$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/NattSocketKeepalive$$ExternalSyntheticLambda1;-><init>(Landroid/net/NattSocketKeepalive;I)V,blocked
Landroid/net/NattSocketKeepalive$$ExternalSyntheticLambda1;->f$0:Landroid/net/NattSocketKeepalive;,blocked
Landroid/net/NattSocketKeepalive$$ExternalSyntheticLambda1;->f$1:I,blocked
Landroid/net/NattSocketKeepalive$$ExternalSyntheticLambda1;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/NattSocketKeepalive;-><init>(Landroid/net/IConnectivityManager;Landroid/net/Network;Landroid/os/ParcelFileDescriptor;ILjava/net/InetAddress;Ljava/net/InetAddress;Ljava/util/concurrent/Executor;Landroid/net/SocketKeepalive$Callback;)V,blocked
Landroid/net/NattSocketKeepalive;->NATT_PORT:I,blocked
Landroid/net/NattSocketKeepalive;->lambda$startImpl$0$NattSocketKeepalive(I)V,blocked
Landroid/net/NattSocketKeepalive;->lambda$stopImpl$1$NattSocketKeepalive()V,blocked
Landroid/net/NattSocketKeepalive;->mDestination:Ljava/net/InetAddress;,blocked
Landroid/net/NattSocketKeepalive;->mResourceId:I,blocked
Landroid/net/NattSocketKeepalive;->mSource:Ljava/net/InetAddress;,blocked
Landroid/net/NattSocketKeepalive;->startImpl(I)V,blocked
Landroid/net/NattSocketKeepalive;->stopImpl()V,blocked
Landroid/net/Network$$ExternalSyntheticLambda0;-><init>(Landroid/net/Network;)V,blocked
Landroid/net/Network$$ExternalSyntheticLambda0;->f$0:Landroid/net/Network;,blocked
Landroid/net/Network$$ExternalSyntheticLambda0;->lookup(Ljava/lang/String;)Ljava/util/List;,blocked,core-platform-api
Landroid/net/Network$1;-><init>()V,blocked
Landroid/net/Network$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/Network;,blocked
Landroid/net/Network$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/Network$1;->newArray(I)[Landroid/net/Network;,blocked
Landroid/net/Network$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/Network$NetworkBoundSocketFactory;-><init>(Landroid/net/Network;)V,blocked
Landroid/net/Network$NetworkBoundSocketFactory;-><init>(Landroid/net/Network;Landroid/net/Network$1;)V,blocked
Landroid/net/Network$NetworkBoundSocketFactory;->connectToHost(Ljava/lang/String;ILjava/net/SocketAddress;)Ljava/net/Socket;,lo-prio,max-target-o
Landroid/net/Network$NetworkBoundSocketFactory;->createSocket()Ljava/net/Socket;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/Network$NetworkBoundSocketFactory;->createSocket(Ljava/lang/String;I)Ljava/net/Socket;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/Network$NetworkBoundSocketFactory;->createSocket(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/Network$NetworkBoundSocketFactory;->createSocket(Ljava/net/InetAddress;I)Ljava/net/Socket;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/Network$NetworkBoundSocketFactory;->createSocket(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/Network$NetworkBoundSocketFactory;->this$0:Landroid/net/Network;,blocked
Landroid/net/Network;-><clinit>()V,blocked
Landroid/net/Network;-><init>(I)V,max-target-r
Landroid/net/Network;-><init>(IZ)V,blocked
Landroid/net/Network;-><init>(Landroid/net/Network;)V,sdk,system-api,test-api
Landroid/net/Network;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,sdk,system-api,test-api
Landroid/net/Network;->HANDLE_MAGIC:J,lo-prio,max-target-o
Landroid/net/Network;->HANDLE_MAGIC_SIZE:I,lo-prio,max-target-o
Landroid/net/Network;->USE_LOCAL_NAMESERVERS_FLAG:I,blocked
Landroid/net/Network;->bindSocket(Ljava/io/FileDescriptor;)V,public-api,sdk,system-api,test-api
Landroid/net/Network;->bindSocket(Ljava/net/DatagramSocket;)V,public-api,sdk,system-api,test-api
Landroid/net/Network;->bindSocket(Ljava/net/Socket;)V,public-api,sdk,system-api,test-api
Landroid/net/Network;->createUrlConnectionFactory(Llibcore/net/http/Dns;)Llibcore/net/http/HttpURLConnectionFactory;,blocked
Landroid/net/Network;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/Network;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/Network;->fromNetworkHandle(J)Landroid/net/Network;,public-api,sdk,system-api,test-api
Landroid/net/Network;->getAllByName(Ljava/lang/String;)[Ljava/net/InetAddress;,public-api,sdk,system-api,test-api
Landroid/net/Network;->getByName(Ljava/lang/String;)Ljava/net/InetAddress;,public-api,sdk,system-api,test-api
Landroid/net/Network;->getNetId()I,sdk,system-api,test-api
Landroid/net/Network;->getNetIdForResolv()I,lo-prio,max-target-o
Landroid/net/Network;->getNetworkHandle()J,public-api,sdk,system-api,test-api
Landroid/net/Network;->getPrivateDnsBypassingCopy()Landroid/net/Network;,sdk,system-api,test-api
Landroid/net/Network;->getSocketFactory()Ljavax/net/SocketFactory;,public-api,sdk,system-api,test-api
Landroid/net/Network;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/Network;->httpKeepAlive:Z,lo-prio,max-target-o
Landroid/net/Network;->httpKeepAliveDurationMs:J,lo-prio,max-target-o
Landroid/net/Network;->httpMaxConnections:I,lo-prio,max-target-o
Landroid/net/Network;->lambda$openConnection$0$Network(Ljava/lang/String;)Ljava/util/List;,blocked
Landroid/net/Network;->mLock:Ljava/lang/Object;,lo-prio,max-target-o
Landroid/net/Network;->mNetworkBoundSocketFactory:Landroid/net/Network$NetworkBoundSocketFactory;,lo-prio,max-target-o
Landroid/net/Network;->mPrivateDnsBypass:Z,lo-prio,max-target-o
Landroid/net/Network;->mUrlConnectionFactory:Llibcore/net/http/HttpURLConnectionFactory;,blocked
Landroid/net/Network;->netId:I,unsupported
Landroid/net/Network;->openConnection(Ljava/net/URL;)Ljava/net/URLConnection;,public-api,sdk,system-api,test-api
Landroid/net/Network;->openConnection(Ljava/net/URL;Ljava/net/Proxy;)Ljava/net/URLConnection;,public-api,sdk,system-api,test-api
Landroid/net/Network;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/Network;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/NetworkAgent$$ExternalSyntheticLambda0;-><init>(I)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda0;->execute(Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda0;->f$0:I,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda10;-><init>(Landroid/net/NetworkScore;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda10;->execute(Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda10;->f$0:Landroid/net/NetworkScore;,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda11;-><init>(Ljava/util/ArrayList;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda11;->execute(Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda11;->f$0:Ljava/util/ArrayList;,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda12;-><init>(ZZ)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda12;->execute(Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda12;->f$0:Z,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda12;->f$1:Z,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda13;-><init>(Landroid/os/ConditionVariable;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda13;->f$0:Landroid/os/ConditionVariable;,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda13;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/NetworkAgent$$ExternalSyntheticLambda1;-><init>(II)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda1;->execute(Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda1;->f$0:I,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda1;->f$1:I,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda2;-><init>(II)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda2;->execute(Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda2;->f$0:I,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda2;->f$1:I,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda3;-><init>(III)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda3;->execute(Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda3;->f$0:I,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda3;->f$1:I,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda3;->f$2:I,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda4;-><init>(IILandroid/net/QosSessionAttributes;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda4;->execute(Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda4;->f$0:I,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda4;->f$1:I,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda4;->f$2:Landroid/net/QosSessionAttributes;,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda5;-><init>(IILandroid/net/QosSessionAttributes;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda5;->execute(Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda5;->f$0:I,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda5;->f$1:I,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda5;->f$2:Landroid/net/QosSessionAttributes;,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda6;-><init>(J)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda6;->execute(Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda6;->f$0:J,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda7;-><init>(Landroid/net/LinkProperties;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda7;->execute(Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda7;->f$0:Landroid/net/LinkProperties;,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda8;-><init>(Landroid/net/NetworkCapabilities;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda8;->execute(Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda8;->f$0:Landroid/net/NetworkCapabilities;,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda9;-><init>(Landroid/net/NetworkInfo;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda9;->execute(Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent$$ExternalSyntheticLambda9;->f$0:Landroid/net/NetworkInfo;,blocked
Landroid/net/NetworkAgent$InitialConfiguration;-><init>(Landroid/content/Context;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;Landroid/net/NetworkScore;Landroid/net/NetworkAgentConfig;Landroid/net/NetworkInfo;)V,blocked
Landroid/net/NetworkAgent$InitialConfiguration;->capabilities:Landroid/net/NetworkCapabilities;,blocked
Landroid/net/NetworkAgent$InitialConfiguration;->config:Landroid/net/NetworkAgentConfig;,blocked
Landroid/net/NetworkAgent$InitialConfiguration;->context:Landroid/content/Context;,blocked
Landroid/net/NetworkAgent$InitialConfiguration;->info:Landroid/net/NetworkInfo;,blocked
Landroid/net/NetworkAgent$InitialConfiguration;->properties:Landroid/net/LinkProperties;,blocked
Landroid/net/NetworkAgent$InitialConfiguration;->score:Landroid/net/NetworkScore;,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;-><clinit>()V,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;-><init>(Landroid/os/Handler;)V,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;-><init>(Landroid/os/Handler;Landroid/net/NetworkAgent$1;)V,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;->LOG_TAG:Ljava/lang/String;,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;->mHandler:Landroid/os/Handler;,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;->onAddNattKeepalivePacketFilter(ILandroid/net/NattKeepalivePacketData;)V,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;->onAddTcpKeepalivePacketFilter(ILandroid/net/TcpKeepalivePacketData;)V,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;->onBandwidthUpdateRequested()V,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;->onDisconnected()V,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;->onNetworkCreated()V,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;->onNetworkDestroyed()V,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;->onPreventAutomaticReconnect()V,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;->onQosCallbackUnregistered(I)V,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;->onQosFilterCallbackRegistered(ILandroid/net/QosFilterParcelable;)V,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;->onRegistered(Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;->onRemoveKeepalivePacketFilter(I)V,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;->onSaveAcceptUnvalidated(Z)V,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;->onSignalStrengthThresholdsUpdated([I)V,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;->onStartNattSocketKeepalive(IILandroid/net/NattKeepalivePacketData;)V,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;->onStartTcpSocketKeepalive(IILandroid/net/TcpKeepalivePacketData;)V,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;->onStopSocketKeepalive(I)V,blocked
Landroid/net/NetworkAgent$NetworkAgentBinder;->onValidationStatusChanged(ILjava/lang/String;)V,blocked
Landroid/net/NetworkAgent$NetworkAgentHandler;-><init>(Landroid/net/NetworkAgent;Landroid/os/Looper;)V,blocked
Landroid/net/NetworkAgent$NetworkAgentHandler;->handleMessage(Landroid/os/Message;)V,public-api,sdk,system-api,test-api
Landroid/net/NetworkAgent$NetworkAgentHandler;->this$0:Landroid/net/NetworkAgent;,blocked
Landroid/net/NetworkAgent$RegistryAction;->execute(Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent;-><init>(Landroid/content/Context;Landroid/os/Looper;Ljava/lang/String;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;ILandroid/net/NetworkAgentConfig;Landroid/net/NetworkProvider;)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;-><init>(Landroid/content/Context;Landroid/os/Looper;Ljava/lang/String;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;Landroid/net/NetworkScore;Landroid/net/NetworkAgentConfig;Landroid/net/NetworkProvider;)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;-><init>(Landroid/os/Looper;Landroid/content/Context;Ljava/lang/String;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;Landroid/net/NetworkScore;Landroid/net/NetworkAgentConfig;ILandroid/net/NetworkInfo;)V,blocked
Landroid/net/NetworkAgent;->BASE:I,lo-prio,max-target-o
Landroid/net/NetworkAgent;->BW_REFRESH_MIN_WIN_MS:J,lo-prio,max-target-o
Landroid/net/NetworkAgent;->CMD_ADD_KEEPALIVE_PACKET_FILTER:I,blocked
Landroid/net/NetworkAgent;->CMD_NETWORK_CREATED:I,blocked
Landroid/net/NetworkAgent;->CMD_NETWORK_DESTROYED:I,blocked
Landroid/net/NetworkAgent;->CMD_PREVENT_AUTOMATIC_RECONNECT:I,lo-prio,max-target-o
Landroid/net/NetworkAgent;->CMD_REGISTER_QOS_CALLBACK:I,blocked
Landroid/net/NetworkAgent;->CMD_REMOVE_KEEPALIVE_PACKET_FILTER:I,blocked
Landroid/net/NetworkAgent;->CMD_REPORT_NETWORK_STATUS:I,lo-prio,max-target-o
Landroid/net/NetworkAgent;->CMD_REQUEST_BANDWIDTH_UPDATE:I,lo-prio,max-target-o
Landroid/net/NetworkAgent;->CMD_SAVE_ACCEPT_UNVALIDATED:I,lo-prio,max-target-o
Landroid/net/NetworkAgent;->CMD_SET_SIGNAL_STRENGTH_THRESHOLDS:I,lo-prio,max-target-o
Landroid/net/NetworkAgent;->CMD_START_SOCKET_KEEPALIVE:I,blocked
Landroid/net/NetworkAgent;->CMD_STOP_SOCKET_KEEPALIVE:I,blocked
Landroid/net/NetworkAgent;->CMD_SUSPECT_BAD:I,lo-prio,max-target-o
Landroid/net/NetworkAgent;->CMD_UNREGISTER_QOS_CALLBACK:I,blocked
Landroid/net/NetworkAgent;->DBG:Z,lo-prio,max-target-o
Landroid/net/NetworkAgent;->EVENT_AGENT_CONNECTED:I,blocked
Landroid/net/NetworkAgent;->EVENT_AGENT_DISCONNECTED:I,blocked
Landroid/net/NetworkAgent;->EVENT_LINGER_DURATION_CHANGED:I,blocked
Landroid/net/NetworkAgent;->EVENT_NETWORK_CAPABILITIES_CHANGED:I,lo-prio,max-target-o
Landroid/net/NetworkAgent;->EVENT_NETWORK_INFO_CHANGED:I,lo-prio,max-target-o
Landroid/net/NetworkAgent;->EVENT_NETWORK_PROPERTIES_CHANGED:I,lo-prio,max-target-o
Landroid/net/NetworkAgent;->EVENT_NETWORK_SCORE_CHANGED:I,lo-prio,max-target-o
Landroid/net/NetworkAgent;->EVENT_SET_EXPLICITLY_SELECTED:I,lo-prio,max-target-o
Landroid/net/NetworkAgent;->EVENT_SOCKET_KEEPALIVE:I,blocked
Landroid/net/NetworkAgent;->EVENT_TEARDOWN_DELAY_CHANGED:I,blocked
Landroid/net/NetworkAgent;->EVENT_UNDERLYING_NETWORKS_CHANGED:I,blocked
Landroid/net/NetworkAgent;->INVALID_NETWORK:I,lo-prio,max-target-o
Landroid/net/NetworkAgent;->LOG_TAG:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/NetworkAgent;->MAX_TEARDOWN_DELAY_MS:I,blocked
Landroid/net/NetworkAgent;->MIN_LINGER_TIMER_MS:I,blocked
Landroid/net/NetworkAgent;->REDIRECT_URL_KEY:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/NetworkAgent;->VALIDATION_STATUS_NOT_VALID:I,sdk,system-api,test-api
Landroid/net/NetworkAgent;->VALIDATION_STATUS_VALID:I,sdk,system-api,test-api
Landroid/net/NetworkAgent;->VALID_NETWORK:I,lo-prio,max-target-o
Landroid/net/NetworkAgent;->VDBG:Z,lo-prio,max-target-o
Landroid/net/NetworkAgent;->WIFI_BASE_SCORE:I,lo-prio,max-target-o
Landroid/net/NetworkAgent;->access$000(Landroid/net/NetworkAgent;)Landroid/net/INetworkAgentRegistry;,blocked
Landroid/net/NetworkAgent;->access$002(Landroid/net/NetworkAgent;Landroid/net/INetworkAgentRegistry;)Landroid/net/INetworkAgentRegistry;,blocked
Landroid/net/NetworkAgent;->access$100(Landroid/net/NetworkAgent;)Ljava/util/ArrayList;,blocked
Landroid/net/NetworkAgent;->access$200(Landroid/net/NetworkAgent;)Ljava/lang/String;,blocked
Landroid/net/NetworkAgent;->access$300(Landroid/net/NetworkAgent;)J,blocked
Landroid/net/NetworkAgent;->access$400(Landroid/net/NetworkAgent;)Z,blocked
Landroid/net/NetworkAgent;->access$402(Landroid/net/NetworkAgent;Z)Z,blocked
Landroid/net/NetworkAgent;->access$500(Landroid/net/NetworkAgent;)Ljava/util/concurrent/atomic/AtomicBoolean;,blocked
Landroid/net/NetworkAgent;->addKeepalivePacketFilter(Landroid/os/Message;)V,blocked
Landroid/net/NetworkAgent;->explicitlySelected(Z)V,lo-prio,max-target-o
Landroid/net/NetworkAgent;->explicitlySelected(ZZ)V,blocked
Landroid/net/NetworkAgent;->getLegacyNetworkInfo(Landroid/net/NetworkAgentConfig;)Landroid/net/NetworkInfo;,blocked
Landroid/net/NetworkAgent;->getNetwork()Landroid/net/Network;,sdk,system-api,test-api
Landroid/net/NetworkAgent;->lambda$explicitlySelected$6(ZZLandroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent;->lambda$queueOrSendNetworkInfo$3(Landroid/net/NetworkInfo;Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent;->lambda$sendLinkProperties$0(Landroid/net/LinkProperties;Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent;->lambda$sendNetworkCapabilities$4(Landroid/net/NetworkCapabilities;Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent;->lambda$sendNetworkScore$5(Landroid/net/NetworkScore;Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent;->lambda$sendQosCallbackError$11(IILandroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent;->lambda$sendQosSessionAvailable$8(IILandroid/net/QosSessionAttributes;Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent;->lambda$sendQosSessionAvailable$9(IILandroid/net/QosSessionAttributes;Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent;->lambda$sendQosSessionLost$10(IIILandroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent;->lambda$sendSocketKeepaliveEvent$7(IILandroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent;->lambda$setLingerDuration$12(JLandroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent;->lambda$setTeardownDelayMillis$2(ILandroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent;->lambda$setUnderlyingNetworks$1(Ljava/util/ArrayList;Landroid/net/INetworkAgentRegistry;)V,blocked
Landroid/net/NetworkAgent;->log(Ljava/lang/String;)V,lo-prio,max-target-o
Landroid/net/NetworkAgent;->mBandwidthUpdatePending:Ljava/util/concurrent/atomic/AtomicBoolean;,blocked
Landroid/net/NetworkAgent;->mBandwidthUpdateScheduled:Z,blocked
Landroid/net/NetworkAgent;->mHandler:Landroid/os/Handler;,blocked
Landroid/net/NetworkAgent;->mInitialConfiguration:Landroid/net/NetworkAgent$InitialConfiguration;,blocked
Landroid/net/NetworkAgent;->mLastBwRefreshTime:J,lo-prio,max-target-o
Landroid/net/NetworkAgent;->mNetwork:Landroid/net/Network;,blocked
Landroid/net/NetworkAgent;->mNetworkInfo:Landroid/net/NetworkInfo;,blocked
Landroid/net/NetworkAgent;->mPreConnectedQueue:Ljava/util/ArrayList;,lo-prio,max-target-o
Landroid/net/NetworkAgent;->mRegisterLock:Ljava/lang/Object;,blocked
Landroid/net/NetworkAgent;->mRegistry:Landroid/net/INetworkAgentRegistry;,blocked
Landroid/net/NetworkAgent;->markConnected()V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->networkStatus(ILjava/lang/String;)V,lo-prio,max-target-o
Landroid/net/NetworkAgent;->onAddKeepalivePacketFilter(ILandroid/net/KeepalivePacketData;)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->onAutomaticReconnectDisabled()V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->onBandwidthUpdateRequested()V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->onNetworkCreated()V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->onNetworkDestroyed()V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->onNetworkUnwanted()V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->onQosCallbackRegistered(ILandroid/net/QosFilter;)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->onQosCallbackUnregistered(I)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->onRemoveKeepalivePacketFilter(I)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->onSaveAcceptUnvalidated(Z)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->onSignalStrengthThresholdsUpdated([I)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->onSocketKeepaliveEvent(II)V,blocked
Landroid/net/NetworkAgent;->onStartSocketKeepalive(ILjava/time/Duration;Landroid/net/KeepalivePacketData;)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->onStopSocketKeepalive(I)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->onValidationStatus(ILandroid/net/Uri;)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->pollLceData()V,lo-prio,max-target-o
Landroid/net/NetworkAgent;->preventAutomaticReconnect()V,lo-prio,max-target-o
Landroid/net/NetworkAgent;->providerId:I,blocked
Landroid/net/NetworkAgent;->queueOrSendMessage(Landroid/net/NetworkAgent$RegistryAction;)V,blocked
Landroid/net/NetworkAgent;->queueOrSendNetworkInfo(Landroid/net/NetworkInfo;)V,blocked
Landroid/net/NetworkAgent;->register()Landroid/net/Network;,sdk,system-api,test-api
Landroid/net/NetworkAgent;->registerForTest(Landroid/net/Network;)Landroid/net/INetworkAgent;,blocked
Landroid/net/NetworkAgent;->removeKeepalivePacketFilter(Landroid/os/Message;)V,blocked
Landroid/net/NetworkAgent;->saveAcceptUnvalidated(Z)V,lo-prio,max-target-o
Landroid/net/NetworkAgent;->sendLinkProperties(Landroid/net/LinkProperties;)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->sendNetworkCapabilities(Landroid/net/NetworkCapabilities;)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->sendNetworkInfo(Landroid/net/NetworkInfo;)V,max-target-p
Landroid/net/NetworkAgent;->sendNetworkScore(I)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->sendNetworkScore(Landroid/net/NetworkScore;)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->sendQosCallbackError(II)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->sendQosSessionAvailable(IILandroid/net/QosSessionAttributes;)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->sendQosSessionLost(III)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->sendSocketKeepaliveEvent(II)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->setLegacyExtraInfo(Ljava/lang/String;)V,blocked
Landroid/net/NetworkAgent;->setLegacySubtype(ILjava/lang/String;)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->setLingerDuration(Ljava/time/Duration;)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->setSignalStrengthThresholds([I)V,lo-prio,max-target-o
Landroid/net/NetworkAgent;->setTeardownDelayMillis(I)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->setUnderlyingNetworks(Ljava/util/List;)V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->startSocketKeepalive(Landroid/os/Message;)V,blocked
Landroid/net/NetworkAgent;->stopSocketKeepalive(Landroid/os/Message;)V,blocked
Landroid/net/NetworkAgent;->unregister()V,sdk,system-api,test-api
Landroid/net/NetworkAgent;->unwanted()V,lo-prio,max-target-o
Landroid/net/NetworkAgent;->waitForIdle(J)Z,blocked
Landroid/net/NetworkAgentConfig$1;-><init>()V,blocked
Landroid/net/NetworkAgentConfig$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/NetworkAgentConfig;,blocked
Landroid/net/NetworkAgentConfig$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig$1;->newArray(I)[Landroid/net/NetworkAgentConfig;,blocked
Landroid/net/NetworkAgentConfig$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig$Builder;-><init>()V,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig$Builder;->build()Landroid/net/NetworkAgentConfig;,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig$Builder;->mConfig:Landroid/net/NetworkAgentConfig;,blocked
Landroid/net/NetworkAgentConfig$Builder;->setBypassableVpn(Z)Landroid/net/NetworkAgentConfig$Builder;,blocked
Landroid/net/NetworkAgentConfig$Builder;->setExplicitlySelected(Z)Landroid/net/NetworkAgentConfig$Builder;,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig$Builder;->setLegacyExtraInfo(Ljava/lang/String;)Landroid/net/NetworkAgentConfig$Builder;,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig$Builder;->setLegacySubType(I)Landroid/net/NetworkAgentConfig$Builder;,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig$Builder;->setLegacySubTypeName(Ljava/lang/String;)Landroid/net/NetworkAgentConfig$Builder;,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig$Builder;->setLegacyType(I)Landroid/net/NetworkAgentConfig$Builder;,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig$Builder;->setLegacyTypeName(Ljava/lang/String;)Landroid/net/NetworkAgentConfig$Builder;,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig$Builder;->setNat64DetectionEnabled(Z)Landroid/net/NetworkAgentConfig$Builder;,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig$Builder;->setPartialConnectivityAcceptable(Z)Landroid/net/NetworkAgentConfig$Builder;,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig$Builder;->setProvisioningNotificationEnabled(Z)Landroid/net/NetworkAgentConfig$Builder;,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig$Builder;->setSubscriberId(Ljava/lang/String;)Landroid/net/NetworkAgentConfig$Builder;,blocked
Landroid/net/NetworkAgentConfig$Builder;->setUnvalidatedConnectivityAcceptable(Z)Landroid/net/NetworkAgentConfig$Builder;,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig;-><clinit>()V,blocked
Landroid/net/NetworkAgentConfig;-><init>()V,blocked
Landroid/net/NetworkAgentConfig;-><init>(Landroid/net/NetworkAgentConfig;)V,blocked
Landroid/net/NetworkAgentConfig;->CREATOR:Landroid/os/Parcelable$Creator;,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig;->acceptPartialConnectivity:Z,blocked
Landroid/net/NetworkAgentConfig;->acceptUnvalidated:Z,blocked
Landroid/net/NetworkAgentConfig;->access$002(Landroid/net/NetworkAgentConfig;Ljava/lang/String;)Ljava/lang/String;,blocked
Landroid/net/NetworkAgentConfig;->allowBypass:Z,blocked
Landroid/net/NetworkAgentConfig;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig;->explicitlySelected:Z,blocked
Landroid/net/NetworkAgentConfig;->getLegacyExtraInfo()Ljava/lang/String;,blocked
Landroid/net/NetworkAgentConfig;->getLegacyType()I,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig;->getLegacyTypeName()Ljava/lang/String;,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig;->getSubscriberId()Ljava/lang/String;,blocked
Landroid/net/NetworkAgentConfig;->hasShownBroken:Z,blocked
Landroid/net/NetworkAgentConfig;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig;->isBypassableVpn()Z,blocked
Landroid/net/NetworkAgentConfig;->isExplicitlySelected()Z,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig;->isNat64DetectionEnabled()Z,blocked
Landroid/net/NetworkAgentConfig;->isPartialConnectivityAcceptable()Z,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig;->isProvisioningNotificationEnabled()Z,blocked
Landroid/net/NetworkAgentConfig;->isUnvalidatedConnectivityAcceptable()Z,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig;->legacySubType:I,blocked
Landroid/net/NetworkAgentConfig;->legacySubTypeName:Ljava/lang/String;,blocked
Landroid/net/NetworkAgentConfig;->legacyType:I,blocked
Landroid/net/NetworkAgentConfig;->legacyTypeName:Ljava/lang/String;,blocked
Landroid/net/NetworkAgentConfig;->mLegacyExtraInfo:Ljava/lang/String;,blocked
Landroid/net/NetworkAgentConfig;->provisioningNotificationDisabled:Z,blocked
Landroid/net/NetworkAgentConfig;->skip464xlat:Z,blocked
Landroid/net/NetworkAgentConfig;->subscriberId:Ljava/lang/String;,blocked
Landroid/net/NetworkAgentConfig;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/NetworkAgentConfig;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$$ExternalSyntheticLambda0;-><clinit>()V,blocked
Landroid/net/NetworkCapabilities$$ExternalSyntheticLambda0;-><init>()V,blocked
Landroid/net/NetworkCapabilities$$ExternalSyntheticLambda0;->INSTANCE:Landroid/net/NetworkCapabilities$$ExternalSyntheticLambda0;,blocked
Landroid/net/NetworkCapabilities$$ExternalSyntheticLambda0;->nameOf(I)Ljava/lang/String;,blocked
Landroid/net/NetworkCapabilities$$ExternalSyntheticLambda1;-><clinit>()V,blocked
Landroid/net/NetworkCapabilities$$ExternalSyntheticLambda1;-><init>()V,blocked
Landroid/net/NetworkCapabilities$$ExternalSyntheticLambda1;->INSTANCE:Landroid/net/NetworkCapabilities$$ExternalSyntheticLambda1;,blocked
Landroid/net/NetworkCapabilities$$ExternalSyntheticLambda1;->nameOf(I)Ljava/lang/String;,blocked
Landroid/net/NetworkCapabilities$1;-><init>()V,blocked
Landroid/net/NetworkCapabilities$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/NetworkCapabilities;,blocked
Landroid/net/NetworkCapabilities$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$1;->newArray(I)[Landroid/net/NetworkCapabilities;,blocked
Landroid/net/NetworkCapabilities$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$1;->readParcelableArraySet(Landroid/os/Parcel;Ljava/lang/ClassLoader;)Landroid/util/ArraySet;,blocked
Landroid/net/NetworkCapabilities$Builder;-><init>()V,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$Builder;-><init>(Landroid/net/NetworkCapabilities;)V,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$Builder;->addCapability(I)Landroid/net/NetworkCapabilities$Builder;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$Builder;->addTransportType(I)Landroid/net/NetworkCapabilities$Builder;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$Builder;->build()Landroid/net/NetworkCapabilities;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$Builder;->mCaps:Landroid/net/NetworkCapabilities;,blocked
Landroid/net/NetworkCapabilities$Builder;->removeCapability(I)Landroid/net/NetworkCapabilities$Builder;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$Builder;->removeTransportType(I)Landroid/net/NetworkCapabilities$Builder;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$Builder;->setAdministratorUids([I)Landroid/net/NetworkCapabilities$Builder;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$Builder;->setLinkDownstreamBandwidthKbps(I)Landroid/net/NetworkCapabilities$Builder;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$Builder;->setLinkUpstreamBandwidthKbps(I)Landroid/net/NetworkCapabilities$Builder;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$Builder;->setNetworkSpecifier(Landroid/net/NetworkSpecifier;)Landroid/net/NetworkCapabilities$Builder;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$Builder;->setOwnerUid(I)Landroid/net/NetworkCapabilities$Builder;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$Builder;->setRequestorPackageName(Ljava/lang/String;)Landroid/net/NetworkCapabilities$Builder;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$Builder;->setRequestorUid(I)Landroid/net/NetworkCapabilities$Builder;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$Builder;->setSignalStrength(I)Landroid/net/NetworkCapabilities$Builder;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$Builder;->setSsid(Ljava/lang/String;)Landroid/net/NetworkCapabilities$Builder;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$Builder;->setSubscriptionIds(Ljava/util/Set;)Landroid/net/NetworkCapabilities$Builder;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$Builder;->setTransportInfo(Landroid/net/TransportInfo;)Landroid/net/NetworkCapabilities$Builder;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$Builder;->setUids(Ljava/util/Set;)Landroid/net/NetworkCapabilities$Builder;,blocked
Landroid/net/NetworkCapabilities$Builder;->withoutDefaultCapabilities()Landroid/net/NetworkCapabilities$Builder;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities$NameOf;->nameOf(I)Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;-><clinit>()V,blocked
Landroid/net/NetworkCapabilities;-><init>()V,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;-><init>(Landroid/net/NetworkCapabilities;)V,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;-><init>(Landroid/net/NetworkCapabilities;J)V,blocked
Landroid/net/NetworkCapabilities;->CONNECTIVITY_MANAGED_CAPABILITIES:J,blocked
Landroid/net/NetworkCapabilities;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->DEFAULT_CAPABILITIES:J,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->LINK_BANDWIDTH_UNSPECIFIED:I,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->MAX_NET_CAPABILITY:I,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->MAX_TRANSPORT:I,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->MIN_NET_CAPABILITY:I,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->MIN_TRANSPORT:I,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->MUTABLE_CAPABILITIES:J,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_BIP:I,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_CAPTIVE_PORTAL:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_CBS:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_DUN:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_EIMS:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_ENTERPRISE:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_FOREGROUND:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_FOTA:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_HEAD_UNIT:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_IA:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_IMS:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_INTERNET:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_MCX:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_MMS:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_NOT_CONGESTED:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_NOT_METERED:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_NOT_RESTRICTED:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_NOT_ROAMING:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_NOT_SUSPENDED:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_NOT_VCN_MANAGED:I,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_NOT_VPN:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_OEM_PAID:I,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_OEM_PRIVATE:I,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_PARTIAL_CONNECTIVITY:I,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_RCS:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_SUPL:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_TEMPORARILY_NOT_METERED:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_TRUSTED:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_VALIDATED:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_VEHICLE_INTERNAL:I,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_VSIM:I,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_WIFI_P2P:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NET_CAPABILITY_XCAP:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->NON_REQUESTABLE_CAPABILITIES:J,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->REDACT_ALL:J,blocked
Landroid/net/NetworkCapabilities;->REDACT_FOR_ACCESS_FINE_LOCATION:J,blocked
Landroid/net/NetworkCapabilities;->REDACT_FOR_LOCAL_MAC_ADDRESS:J,blocked
Landroid/net/NetworkCapabilities;->REDACT_FOR_NETWORK_SETTINGS:J,blocked
Landroid/net/NetworkCapabilities;->REDACT_NONE:J,blocked
Landroid/net/NetworkCapabilities;->SIGNAL_STRENGTH_UNSPECIFIED:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->TAG:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->TEST_NETWORKS_ALLOWED_CAPABILITIES:J,blocked
Landroid/net/NetworkCapabilities;->TRANSPORT_BLUETOOTH:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->TRANSPORT_CELLULAR:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->TRANSPORT_ETHERNET:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->TRANSPORT_LOWPAN:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->TRANSPORT_NAMES:[Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->TRANSPORT_TEST:I,blocked
Landroid/net/NetworkCapabilities;->TRANSPORT_USB:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->TRANSPORT_VPN:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->TRANSPORT_WIFI:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->TRANSPORT_WIFI_AWARE:I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->UNRESTRICTED_TEST_NETWORKS_ALLOWED_TRANSPORTS:I,blocked
Landroid/net/NetworkCapabilities;->access$002(Landroid/net/NetworkCapabilities;J)J,blocked
Landroid/net/NetworkCapabilities;->access$1002(Landroid/net/NetworkCapabilities;Z)Z,blocked
Landroid/net/NetworkCapabilities;->access$102(Landroid/net/NetworkCapabilities;J)J,blocked
Landroid/net/NetworkCapabilities;->access$1102(Landroid/net/NetworkCapabilities;I)I,blocked
Landroid/net/NetworkCapabilities;->access$1202(Landroid/net/NetworkCapabilities;I)I,blocked
Landroid/net/NetworkCapabilities;->access$1302(Landroid/net/NetworkCapabilities;Ljava/lang/String;)Ljava/lang/String;,blocked
Landroid/net/NetworkCapabilities;->access$1400(Landroid/net/NetworkCapabilities;)Landroid/util/ArraySet;,blocked
Landroid/net/NetworkCapabilities;->access$1402(Landroid/net/NetworkCapabilities;Landroid/util/ArraySet;)Landroid/util/ArraySet;,blocked
Landroid/net/NetworkCapabilities;->access$1500(Landroid/net/NetworkCapabilities;)Landroid/net/NetworkCapabilities;,blocked
Landroid/net/NetworkCapabilities;->access$1600(I)V,blocked
Landroid/net/NetworkCapabilities;->access$202(Landroid/net/NetworkCapabilities;J)J,blocked
Landroid/net/NetworkCapabilities;->access$302(Landroid/net/NetworkCapabilities;I)I,blocked
Landroid/net/NetworkCapabilities;->access$402(Landroid/net/NetworkCapabilities;I)I,blocked
Landroid/net/NetworkCapabilities;->access$502(Landroid/net/NetworkCapabilities;Landroid/net/NetworkSpecifier;)Landroid/net/NetworkSpecifier;,blocked
Landroid/net/NetworkCapabilities;->access$602(Landroid/net/NetworkCapabilities;Landroid/net/TransportInfo;)Landroid/net/TransportInfo;,blocked
Landroid/net/NetworkCapabilities;->access$702(Landroid/net/NetworkCapabilities;I)I,blocked
Landroid/net/NetworkCapabilities;->access$802(Landroid/net/NetworkCapabilities;Landroid/util/ArraySet;)Landroid/util/ArraySet;,blocked
Landroid/net/NetworkCapabilities;->access$902(Landroid/net/NetworkCapabilities;Ljava/lang/String;)Ljava/lang/String;,blocked
Landroid/net/NetworkCapabilities;->addCapability(I)Landroid/net/NetworkCapabilities;,blocked
Landroid/net/NetworkCapabilities;->addForbiddenCapability(I)V,blocked
Landroid/net/NetworkCapabilities;->addTransportType(I)Landroid/net/NetworkCapabilities;,blocked
Landroid/net/NetworkCapabilities;->appendStringRepresentationOfBitMaskToStringBuilder(Ljava/lang/StringBuilder;JLandroid/net/NetworkCapabilities$NameOf;Ljava/lang/String;)V,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->appliesToUid(I)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->appliesToUidRange(Landroid/net/UidRange;)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->capabilityNameOf(I)Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->capabilityNamesOf([I)Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->checkValidCapability(I)V,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->checkValidTransportType(I)V,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->clearAll()V,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->combineAdministratorUids(Landroid/net/NetworkCapabilities;)V,blocked
Landroid/net/NetworkCapabilities;->combineCapabilities(Landroid/net/NetworkCapabilities;)V,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->combineLinkBandwidths(Landroid/net/NetworkCapabilities;)V,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->combineNetCapabilities(Landroid/net/NetworkCapabilities;)V,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->combineRequestor(Landroid/net/NetworkCapabilities;)V,blocked
Landroid/net/NetworkCapabilities;->combineSSIDs(Landroid/net/NetworkCapabilities;)V,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->combineSignalStrength(Landroid/net/NetworkCapabilities;)V,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->combineSpecifiers(Landroid/net/NetworkCapabilities;)V,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->combineSubscriptionIds(Landroid/net/NetworkCapabilities;)V,blocked
Landroid/net/NetworkCapabilities;->combineTransportInfos(Landroid/net/NetworkCapabilities;)V,blocked
Landroid/net/NetworkCapabilities;->combineTransportTypes(Landroid/net/NetworkCapabilities;)V,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->combineUids(Landroid/net/NetworkCapabilities;)V,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->describeFirstNonRequestableCapability()Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->describeImmutableDifferences(Landroid/net/NetworkCapabilities;)Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->equalRequestableCapabilities(Landroid/net/NetworkCapabilities;)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->equalsAdministratorUids(Landroid/net/NetworkCapabilities;)Z,blocked
Landroid/net/NetworkCapabilities;->equalsLinkBandwidths(Landroid/net/NetworkCapabilities;)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->equalsNetCapabilities(Landroid/net/NetworkCapabilities;)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->equalsNetCapabilitiesRequestable(Landroid/net/NetworkCapabilities;)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->equalsOwnerUid(Landroid/net/NetworkCapabilities;)Z,blocked
Landroid/net/NetworkCapabilities;->equalsPrivateDnsBroken(Landroid/net/NetworkCapabilities;)Z,blocked
Landroid/net/NetworkCapabilities;->equalsRequestor(Landroid/net/NetworkCapabilities;)Z,blocked
Landroid/net/NetworkCapabilities;->equalsSSID(Landroid/net/NetworkCapabilities;)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->equalsSignalStrength(Landroid/net/NetworkCapabilities;)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->equalsSpecifier(Landroid/net/NetworkCapabilities;)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->equalsSubscriptionIds(Landroid/net/NetworkCapabilities;)Z,blocked
Landroid/net/NetworkCapabilities;->equalsTransportInfo(Landroid/net/NetworkCapabilities;)Z,blocked
Landroid/net/NetworkCapabilities;->equalsTransportTypes(Landroid/net/NetworkCapabilities;)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->equalsUids(Landroid/net/NetworkCapabilities;)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->getAdministratorUids()[I,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->getApplicableRedactions()J,blocked
Landroid/net/NetworkCapabilities;->getCapabilities()[I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->getCapabilityCarrierName(I)Ljava/lang/String;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->getForbiddenCapabilities()[I,blocked
Landroid/net/NetworkCapabilities;->getLinkDownstreamBandwidthKbps()I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->getLinkUpstreamBandwidthKbps()I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->getNetworkSpecifier()Landroid/net/NetworkSpecifier;,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->getOwnerUid()I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->getRequestorPackageName()Ljava/lang/String;,blocked
Landroid/net/NetworkCapabilities;->getRequestorUid()I,blocked
Landroid/net/NetworkCapabilities;->getSignalStrength()I,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->getSsid()Ljava/lang/String;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->getSubscriptionIds()Ljava/util/Set;,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->getTransportInfo()Landroid/net/TransportInfo;,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->getTransportTypes()[I,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->getUidRanges()Ljava/util/Set;,blocked
Landroid/net/NetworkCapabilities;->getUids()Ljava/util/Set;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->hasCapability(I)Z,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->hasConnectivityManagedCapability()Z,blocked
Landroid/net/NetworkCapabilities;->hasForbiddenCapability(I)Z,blocked
Landroid/net/NetworkCapabilities;->hasSameUids(Landroid/net/NetworkCapabilities;Landroid/net/NetworkCapabilities;)Z,blocked
Landroid/net/NetworkCapabilities;->hasSignalStrength()Z,max-target-r
Landroid/net/NetworkCapabilities;->hasTransport(I)Z,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->isMetered()Z,blocked
Landroid/net/NetworkCapabilities;->isPrivateDnsBroken()Z,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->isValidCapability(I)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->isValidTransport(I)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->mAdministratorUids:[I,blocked
Landroid/net/NetworkCapabilities;->mForbiddenNetworkCapabilities:J,blocked
Landroid/net/NetworkCapabilities;->mLinkDownBandwidthKbps:I,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->mLinkUpBandwidthKbps:I,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->mNetworkCapabilities:J,max-target-r
Landroid/net/NetworkCapabilities;->mNetworkSpecifier:Landroid/net/NetworkSpecifier;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->mOwnerUid:I,blocked
Landroid/net/NetworkCapabilities;->mPrivateDnsBroken:Z,blocked
Landroid/net/NetworkCapabilities;->mRequestorPackageName:Ljava/lang/String;,blocked
Landroid/net/NetworkCapabilities;->mRequestorUid:I,blocked
Landroid/net/NetworkCapabilities;->mSSID:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->mSignalStrength:I,max-target-p
Landroid/net/NetworkCapabilities;->mSubIds:Landroid/util/ArraySet;,blocked
Landroid/net/NetworkCapabilities;->mTransportInfo:Landroid/net/TransportInfo;,blocked
Landroid/net/NetworkCapabilities;->mTransportTypes:J,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->mUids:Landroid/util/ArraySet;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->maxBandwidth(II)I,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->maybeMarkCapabilitiesRestricted()V,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->minBandwidth(II)I,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->removeCapability(I)Landroid/net/NetworkCapabilities;,blocked
Landroid/net/NetworkCapabilities;->removeDefaultCapabilites()Landroid/net/NetworkCapabilities;,blocked
Landroid/net/NetworkCapabilities;->removeForbiddenCapability(I)Landroid/net/NetworkCapabilities;,blocked
Landroid/net/NetworkCapabilities;->removeTransportType(I)Landroid/net/NetworkCapabilities;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->restrictCapabilitesForTestNetwork(I)V,blocked
Landroid/net/NetworkCapabilities;->satisfiedByImmutableNetworkCapabilities(Landroid/net/NetworkCapabilities;)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->satisfiedByLinkBandwidths(Landroid/net/NetworkCapabilities;)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->satisfiedByNetCapabilities(Landroid/net/NetworkCapabilities;Z)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->satisfiedByNetworkCapabilities(Landroid/net/NetworkCapabilities;)Z,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->satisfiedByNetworkCapabilities(Landroid/net/NetworkCapabilities;Z)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->satisfiedByRequestor(Landroid/net/NetworkCapabilities;)Z,blocked
Landroid/net/NetworkCapabilities;->satisfiedBySSID(Landroid/net/NetworkCapabilities;)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->satisfiedBySignalStrength(Landroid/net/NetworkCapabilities;)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->satisfiedBySpecifier(Landroid/net/NetworkCapabilities;)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->satisfiedBySubscriptionIds(Landroid/net/NetworkCapabilities;)Z,blocked
Landroid/net/NetworkCapabilities;->satisfiedByTransportTypes(Landroid/net/NetworkCapabilities;)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->satisfiedByUids(Landroid/net/NetworkCapabilities;)Z,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->set(Landroid/net/NetworkCapabilities;)V,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->setAdministratorUids([I)Landroid/net/NetworkCapabilities;,blocked
Landroid/net/NetworkCapabilities;->setCapabilities([I)V,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->setCapabilities([I[I)V,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->setCapability(IZ)Landroid/net/NetworkCapabilities;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->setLinkDownstreamBandwidthKbps(I)Landroid/net/NetworkCapabilities;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->setLinkUpstreamBandwidthKbps(I)Landroid/net/NetworkCapabilities;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->setNetworkSpecifier(Landroid/net/NetworkSpecifier;)Landroid/net/NetworkCapabilities;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->setOwnerUid(I)Landroid/net/NetworkCapabilities;,blocked
Landroid/net/NetworkCapabilities;->setPrivateDnsBroken(Z)V,blocked
Landroid/net/NetworkCapabilities;->setRequestorPackageName(Ljava/lang/String;)Landroid/net/NetworkCapabilities;,blocked
Landroid/net/NetworkCapabilities;->setRequestorUid(I)Landroid/net/NetworkCapabilities;,blocked
Landroid/net/NetworkCapabilities;->setRequestorUidAndPackageName(ILjava/lang/String;)Landroid/net/NetworkCapabilities;,blocked
Landroid/net/NetworkCapabilities;->setSSID(Ljava/lang/String;)Landroid/net/NetworkCapabilities;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->setSignalStrength(I)Landroid/net/NetworkCapabilities;,blocked
Landroid/net/NetworkCapabilities;->setSingleUid(I)Landroid/net/NetworkCapabilities;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->setSubscriptionIds(Ljava/util/Set;)Landroid/net/NetworkCapabilities;,blocked
Landroid/net/NetworkCapabilities;->setTransportInfo(Landroid/net/TransportInfo;)Landroid/net/NetworkCapabilities;,blocked
Landroid/net/NetworkCapabilities;->setTransportType(IZ)Landroid/net/NetworkCapabilities;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->setTransportTypes([I)V,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->setUids(Ljava/util/Set;)Landroid/net/NetworkCapabilities;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/NetworkCapabilities;->transportNameOf(I)Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/NetworkCapabilities;->transportNamesOf([I)Ljava/lang/String;,max-target-r
Landroid/net/NetworkCapabilities;->writeParcelableArraySet(Landroid/os/Parcel;Landroid/util/ArraySet;I)V,blocked
Landroid/net/NetworkCapabilities;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/NetworkConfig;-><init>(Ljava/lang/String;)V,lo-prio,max-target-o
Landroid/net/NetworkConfig;->dependencyMet:Z,lo-prio,max-target-o
Landroid/net/NetworkConfig;->isDefault()Z,lo-prio,max-target-o
Landroid/net/NetworkConfig;->name:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/NetworkConfig;->priority:I,lo-prio,max-target-o
Landroid/net/NetworkConfig;->radio:I,lo-prio,max-target-o
Landroid/net/NetworkConfig;->restoreTime:I,lo-prio,max-target-o
Landroid/net/NetworkConfig;->type:I,lo-prio,max-target-o
Landroid/net/NetworkInfo$1;-><init>()V,blocked
Landroid/net/NetworkInfo$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/NetworkInfo;,blocked
Landroid/net/NetworkInfo$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$1;->newArray(I)[Landroid/net/NetworkInfo;,blocked
Landroid/net/NetworkInfo$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$DetailedState;->$VALUES:[Landroid/net/NetworkInfo$DetailedState;,blocked
Landroid/net/NetworkInfo$DetailedState;-><clinit>()V,blocked
Landroid/net/NetworkInfo$DetailedState;-><init>(Ljava/lang/String;I)V,blocked
Landroid/net/NetworkInfo$DetailedState;->AUTHENTICATING:Landroid/net/NetworkInfo$DetailedState;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$DetailedState;->BLOCKED:Landroid/net/NetworkInfo$DetailedState;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$DetailedState;->CAPTIVE_PORTAL_CHECK:Landroid/net/NetworkInfo$DetailedState;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$DetailedState;->CONNECTED:Landroid/net/NetworkInfo$DetailedState;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$DetailedState;->CONNECTING:Landroid/net/NetworkInfo$DetailedState;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$DetailedState;->DISCONNECTED:Landroid/net/NetworkInfo$DetailedState;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$DetailedState;->DISCONNECTING:Landroid/net/NetworkInfo$DetailedState;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$DetailedState;->FAILED:Landroid/net/NetworkInfo$DetailedState;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$DetailedState;->IDLE:Landroid/net/NetworkInfo$DetailedState;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$DetailedState;->OBTAINING_IPADDR:Landroid/net/NetworkInfo$DetailedState;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$DetailedState;->SCANNING:Landroid/net/NetworkInfo$DetailedState;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$DetailedState;->SUSPENDED:Landroid/net/NetworkInfo$DetailedState;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$DetailedState;->VERIFYING_POOR_LINK:Landroid/net/NetworkInfo$DetailedState;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$DetailedState;->valueOf(Ljava/lang/String;)Landroid/net/NetworkInfo$DetailedState;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$DetailedState;->values()[Landroid/net/NetworkInfo$DetailedState;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$State;->$VALUES:[Landroid/net/NetworkInfo$State;,blocked
Landroid/net/NetworkInfo$State;-><clinit>()V,blocked
Landroid/net/NetworkInfo$State;-><init>(Ljava/lang/String;I)V,blocked
Landroid/net/NetworkInfo$State;->CONNECTED:Landroid/net/NetworkInfo$State;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$State;->CONNECTING:Landroid/net/NetworkInfo$State;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$State;->DISCONNECTED:Landroid/net/NetworkInfo$State;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$State;->DISCONNECTING:Landroid/net/NetworkInfo$State;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$State;->SUSPENDED:Landroid/net/NetworkInfo$State;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$State;->UNKNOWN:Landroid/net/NetworkInfo$State;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$State;->valueOf(Ljava/lang/String;)Landroid/net/NetworkInfo$State;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo$State;->values()[Landroid/net/NetworkInfo$State;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo;-><clinit>()V,blocked
Landroid/net/NetworkInfo;-><init>(IILjava/lang/String;Ljava/lang/String;)V,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo;-><init>(Landroid/net/NetworkInfo;)V,unsupported
Landroid/net/NetworkInfo;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo;->access$002(Landroid/net/NetworkInfo;Landroid/net/NetworkInfo$State;)Landroid/net/NetworkInfo$State;,blocked
Landroid/net/NetworkInfo;->access$102(Landroid/net/NetworkInfo;Landroid/net/NetworkInfo$DetailedState;)Landroid/net/NetworkInfo$DetailedState;,blocked
Landroid/net/NetworkInfo;->access$202(Landroid/net/NetworkInfo;Z)Z,blocked
Landroid/net/NetworkInfo;->access$302(Landroid/net/NetworkInfo;Z)Z,blocked
Landroid/net/NetworkInfo;->access$402(Landroid/net/NetworkInfo;Z)Z,blocked
Landroid/net/NetworkInfo;->access$502(Landroid/net/NetworkInfo;Ljava/lang/String;)Ljava/lang/String;,blocked
Landroid/net/NetworkInfo;->access$602(Landroid/net/NetworkInfo;Ljava/lang/String;)Ljava/lang/String;,blocked
Landroid/net/NetworkInfo;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo;->getDetailedState()Landroid/net/NetworkInfo$DetailedState;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo;->getExtraInfo()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo;->getReason()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo;->getState()Landroid/net/NetworkInfo$State;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo;->getSubtype()I,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo;->getSubtypeName()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo;->getType()I,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo;->getTypeName()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo;->isAvailable()Z,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo;->isConnected()Z,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo;->isConnectedOrConnecting()Z,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo;->isFailover()Z,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo;->isRoaming()Z,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo;->mDetailedState:Landroid/net/NetworkInfo$DetailedState;,lo-prio,max-target-o
Landroid/net/NetworkInfo;->mExtraInfo:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/NetworkInfo;->mIsAvailable:Z,lo-prio,max-target-o
Landroid/net/NetworkInfo;->mIsFailover:Z,lo-prio,max-target-o
Landroid/net/NetworkInfo;->mIsRoaming:Z,lo-prio,max-target-o
Landroid/net/NetworkInfo;->mNetworkType:I,lo-prio,max-target-o
Landroid/net/NetworkInfo;->mReason:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/NetworkInfo;->mState:Landroid/net/NetworkInfo$State;,lo-prio,max-target-o
Landroid/net/NetworkInfo;->mSubtype:I,lo-prio,max-target-o
Landroid/net/NetworkInfo;->mSubtypeName:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/NetworkInfo;->mTypeName:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/NetworkInfo;->setDetailedState(Landroid/net/NetworkInfo$DetailedState;Ljava/lang/String;Ljava/lang/String;)V,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo;->setExtraInfo(Ljava/lang/String;)V,lo-prio,max-target-o
Landroid/net/NetworkInfo;->setFailover(Z)V,unsupported
Landroid/net/NetworkInfo;->setIsAvailable(Z)V,unsupported
Landroid/net/NetworkInfo;->setRoaming(Z)V,unsupported
Landroid/net/NetworkInfo;->setSubtype(ILjava/lang/String;)V,unsupported
Landroid/net/NetworkInfo;->setType(I)V,lo-prio,max-target-o
Landroid/net/NetworkInfo;->stateMap:Ljava/util/EnumMap;,lo-prio,max-target-o
Landroid/net/NetworkInfo;->toShortString()Ljava/lang/String;,blocked
Landroid/net/NetworkInfo;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/NetworkInfo;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/NetworkProvider$1;-><init>(Landroid/net/NetworkProvider;Landroid/os/Looper;)V,blocked
Landroid/net/NetworkProvider$1;->handleMessage(Landroid/os/Message;)V,public-api,sdk,system-api,test-api
Landroid/net/NetworkProvider$1;->this$0:Landroid/net/NetworkProvider;,blocked
Landroid/net/NetworkProvider$NetworkOfferCallback;->onNetworkNeeded(Landroid/net/NetworkRequest;)V,sdk,system-api,test-api
Landroid/net/NetworkProvider$NetworkOfferCallback;->onNetworkUnneeded(Landroid/net/NetworkRequest;)V,sdk,system-api,test-api
Landroid/net/NetworkProvider$NetworkOfferCallbackProxy$$ExternalSyntheticLambda0;-><init>(Landroid/net/NetworkProvider$NetworkOfferCallbackProxy;Landroid/net/NetworkRequest;)V,blocked
Landroid/net/NetworkProvider$NetworkOfferCallbackProxy$$ExternalSyntheticLambda0;->f$0:Landroid/net/NetworkProvider$NetworkOfferCallbackProxy;,blocked
Landroid/net/NetworkProvider$NetworkOfferCallbackProxy$$ExternalSyntheticLambda0;->f$1:Landroid/net/NetworkRequest;,blocked
Landroid/net/NetworkProvider$NetworkOfferCallbackProxy$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/NetworkProvider$NetworkOfferCallbackProxy$$ExternalSyntheticLambda1;-><init>(Landroid/net/NetworkProvider$NetworkOfferCallbackProxy;Landroid/net/NetworkRequest;)V,blocked
Landroid/net/NetworkProvider$NetworkOfferCallbackProxy$$ExternalSyntheticLambda1;->f$0:Landroid/net/NetworkProvider$NetworkOfferCallbackProxy;,blocked
Landroid/net/NetworkProvider$NetworkOfferCallbackProxy$$ExternalSyntheticLambda1;->f$1:Landroid/net/NetworkRequest;,blocked
Landroid/net/NetworkProvider$NetworkOfferCallbackProxy$$ExternalSyntheticLambda1;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/NetworkProvider$NetworkOfferCallbackProxy;-><init>(Landroid/net/NetworkProvider;Landroid/net/NetworkProvider$NetworkOfferCallback;Ljava/util/concurrent/Executor;)V,blocked
Landroid/net/NetworkProvider$NetworkOfferCallbackProxy;->callback:Landroid/net/NetworkProvider$NetworkOfferCallback;,blocked
Landroid/net/NetworkProvider$NetworkOfferCallbackProxy;->lambda$onNetworkNeeded$0$NetworkProvider$NetworkOfferCallbackProxy(Landroid/net/NetworkRequest;)V,blocked
Landroid/net/NetworkProvider$NetworkOfferCallbackProxy;->lambda$onNetworkUnneeded$1$NetworkProvider$NetworkOfferCallbackProxy(Landroid/net/NetworkRequest;)V,blocked
Landroid/net/NetworkProvider$NetworkOfferCallbackProxy;->mExecutor:Ljava/util/concurrent/Executor;,blocked
Landroid/net/NetworkProvider$NetworkOfferCallbackProxy;->onNetworkNeeded(Landroid/net/NetworkRequest;)V,blocked
Landroid/net/NetworkProvider$NetworkOfferCallbackProxy;->onNetworkUnneeded(Landroid/net/NetworkRequest;)V,blocked
Landroid/net/NetworkProvider$NetworkOfferCallbackProxy;->this$0:Landroid/net/NetworkProvider;,blocked
Landroid/net/NetworkProvider;-><init>(Landroid/content/Context;Landroid/os/Looper;Ljava/lang/String;)V,sdk,system-api,test-api
Landroid/net/NetworkProvider;->CMD_CANCEL_REQUEST:I,blocked
Landroid/net/NetworkProvider;->CMD_REQUEST_NETWORK:I,blocked
Landroid/net/NetworkProvider;->FIRST_PROVIDER_ID:I,blocked
Landroid/net/NetworkProvider;->ID_NONE:I,sdk,system-api,test-api
Landroid/net/NetworkProvider;->access$000(Landroid/net/NetworkProvider;)Ljava/lang/String;,blocked
Landroid/net/NetworkProvider;->declareNetworkRequestUnfulfillable(Landroid/net/NetworkRequest;)V,sdk,system-api,test-api
Landroid/net/NetworkProvider;->findProxyForCallback(Landroid/net/NetworkProvider$NetworkOfferCallback;)Landroid/net/NetworkProvider$NetworkOfferCallbackProxy;,blocked
Landroid/net/NetworkProvider;->getMessenger()Landroid/os/Messenger;,blocked
Landroid/net/NetworkProvider;->getName()Ljava/lang/String;,blocked
Landroid/net/NetworkProvider;->getProviderId()I,sdk,system-api,test-api
Landroid/net/NetworkProvider;->mContext:Landroid/content/Context;,blocked
Landroid/net/NetworkProvider;->mMessenger:Landroid/os/Messenger;,blocked
Landroid/net/NetworkProvider;->mName:Ljava/lang/String;,blocked
Landroid/net/NetworkProvider;->mProviderId:I,blocked
Landroid/net/NetworkProvider;->mProxies:Ljava/util/ArrayList;,blocked
Landroid/net/NetworkProvider;->onNetworkRequestWithdrawn(Landroid/net/NetworkRequest;)V,sdk,system-api,test-api
Landroid/net/NetworkProvider;->onNetworkRequested(Landroid/net/NetworkRequest;II)V,sdk,system-api,test-api
Landroid/net/NetworkProvider;->registerNetworkOffer(Landroid/net/NetworkScore;Landroid/net/NetworkCapabilities;Ljava/util/concurrent/Executor;Landroid/net/NetworkProvider$NetworkOfferCallback;)V,sdk,system-api,test-api
Landroid/net/NetworkProvider;->setProviderId(I)V,blocked
Landroid/net/NetworkProvider;->unregisterNetworkOffer(Landroid/net/NetworkProvider$NetworkOfferCallback;)V,sdk,system-api,test-api
Landroid/net/NetworkReleasedException;-><init>()V,blocked
Landroid/net/NetworkRequest$1;-><init>()V,blocked
Landroid/net/NetworkRequest$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/NetworkRequest;,blocked
Landroid/net/NetworkRequest$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest$1;->newArray(I)[Landroid/net/NetworkRequest;,blocked
Landroid/net/NetworkRequest$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest$Builder;-><clinit>()V,blocked
Landroid/net/NetworkRequest$Builder;-><init>()V,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest$Builder;-><init>(Landroid/net/NetworkRequest;)V,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest$Builder;->VCN_SUPPORTED_CAPABILITIES:Ljava/util/List;,blocked
Landroid/net/NetworkRequest$Builder;->addCapability(I)Landroid/net/NetworkRequest$Builder;,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest$Builder;->addForbiddenCapability(I)Landroid/net/NetworkRequest$Builder;,blocked
Landroid/net/NetworkRequest$Builder;->addTransportType(I)Landroid/net/NetworkRequest$Builder;,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest$Builder;->build()Landroid/net/NetworkRequest;,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest$Builder;->clearCapabilities()Landroid/net/NetworkRequest$Builder;,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest$Builder;->deduceNotVcnManagedCapability(Landroid/net/NetworkCapabilities;)V,blocked
Landroid/net/NetworkRequest$Builder;->mNetworkCapabilities:Landroid/net/NetworkCapabilities;,lo-prio,max-target-o
Landroid/net/NetworkRequest$Builder;->mShouldDeduceNotVcnManaged:Z,blocked
Landroid/net/NetworkRequest$Builder;->removeCapability(I)Landroid/net/NetworkRequest$Builder;,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest$Builder;->removeForbiddenCapability(I)Landroid/net/NetworkRequest$Builder;,blocked
Landroid/net/NetworkRequest$Builder;->removeTransportType(I)Landroid/net/NetworkRequest$Builder;,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest$Builder;->setCapabilities(Landroid/net/NetworkCapabilities;)Landroid/net/NetworkRequest$Builder;,lo-prio,max-target-o
Landroid/net/NetworkRequest$Builder;->setIncludeOtherUidNetworks(Z)Landroid/net/NetworkRequest$Builder;,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest$Builder;->setLinkDownstreamBandwidthKbps(I)Landroid/net/NetworkRequest$Builder;,lo-prio,max-target-o
Landroid/net/NetworkRequest$Builder;->setLinkUpstreamBandwidthKbps(I)Landroid/net/NetworkRequest$Builder;,lo-prio,max-target-o
Landroid/net/NetworkRequest$Builder;->setNetworkSpecifier(Landroid/net/NetworkSpecifier;)Landroid/net/NetworkRequest$Builder;,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest$Builder;->setNetworkSpecifier(Ljava/lang/String;)Landroid/net/NetworkRequest$Builder;,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest$Builder;->setSignalStrength(I)Landroid/net/NetworkRequest$Builder;,sdk,system-api,test-api
Landroid/net/NetworkRequest$Builder;->setSubscriptionIds(Ljava/util/Set;)Landroid/net/NetworkRequest$Builder;,sdk,system-api,test-api
Landroid/net/NetworkRequest$Builder;->setUids(Ljava/util/Set;)Landroid/net/NetworkRequest$Builder;,lo-prio,max-target-o
Landroid/net/NetworkRequest$Type;->$VALUES:[Landroid/net/NetworkRequest$Type;,blocked
Landroid/net/NetworkRequest$Type;-><clinit>()V,blocked
Landroid/net/NetworkRequest$Type;-><init>(Ljava/lang/String;I)V,blocked
Landroid/net/NetworkRequest$Type;->BACKGROUND_REQUEST:Landroid/net/NetworkRequest$Type;,lo-prio,max-target-o
Landroid/net/NetworkRequest$Type;->LISTEN:Landroid/net/NetworkRequest$Type;,lo-prio,max-target-o
Landroid/net/NetworkRequest$Type;->LISTEN_FOR_BEST:Landroid/net/NetworkRequest$Type;,blocked
Landroid/net/NetworkRequest$Type;->NONE:Landroid/net/NetworkRequest$Type;,lo-prio,max-target-o
Landroid/net/NetworkRequest$Type;->REQUEST:Landroid/net/NetworkRequest$Type;,lo-prio,max-target-o
Landroid/net/NetworkRequest$Type;->TRACK_DEFAULT:Landroid/net/NetworkRequest$Type;,lo-prio,max-target-o
Landroid/net/NetworkRequest$Type;->TRACK_SYSTEM_DEFAULT:Landroid/net/NetworkRequest$Type;,blocked
Landroid/net/NetworkRequest$Type;->valueOf(Ljava/lang/String;)Landroid/net/NetworkRequest$Type;,lo-prio,max-target-o
Landroid/net/NetworkRequest$Type;->values()[Landroid/net/NetworkRequest$Type;,lo-prio,max-target-o
Landroid/net/NetworkRequest;-><clinit>()V,blocked
Landroid/net/NetworkRequest;-><init>(Landroid/net/NetworkCapabilities;IILandroid/net/NetworkRequest$Type;)V,lo-prio,max-target-o
Landroid/net/NetworkRequest;-><init>(Landroid/net/NetworkRequest;)V,lo-prio,max-target-o
Landroid/net/NetworkRequest;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest;->FIRST_REQUEST_ID:I,blocked
Landroid/net/NetworkRequest;->REQUEST_ID_NONE:I,blocked
Landroid/net/NetworkRequest;->canBeSatisfiedBy(Landroid/net/NetworkCapabilities;)Z,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest;->getCapabilities()[I,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest;->getForbiddenCapabilities()[I,blocked
Landroid/net/NetworkRequest;->getNetworkSpecifier()Landroid/net/NetworkSpecifier;,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest;->getRequestorPackageName()Ljava/lang/String;,sdk,system-api,test-api
Landroid/net/NetworkRequest;->getRequestorUid()I,sdk,system-api,test-api
Landroid/net/NetworkRequest;->getTransportTypes()[I,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest;->hasCapability(I)Z,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest;->hasForbiddenCapability(I)Z,blocked
Landroid/net/NetworkRequest;->hasTransport(I)Z,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest;->isBackgroundRequest()Z,lo-prio,max-target-o
Landroid/net/NetworkRequest;->isListen()Z,lo-prio,max-target-o
Landroid/net/NetworkRequest;->isListenForBest()Z,blocked
Landroid/net/NetworkRequest;->isRequest()Z,lo-prio,max-target-o
Landroid/net/NetworkRequest;->legacyType:I,max-target-p
Landroid/net/NetworkRequest;->networkCapabilities:Landroid/net/NetworkCapabilities;,max-target-r
Landroid/net/NetworkRequest;->requestId:I,max-target-r
Landroid/net/NetworkRequest;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/NetworkRequest;->type:Landroid/net/NetworkRequest$Type;,lo-prio,max-target-o
Landroid/net/NetworkRequest;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/NetworkScore$1;-><init>()V,blocked
Landroid/net/NetworkScore$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/NetworkScore;,blocked
Landroid/net/NetworkScore$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/NetworkScore$1;->newArray(I)[Landroid/net/NetworkScore;,blocked
Landroid/net/NetworkScore$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/NetworkScore$Builder;-><init>()V,sdk,system-api,test-api
Landroid/net/NetworkScore$Builder;->INVALID_LEGACY_INT:I,blocked
Landroid/net/NetworkScore$Builder;->POLICY_NONE:J,blocked
Landroid/net/NetworkScore$Builder;->build()Landroid/net/NetworkScore;,sdk,system-api,test-api
Landroid/net/NetworkScore$Builder;->mKeepConnectedReason:I,blocked
Landroid/net/NetworkScore$Builder;->mLegacyInt:I,blocked
Landroid/net/NetworkScore$Builder;->mPolicies:I,blocked
Landroid/net/NetworkScore$Builder;->setExiting(Z)Landroid/net/NetworkScore$Builder;,sdk,system-api,test-api
Landroid/net/NetworkScore$Builder;->setKeepConnectedReason(I)Landroid/net/NetworkScore$Builder;,sdk,system-api,test-api
Landroid/net/NetworkScore$Builder;->setLegacyInt(I)Landroid/net/NetworkScore$Builder;,sdk,system-api,test-api
Landroid/net/NetworkScore$Builder;->setShouldYieldToBadWifi(Z)Landroid/net/NetworkScore$Builder;,blocked
Landroid/net/NetworkScore$Builder;->setTransportPrimary(Z)Landroid/net/NetworkScore$Builder;,sdk,system-api,test-api
Landroid/net/NetworkScore;-><clinit>()V,blocked
Landroid/net/NetworkScore;-><init>(IJI)V,blocked
Landroid/net/NetworkScore;-><init>(Landroid/os/Parcel;)V,blocked
Landroid/net/NetworkScore;-><init>(Landroid/os/Parcel;Landroid/net/NetworkScore$1;)V,blocked
Landroid/net/NetworkScore;->CREATOR:Landroid/os/Parcelable$Creator;,sdk,system-api,test-api
Landroid/net/NetworkScore;->KEEP_CONNECTED_FOR_HANDOVER:I,sdk,system-api,test-api
Landroid/net/NetworkScore;->KEEP_CONNECTED_NONE:I,sdk,system-api,test-api
Landroid/net/NetworkScore;->MAX_AGENT_MANAGED_POLICY:I,blocked
Landroid/net/NetworkScore;->MIN_AGENT_MANAGED_POLICY:I,blocked
Landroid/net/NetworkScore;->POLICY_EXITING:I,blocked
Landroid/net/NetworkScore;->POLICY_TRANSPORT_PRIMARY:I,blocked
Landroid/net/NetworkScore;->POLICY_YIELD_TO_BAD_WIFI:I,blocked
Landroid/net/NetworkScore;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/NetworkScore;->getKeepConnectedReason()I,sdk,system-api,test-api
Landroid/net/NetworkScore;->getLegacyInt()I,sdk,system-api,test-api
Landroid/net/NetworkScore;->getPolicies()J,blocked
Landroid/net/NetworkScore;->hasPolicy(I)Z,blocked
Landroid/net/NetworkScore;->isExiting()Z,sdk,system-api,test-api
Landroid/net/NetworkScore;->isTransportPrimary()Z,sdk,system-api,test-api
Landroid/net/NetworkScore;->mKeepConnectedReason:I,blocked
Landroid/net/NetworkScore;->mLegacyInt:I,blocked
Landroid/net/NetworkScore;->mPolicies:J,blocked
Landroid/net/NetworkScore;->shouldYieldToBadWifi()Z,blocked
Landroid/net/NetworkScore;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/NetworkScore;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/NetworkState$1;-><init>()V,blocked
Landroid/net/NetworkState$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/NetworkState;,blocked
Landroid/net/NetworkState$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/NetworkState$1;->newArray(I)[Landroid/net/NetworkState;,blocked
Landroid/net/NetworkState$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/NetworkState;-><clinit>()V,blocked
Landroid/net/NetworkState;-><init>()V,blocked
Landroid/net/NetworkState;-><init>(ILandroid/net/LinkProperties;Landroid/net/NetworkCapabilities;Landroid/net/Network;Ljava/lang/String;)V,blocked
Landroid/net/NetworkState;-><init>(ILandroid/net/NetworkInfo;Landroid/net/LinkProperties;Landroid/net/NetworkCapabilities;Landroid/net/Network;Ljava/lang/String;)V,blocked
Landroid/net/NetworkState;-><init>(Landroid/net/NetworkInfo;Landroid/net/LinkProperties;Landroid/net/NetworkCapabilities;Landroid/net/Network;Ljava/lang/String;)V,blocked
Landroid/net/NetworkState;-><init>(Landroid/os/Parcel;)V,unsupported
Landroid/net/NetworkState;->CREATOR:Landroid/os/Parcelable$Creator;,unsupported
Landroid/net/NetworkState;->EMPTY:Landroid/net/NetworkState;,lo-prio,max-target-o
Landroid/net/NetworkState;->VALIDATE_ROAMING_STATE:Z,blocked
Landroid/net/NetworkState;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/NetworkState;->legacyNetworkType:I,blocked
Landroid/net/NetworkState;->linkProperties:Landroid/net/LinkProperties;,lo-prio,max-target-o
Landroid/net/NetworkState;->network:Landroid/net/Network;,max-target-p
Landroid/net/NetworkState;->networkCapabilities:Landroid/net/NetworkCapabilities;,lo-prio,max-target-o
Landroid/net/NetworkState;->networkInfo:Landroid/net/NetworkInfo;,lo-prio,max-target-o
Landroid/net/NetworkState;->subscriberId:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/NetworkState;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/NetworkUtils;-><clinit>()V,blocked
Landroid/net/NetworkUtils;-><init>()V,lo-prio,max-target-o
Landroid/net/NetworkUtils;->TAG:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/NetworkUtils;->attachDropAllBPFFilter(Ljava/io/FileDescriptor;)V,blocked
Landroid/net/NetworkUtils;->bindProcessToNetwork(I)Z,lo-prio,max-target-o
Landroid/net/NetworkUtils;->bindProcessToNetworkForHostResolution(I)Z,lo-prio,max-target-o
Landroid/net/NetworkUtils;->bindProcessToNetworkHandle(J)Z,blocked
Landroid/net/NetworkUtils;->bindSocketToNetwork(Ljava/io/FileDescriptor;I)I,blocked
Landroid/net/NetworkUtils;->bindSocketToNetworkHandle(Ljava/io/FileDescriptor;J)I,blocked
Landroid/net/NetworkUtils;->deduplicatePrefixSet(Ljava/util/TreeSet;)Ljava/util/TreeSet;,lo-prio,max-target-o
Landroid/net/NetworkUtils;->detachBPFFilter(Ljava/io/FileDescriptor;)V,blocked
Landroid/net/NetworkUtils;->getBoundNetworkForProcess()I,lo-prio,max-target-o
Landroid/net/NetworkUtils;->getBoundNetworkHandleForProcess()J,blocked
Landroid/net/NetworkUtils;->getDnsNetwork()Landroid/net/Network;,blocked
Landroid/net/NetworkUtils;->getImplicitNetmask(Ljava/net/Inet4Address;)I,max-target-r
Landroid/net/NetworkUtils;->getTcpRepairWindow(Ljava/io/FileDescriptor;)Landroid/net/TcpRepairWindow;,blocked
Landroid/net/NetworkUtils;->hexToInet6Address(Ljava/lang/String;)Ljava/net/InetAddress;,lo-prio,max-target-o
Landroid/net/NetworkUtils;->inetAddressToInt(Ljava/net/Inet4Address;)I,lo-prio,max-target-o
Landroid/net/NetworkUtils;->intToInetAddress(I)Ljava/net/InetAddress;,unsupported
Landroid/net/NetworkUtils;->legacyParseIpAndMask(Ljava/lang/String;)Landroid/util/Pair;,blocked
Landroid/net/NetworkUtils;->netmaskIntToPrefixLength(I)I,lo-prio,max-target-o
Landroid/net/NetworkUtils;->netmaskToPrefixLength(Ljava/net/Inet4Address;)I,max-target-r
Landroid/net/NetworkUtils;->numericToInetAddress(Ljava/lang/String;)Ljava/net/InetAddress;,max-target-p
Landroid/net/NetworkUtils;->parseIpAndMask(Ljava/lang/String;)Landroid/util/Pair;,lo-prio,max-target-o
Landroid/net/NetworkUtils;->prefixLengthToNetmaskInt(I)I,unsupported
Landroid/net/NetworkUtils;->queryUserAccess(II)Z,lo-prio,max-target-o
Landroid/net/NetworkUtils;->resNetworkCancel(Ljava/io/FileDescriptor;)V,blocked
Landroid/net/NetworkUtils;->resNetworkQuery(ILjava/lang/String;III)Ljava/io/FileDescriptor;,blocked
Landroid/net/NetworkUtils;->resNetworkQuery(JLjava/lang/String;III)Ljava/io/FileDescriptor;,blocked
Landroid/net/NetworkUtils;->resNetworkResult(Ljava/io/FileDescriptor;)Landroid/net/DnsResolver$DnsResponse;,blocked
Landroid/net/NetworkUtils;->resNetworkSend(I[BII)Ljava/io/FileDescriptor;,blocked
Landroid/net/NetworkUtils;->resNetworkSend(J[BII)Ljava/io/FileDescriptor;,blocked
Landroid/net/NetworkUtils;->routedIPv4AddressCount(Ljava/util/TreeSet;)J,lo-prio,max-target-o
Landroid/net/NetworkUtils;->routedIPv6AddressCount(Ljava/util/TreeSet;)Ljava/math/BigInteger;,lo-prio,max-target-o
Landroid/net/NetworkUtils;->trimV4AddrZeros(Ljava/lang/String;)Ljava/lang/String;,unsupported
Landroid/net/OemNetworkPreferences$1;-><init>()V,blocked
Landroid/net/OemNetworkPreferences$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/OemNetworkPreferences;,blocked
Landroid/net/OemNetworkPreferences$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/OemNetworkPreferences$1;->newArray(I)[Landroid/net/OemNetworkPreferences;,blocked
Landroid/net/OemNetworkPreferences$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/OemNetworkPreferences$Builder;-><init>()V,sdk,system-api,test-api
Landroid/net/OemNetworkPreferences$Builder;-><init>(Landroid/net/OemNetworkPreferences;)V,sdk,system-api,test-api
Landroid/net/OemNetworkPreferences$Builder;->addNetworkPreference(Ljava/lang/String;I)Landroid/net/OemNetworkPreferences$Builder;,sdk,system-api,test-api
Landroid/net/OemNetworkPreferences$Builder;->build()Landroid/net/OemNetworkPreferences;,sdk,system-api,test-api
Landroid/net/OemNetworkPreferences$Builder;->clearNetworkPreference(Ljava/lang/String;)Landroid/net/OemNetworkPreferences$Builder;,sdk,system-api,test-api
Landroid/net/OemNetworkPreferences$Builder;->mNetworkMappings:Landroid/os/Bundle;,blocked
Landroid/net/OemNetworkPreferences;-><clinit>()V,blocked
Landroid/net/OemNetworkPreferences;-><init>(Landroid/os/Bundle;)V,blocked
Landroid/net/OemNetworkPreferences;-><init>(Landroid/os/Bundle;Landroid/net/OemNetworkPreferences$1;)V,blocked
Landroid/net/OemNetworkPreferences;->CREATOR:Landroid/os/Parcelable$Creator;,sdk,system-api,test-api
Landroid/net/OemNetworkPreferences;->OEM_NETWORK_PREFERENCE_MAX:I,blocked
Landroid/net/OemNetworkPreferences;->OEM_NETWORK_PREFERENCE_OEM_PAID:I,sdk,system-api,test-api
Landroid/net/OemNetworkPreferences;->OEM_NETWORK_PREFERENCE_OEM_PAID_NO_FALLBACK:I,sdk,system-api,test-api
Landroid/net/OemNetworkPreferences;->OEM_NETWORK_PREFERENCE_OEM_PAID_ONLY:I,sdk,system-api,test-api
Landroid/net/OemNetworkPreferences;->OEM_NETWORK_PREFERENCE_OEM_PRIVATE_ONLY:I,sdk,system-api,test-api
Landroid/net/OemNetworkPreferences;->OEM_NETWORK_PREFERENCE_TEST:I,blocked
Landroid/net/OemNetworkPreferences;->OEM_NETWORK_PREFERENCE_TEST_ONLY:I,blocked
Landroid/net/OemNetworkPreferences;->OEM_NETWORK_PREFERENCE_UNINITIALIZED:I,sdk,system-api,test-api
Landroid/net/OemNetworkPreferences;->access$000(Landroid/net/OemNetworkPreferences;)Landroid/os/Bundle;,blocked
Landroid/net/OemNetworkPreferences;->convertToUnmodifiableMap(Landroid/os/Bundle;)Ljava/util/Map;,blocked
Landroid/net/OemNetworkPreferences;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/OemNetworkPreferences;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/OemNetworkPreferences;->getNetworkPreferences()Ljava/util/Map;,sdk,system-api,test-api
Landroid/net/OemNetworkPreferences;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/OemNetworkPreferences;->isEmpty()Z,blocked
Landroid/net/OemNetworkPreferences;->mNetworkMappings:Landroid/os/Bundle;,blocked
Landroid/net/OemNetworkPreferences;->oemNetworkPreferenceToString(I)Ljava/lang/String;,blocked
Landroid/net/OemNetworkPreferences;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/OemNetworkPreferences;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/ParseException;-><init>(Ljava/lang/String;)V,public-api,sdk,system-api,test-api
Landroid/net/ParseException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V,public-api,sdk,system-api,test-api
Landroid/net/ParseException;->response:Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ProxyInfo$1;-><init>()V,blocked
Landroid/net/ProxyInfo$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/ProxyInfo;,blocked
Landroid/net/ProxyInfo$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/ProxyInfo$1;->newArray(I)[Landroid/net/ProxyInfo;,blocked
Landroid/net/ProxyInfo$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/ProxyInfo;-><clinit>()V,blocked
Landroid/net/ProxyInfo;-><init>(Landroid/net/ProxyInfo;)V,public-api,sdk,system-api,test-api
Landroid/net/ProxyInfo;-><init>(Landroid/net/Uri;)V,lo-prio,max-target-o
Landroid/net/ProxyInfo;-><init>(Landroid/net/Uri;I)V,lo-prio,max-target-o
Landroid/net/ProxyInfo;-><init>(Ljava/lang/String;ILjava/lang/String;)V,unsupported
Landroid/net/ProxyInfo;-><init>(Ljava/lang/String;ILjava/lang/String;[Ljava/lang/String;)V,lo-prio,max-target-o
Landroid/net/ProxyInfo;-><init>(Ljava/lang/String;ILjava/lang/String;[Ljava/lang/String;Landroid/net/ProxyInfo$1;)V,blocked
Landroid/net/ProxyInfo;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,sdk,system-api,test-api
Landroid/net/ProxyInfo;->LOCAL_EXCL_LIST:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ProxyInfo;->LOCAL_HOST:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ProxyInfo;->LOCAL_PORT:I,lo-prio,max-target-o
Landroid/net/ProxyInfo;->buildDirectProxy(Ljava/lang/String;I)Landroid/net/ProxyInfo;,public-api,sdk,system-api,test-api
Landroid/net/ProxyInfo;->buildDirectProxy(Ljava/lang/String;ILjava/util/List;)Landroid/net/ProxyInfo;,public-api,sdk,system-api,test-api
Landroid/net/ProxyInfo;->buildPacProxy(Landroid/net/Uri;)Landroid/net/ProxyInfo;,public-api,sdk,system-api,test-api
Landroid/net/ProxyInfo;->buildPacProxy(Landroid/net/Uri;I)Landroid/net/ProxyInfo;,public-api,sdk,system-api,test-api
Landroid/net/ProxyInfo;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/ProxyInfo;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/ProxyInfo;->getExclusionList()[Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ProxyInfo;->getExclusionListAsString()Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ProxyInfo;->getHost()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/ProxyInfo;->getPacFileUrl()Landroid/net/Uri;,public-api,sdk,system-api,test-api
Landroid/net/ProxyInfo;->getPort()I,public-api,sdk,system-api,test-api
Landroid/net/ProxyInfo;->getSocketAddress()Ljava/net/InetSocketAddress;,lo-prio,max-target-o
Landroid/net/ProxyInfo;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/ProxyInfo;->isValid()Z,public-api,sdk,system-api,test-api
Landroid/net/ProxyInfo;->mExclusionList:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ProxyInfo;->mHost:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ProxyInfo;->mPacFileUrl:Landroid/net/Uri;,lo-prio,max-target-o
Landroid/net/ProxyInfo;->mParsedExclusionList:[Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/ProxyInfo;->mPort:I,lo-prio,max-target-o
Landroid/net/ProxyInfo;->makeProxy()Ljava/net/Proxy;,lo-prio,max-target-o
Landroid/net/ProxyInfo;->parseExclusionList(Ljava/lang/String;)[Ljava/lang/String;,blocked
Landroid/net/ProxyInfo;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/ProxyInfo;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/QosCallback$QosCallbackRegistrationException;-><init>()V,blocked
Landroid/net/QosCallback;-><init>()V,sdk,system-api,test-api
Landroid/net/QosCallback;->onError(Landroid/net/QosCallbackException;)V,sdk,system-api,test-api
Landroid/net/QosCallback;->onQosSessionAvailable(Landroid/net/QosSession;Landroid/net/QosSessionAttributes;)V,sdk,system-api,test-api
Landroid/net/QosCallback;->onQosSessionLost(Landroid/net/QosSession;)V,sdk,system-api,test-api
Landroid/net/QosCallbackConnection$$ExternalSyntheticLambda0;-><init>(Landroid/net/QosCallbackConnection;I)V,blocked
Landroid/net/QosCallbackConnection$$ExternalSyntheticLambda0;->f$0:Landroid/net/QosCallbackConnection;,blocked
Landroid/net/QosCallbackConnection$$ExternalSyntheticLambda0;->f$1:I,blocked
Landroid/net/QosCallbackConnection$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/QosCallbackConnection$$ExternalSyntheticLambda1;-><init>(Landroid/net/QosCallbackConnection;Landroid/net/QosSession;)V,blocked
Landroid/net/QosCallbackConnection$$ExternalSyntheticLambda1;->f$0:Landroid/net/QosCallbackConnection;,blocked
Landroid/net/QosCallbackConnection$$ExternalSyntheticLambda1;->f$1:Landroid/net/QosSession;,blocked
Landroid/net/QosCallbackConnection$$ExternalSyntheticLambda1;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/QosCallbackConnection$$ExternalSyntheticLambda2;-><init>(Landroid/net/QosCallbackConnection;Landroid/net/QosSession;Landroid/telephony/data/EpsBearerQosSessionAttributes;)V,blocked
Landroid/net/QosCallbackConnection$$ExternalSyntheticLambda2;->f$0:Landroid/net/QosCallbackConnection;,blocked
Landroid/net/QosCallbackConnection$$ExternalSyntheticLambda2;->f$1:Landroid/net/QosSession;,blocked
Landroid/net/QosCallbackConnection$$ExternalSyntheticLambda2;->f$2:Landroid/telephony/data/EpsBearerQosSessionAttributes;,blocked
Landroid/net/QosCallbackConnection$$ExternalSyntheticLambda2;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/QosCallbackConnection$$ExternalSyntheticLambda3;-><init>(Landroid/net/QosCallbackConnection;Landroid/net/QosSession;Landroid/telephony/data/NrQosSessionAttributes;)V,blocked
Landroid/net/QosCallbackConnection$$ExternalSyntheticLambda3;->f$0:Landroid/net/QosCallbackConnection;,blocked
Landroid/net/QosCallbackConnection$$ExternalSyntheticLambda3;->f$1:Landroid/net/QosSession;,blocked
Landroid/net/QosCallbackConnection$$ExternalSyntheticLambda3;->f$2:Landroid/telephony/data/NrQosSessionAttributes;,blocked
Landroid/net/QosCallbackConnection$$ExternalSyntheticLambda3;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/QosCallbackConnection;-><init>(Landroid/net/ConnectivityManager;Landroid/net/QosCallback;Ljava/util/concurrent/Executor;)V,blocked
Landroid/net/QosCallbackConnection;->getCallback()Landroid/net/QosCallback;,blocked
Landroid/net/QosCallbackConnection;->lambda$onError$3$QosCallbackConnection(I)V,blocked
Landroid/net/QosCallbackConnection;->lambda$onNrQosSessionAvailable$1$QosCallbackConnection(Landroid/net/QosSession;Landroid/telephony/data/NrQosSessionAttributes;)V,blocked
Landroid/net/QosCallbackConnection;->lambda$onQosEpsBearerSessionAvailable$0$QosCallbackConnection(Landroid/net/QosSession;Landroid/telephony/data/EpsBearerQosSessionAttributes;)V,blocked
Landroid/net/QosCallbackConnection;->lambda$onQosSessionLost$2$QosCallbackConnection(Landroid/net/QosSession;)V,blocked
Landroid/net/QosCallbackConnection;->mCallback:Landroid/net/QosCallback;,blocked
Landroid/net/QosCallbackConnection;->mConnectivityManager:Landroid/net/ConnectivityManager;,blocked
Landroid/net/QosCallbackConnection;->mExecutor:Ljava/util/concurrent/Executor;,blocked
Landroid/net/QosCallbackConnection;->onError(I)V,blocked
Landroid/net/QosCallbackConnection;->onNrQosSessionAvailable(Landroid/net/QosSession;Landroid/telephony/data/NrQosSessionAttributes;)V,blocked
Landroid/net/QosCallbackConnection;->onQosEpsBearerSessionAvailable(Landroid/net/QosSession;Landroid/telephony/data/EpsBearerQosSessionAttributes;)V,blocked
Landroid/net/QosCallbackConnection;->onQosSessionLost(Landroid/net/QosSession;)V,blocked
Landroid/net/QosCallbackConnection;->stopReceivingMessages()V,blocked
Landroid/net/QosCallbackException;-><init>(Ljava/lang/String;)V,blocked
Landroid/net/QosCallbackException;-><init>(Ljava/lang/Throwable;)V,blocked
Landroid/net/QosCallbackException;->EX_TYPE_FILTER_NETWORK_RELEASED:I,blocked
Landroid/net/QosCallbackException;->EX_TYPE_FILTER_NONE:I,blocked
Landroid/net/QosCallbackException;->EX_TYPE_FILTER_NOT_SUPPORTED:I,blocked
Landroid/net/QosCallbackException;->EX_TYPE_FILTER_SOCKET_LOCAL_ADDRESS_CHANGED:I,blocked
Landroid/net/QosCallbackException;->EX_TYPE_FILTER_SOCKET_NOT_BOUND:I,blocked
Landroid/net/QosCallbackException;->TAG:Ljava/lang/String;,blocked
Landroid/net/QosCallbackException;->createException(I)Landroid/net/QosCallbackException;,blocked
Landroid/net/QosFilter;-><init>()V,blocked
Landroid/net/QosFilter;->getNetwork()Landroid/net/Network;,sdk,system-api,test-api
Landroid/net/QosFilter;->matchesLocalAddress(Ljava/net/InetAddress;II)Z,sdk,system-api,test-api
Landroid/net/QosFilter;->matchesRemoteAddress(Ljava/net/InetAddress;II)Z,sdk,system-api,test-api
Landroid/net/QosFilter;->validate()I,blocked
Landroid/net/QosFilterParcelable$1;-><init>()V,blocked
Landroid/net/QosFilterParcelable$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/QosFilterParcelable;,blocked
Landroid/net/QosFilterParcelable$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/QosFilterParcelable$1;->newArray(I)[Landroid/net/QosFilterParcelable;,blocked
Landroid/net/QosFilterParcelable$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/QosFilterParcelable;-><clinit>()V,blocked
Landroid/net/QosFilterParcelable;-><init>(Landroid/net/QosFilter;)V,blocked
Landroid/net/QosFilterParcelable;-><init>(Landroid/os/Parcel;)V,blocked
Landroid/net/QosFilterParcelable;-><init>(Landroid/os/Parcel;Landroid/net/QosFilterParcelable$1;)V,blocked
Landroid/net/QosFilterParcelable;->CREATOR:Landroid/os/Parcelable$Creator;,blocked
Landroid/net/QosFilterParcelable;->LOG_TAG:Ljava/lang/String;,blocked
Landroid/net/QosFilterParcelable;->NO_FILTER_PRESENT:I,blocked
Landroid/net/QosFilterParcelable;->QOS_SOCKET_FILTER:I,blocked
Landroid/net/QosFilterParcelable;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/QosFilterParcelable;->getQosFilter()Landroid/net/QosFilter;,blocked
Landroid/net/QosFilterParcelable;->mQosFilter:Landroid/net/QosFilter;,blocked
Landroid/net/QosFilterParcelable;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/QosSession$1;-><init>()V,blocked
Landroid/net/QosSession$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/QosSession;,blocked
Landroid/net/QosSession$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/QosSession$1;->newArray(I)[Landroid/net/QosSession;,blocked
Landroid/net/QosSession$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/QosSession;-><clinit>()V,blocked
Landroid/net/QosSession;-><init>(II)V,sdk,system-api,test-api
Landroid/net/QosSession;-><init>(Landroid/os/Parcel;)V,blocked
Landroid/net/QosSession;-><init>(Landroid/os/Parcel;Landroid/net/QosSession$1;)V,blocked
Landroid/net/QosSession;->CREATOR:Landroid/os/Parcelable$Creator;,sdk,system-api,test-api
Landroid/net/QosSession;->TYPE_EPS_BEARER:I,sdk,system-api,test-api
Landroid/net/QosSession;->TYPE_NR_BEARER:I,sdk,system-api,test-api
Landroid/net/QosSession;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/QosSession;->getSessionId()I,sdk,system-api,test-api
Landroid/net/QosSession;->getSessionType()I,sdk,system-api,test-api
Landroid/net/QosSession;->getUniqueId()J,sdk,system-api,test-api
Landroid/net/QosSession;->mSessionId:I,blocked
Landroid/net/QosSession;->mSessionType:I,blocked
Landroid/net/QosSession;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/QosSession;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/QosSocketFilter;-><clinit>()V,blocked
Landroid/net/QosSocketFilter;-><init>(Landroid/net/QosSocketInfo;)V,blocked
Landroid/net/QosSocketFilter;->TAG:Ljava/lang/String;,blocked
Landroid/net/QosSocketFilter;->getAddressFromFileDescriptor()Ljava/net/InetSocketAddress;,blocked
Landroid/net/QosSocketFilter;->getNetwork()Landroid/net/Network;,sdk,system-api,test-api
Landroid/net/QosSocketFilter;->getQosSocketInfo()Landroid/net/QosSocketInfo;,blocked
Landroid/net/QosSocketFilter;->mQosSocketInfo:Landroid/net/QosSocketInfo;,blocked
Landroid/net/QosSocketFilter;->matchesAddress(Ljava/net/InetSocketAddress;Ljava/net/InetAddress;II)Z,blocked
Landroid/net/QosSocketFilter;->matchesLocalAddress(Ljava/net/InetAddress;II)Z,sdk,system-api,test-api
Landroid/net/QosSocketFilter;->matchesRemoteAddress(Ljava/net/InetAddress;II)Z,sdk,system-api,test-api
Landroid/net/QosSocketFilter;->validate()I,blocked
Landroid/net/QosSocketInfo$1;-><init>()V,blocked
Landroid/net/QosSocketInfo$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/QosSocketInfo;,blocked
Landroid/net/QosSocketInfo$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/QosSocketInfo$1;->newArray(I)[Landroid/net/QosSocketInfo;,blocked
Landroid/net/QosSocketInfo$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/QosSocketInfo;-><clinit>()V,blocked
Landroid/net/QosSocketInfo;-><init>(Landroid/net/Network;Ljava/net/Socket;)V,sdk,system-api,test-api
Landroid/net/QosSocketInfo;-><init>(Landroid/os/Parcel;)V,blocked
Landroid/net/QosSocketInfo;-><init>(Landroid/os/Parcel;Landroid/net/QosSocketInfo$1;)V,blocked
Landroid/net/QosSocketInfo;->CREATOR:Landroid/os/Parcelable$Creator;,sdk,system-api,test-api
Landroid/net/QosSocketInfo;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/QosSocketInfo;->getLocalSocketAddress()Ljava/net/InetSocketAddress;,sdk,system-api,test-api
Landroid/net/QosSocketInfo;->getNetwork()Landroid/net/Network;,sdk,system-api,test-api
Landroid/net/QosSocketInfo;->getParcelFileDescriptor()Landroid/os/ParcelFileDescriptor;,blocked
Landroid/net/QosSocketInfo;->getRemoteSocketAddress()Ljava/net/InetSocketAddress;,sdk,system-api,test-api
Landroid/net/QosSocketInfo;->mLocalSocketAddress:Ljava/net/InetSocketAddress;,blocked
Landroid/net/QosSocketInfo;->mNetwork:Landroid/net/Network;,blocked
Landroid/net/QosSocketInfo;->mParcelFileDescriptor:Landroid/os/ParcelFileDescriptor;,blocked
Landroid/net/QosSocketInfo;->mRemoteSocketAddress:Ljava/net/InetSocketAddress;,blocked
Landroid/net/QosSocketInfo;->readSocketAddress(Landroid/os/Parcel;I)Ljava/net/InetSocketAddress;,blocked
Landroid/net/QosSocketInfo;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/RouteInfo$1;-><init>()V,blocked
Landroid/net/RouteInfo$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/RouteInfo;,blocked
Landroid/net/RouteInfo$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/RouteInfo$1;->newArray(I)[Landroid/net/RouteInfo;,blocked
Landroid/net/RouteInfo$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/RouteInfo$RouteKey;-><init>(Landroid/net/IpPrefix;Ljava/net/InetAddress;Ljava/lang/String;)V,blocked
Landroid/net/RouteInfo$RouteKey;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/RouteInfo$RouteKey;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/RouteInfo$RouteKey;->mDestination:Landroid/net/IpPrefix;,blocked
Landroid/net/RouteInfo$RouteKey;->mGateway:Ljava/net/InetAddress;,blocked
Landroid/net/RouteInfo$RouteKey;->mInterface:Ljava/lang/String;,blocked
Landroid/net/RouteInfo;-><clinit>()V,blocked
Landroid/net/RouteInfo;-><init>(Landroid/net/IpPrefix;)V,lo-prio,max-target-o
Landroid/net/RouteInfo;-><init>(Landroid/net/IpPrefix;I)V,lo-prio,max-target-o
Landroid/net/RouteInfo;-><init>(Landroid/net/IpPrefix;Ljava/net/InetAddress;)V,lo-prio,max-target-o
Landroid/net/RouteInfo;-><init>(Landroid/net/IpPrefix;Ljava/net/InetAddress;Ljava/lang/String;)V,max-target-r
Landroid/net/RouteInfo;-><init>(Landroid/net/IpPrefix;Ljava/net/InetAddress;Ljava/lang/String;I)V,sdk,system-api,test-api
Landroid/net/RouteInfo;-><init>(Landroid/net/IpPrefix;Ljava/net/InetAddress;Ljava/lang/String;II)V,sdk,system-api,test-api
Landroid/net/RouteInfo;-><init>(Landroid/net/LinkAddress;)V,lo-prio,max-target-o
Landroid/net/RouteInfo;-><init>(Landroid/net/LinkAddress;Ljava/net/InetAddress;)V,unsupported
Landroid/net/RouteInfo;-><init>(Landroid/net/LinkAddress;Ljava/net/InetAddress;Ljava/lang/String;)V,unsupported
Landroid/net/RouteInfo;-><init>(Ljava/net/InetAddress;)V,unsupported
Landroid/net/RouteInfo;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,sdk,system-api,test-api
Landroid/net/RouteInfo;->RTN_THROW:I,sdk,system-api,test-api
Landroid/net/RouteInfo;->RTN_UNICAST:I,sdk,system-api,test-api
Landroid/net/RouteInfo;->RTN_UNREACHABLE:I,sdk,system-api,test-api
Landroid/net/RouteInfo;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/RouteInfo;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/RouteInfo;->getDestination()Landroid/net/IpPrefix;,public-api,sdk,system-api,test-api
Landroid/net/RouteInfo;->getDestinationLinkAddress()Landroid/net/LinkAddress;,lo-prio,max-target-o
Landroid/net/RouteInfo;->getGateway()Ljava/net/InetAddress;,public-api,sdk,system-api,test-api
Landroid/net/RouteInfo;->getInterface()Ljava/lang/String;,public-api,sdk,system-api,test-api
Landroid/net/RouteInfo;->getMtu()I,sdk,system-api,test-api
Landroid/net/RouteInfo;->getRouteKey()Landroid/net/RouteInfo$RouteKey;,blocked
Landroid/net/RouteInfo;->getType()I,sdk,system-api,test-api
Landroid/net/RouteInfo;->hasGateway()Z,public-api,sdk,system-api,test-api
Landroid/net/RouteInfo;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/RouteInfo;->isDefaultRoute()Z,public-api,sdk,system-api,test-api
Landroid/net/RouteInfo;->isHost()Z,max-target-p
Landroid/net/RouteInfo;->isHostRoute()Z,lo-prio,max-target-o
Landroid/net/RouteInfo;->isIPv4Default()Z,lo-prio,max-target-o
Landroid/net/RouteInfo;->isIPv4UnreachableDefault()Z,blocked
Landroid/net/RouteInfo;->isIPv6Default()Z,lo-prio,max-target-o
Landroid/net/RouteInfo;->isIPv6UnreachableDefault()Z,blocked
Landroid/net/RouteInfo;->isUnreachableDefaultRoute()Z,blocked
Landroid/net/RouteInfo;->mDestination:Landroid/net/IpPrefix;,lo-prio,max-target-o
Landroid/net/RouteInfo;->mGateway:Ljava/net/InetAddress;,unsupported
Landroid/net/RouteInfo;->mHasGateway:Z,lo-prio,max-target-o
Landroid/net/RouteInfo;->mInterface:Ljava/lang/String;,lo-prio,max-target-o
Landroid/net/RouteInfo;->mIsHost:Z,max-target-p
Landroid/net/RouteInfo;->mMtu:I,blocked
Landroid/net/RouteInfo;->mType:I,lo-prio,max-target-o
Landroid/net/RouteInfo;->makeHostRoute(Ljava/net/InetAddress;Ljava/lang/String;)Landroid/net/RouteInfo;,lo-prio,max-target-o
Landroid/net/RouteInfo;->makeHostRoute(Ljava/net/InetAddress;Ljava/net/InetAddress;Ljava/lang/String;)Landroid/net/RouteInfo;,lo-prio,max-target-o
Landroid/net/RouteInfo;->matches(Ljava/net/InetAddress;)Z,public-api,sdk,system-api,test-api
Landroid/net/RouteInfo;->selectBestRoute(Ljava/util/Collection;Ljava/net/InetAddress;)Landroid/net/RouteInfo;,max-target-r
Landroid/net/RouteInfo;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/RouteInfo;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive$1$$ExternalSyntheticLambda0;-><init>(Landroid/net/SocketKeepalive$1;ILandroid/net/SocketKeepalive$Callback;)V,blocked
Landroid/net/SocketKeepalive$1$$ExternalSyntheticLambda0;->f$0:Landroid/net/SocketKeepalive$1;,blocked
Landroid/net/SocketKeepalive$1$$ExternalSyntheticLambda0;->f$1:I,blocked
Landroid/net/SocketKeepalive$1$$ExternalSyntheticLambda0;->f$2:Landroid/net/SocketKeepalive$Callback;,blocked
Landroid/net/SocketKeepalive$1$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive$1$$ExternalSyntheticLambda1;-><init>(Landroid/net/SocketKeepalive$1;Landroid/net/SocketKeepalive$Callback;)V,blocked
Landroid/net/SocketKeepalive$1$$ExternalSyntheticLambda1;->f$0:Landroid/net/SocketKeepalive$1;,blocked
Landroid/net/SocketKeepalive$1$$ExternalSyntheticLambda1;->f$1:Landroid/net/SocketKeepalive$Callback;,blocked
Landroid/net/SocketKeepalive$1$$ExternalSyntheticLambda1;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive$1$$ExternalSyntheticLambda2;-><init>(Landroid/net/SocketKeepalive$1;Landroid/net/SocketKeepalive$Callback;)V,blocked
Landroid/net/SocketKeepalive$1$$ExternalSyntheticLambda2;->f$0:Landroid/net/SocketKeepalive$1;,blocked
Landroid/net/SocketKeepalive$1$$ExternalSyntheticLambda2;->f$1:Landroid/net/SocketKeepalive$Callback;,blocked
Landroid/net/SocketKeepalive$1$$ExternalSyntheticLambda2;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive$1$$ExternalSyntheticLambda3;-><init>(Landroid/net/SocketKeepalive$1;Landroid/net/SocketKeepalive$Callback;I)V,blocked
Landroid/net/SocketKeepalive$1$$ExternalSyntheticLambda3;->f$0:Landroid/net/SocketKeepalive$1;,blocked
Landroid/net/SocketKeepalive$1$$ExternalSyntheticLambda3;->f$1:Landroid/net/SocketKeepalive$Callback;,blocked
Landroid/net/SocketKeepalive$1$$ExternalSyntheticLambda3;->f$2:I,blocked
Landroid/net/SocketKeepalive$1$$ExternalSyntheticLambda3;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive$1;-><init>(Landroid/net/SocketKeepalive;Landroid/net/SocketKeepalive$Callback;Ljava/util/concurrent/Executor;)V,blocked
Landroid/net/SocketKeepalive$1;->lambda$onDataReceived$3$SocketKeepalive$1(Landroid/net/SocketKeepalive$Callback;)V,blocked
Landroid/net/SocketKeepalive$1;->lambda$onError$2$SocketKeepalive$1(Landroid/net/SocketKeepalive$Callback;I)V,blocked
Landroid/net/SocketKeepalive$1;->lambda$onStarted$0$SocketKeepalive$1(ILandroid/net/SocketKeepalive$Callback;)V,blocked
Landroid/net/SocketKeepalive$1;->lambda$onStopped$1$SocketKeepalive$1(Landroid/net/SocketKeepalive$Callback;)V,blocked
Landroid/net/SocketKeepalive$1;->onDataReceived()V,blocked
Landroid/net/SocketKeepalive$1;->onError(I)V,blocked
Landroid/net/SocketKeepalive$1;->onStarted(I)V,blocked
Landroid/net/SocketKeepalive$1;->onStopped()V,blocked
Landroid/net/SocketKeepalive$1;->this$0:Landroid/net/SocketKeepalive;,blocked
Landroid/net/SocketKeepalive$1;->val$callback:Landroid/net/SocketKeepalive$Callback;,blocked
Landroid/net/SocketKeepalive$1;->val$executor:Ljava/util/concurrent/Executor;,blocked
Landroid/net/SocketKeepalive$Callback;-><init>()V,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive$Callback;->onDataReceived()V,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive$Callback;->onError(I)V,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive$Callback;->onStarted()V,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive$Callback;->onStopped()V,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive$ErrorCodeException;-><init>(I)V,blocked
Landroid/net/SocketKeepalive$ErrorCodeException;-><init>(ILjava/lang/Throwable;)V,blocked
Landroid/net/SocketKeepalive$ErrorCodeException;->error:I,blocked
Landroid/net/SocketKeepalive$InvalidSocketException;-><init>(I)V,blocked
Landroid/net/SocketKeepalive$InvalidSocketException;-><init>(ILjava/lang/Throwable;)V,blocked
Landroid/net/SocketKeepalive;-><init>(Landroid/net/IConnectivityManager;Landroid/net/Network;Landroid/os/ParcelFileDescriptor;Ljava/util/concurrent/Executor;Landroid/net/SocketKeepalive$Callback;)V,blocked
Landroid/net/SocketKeepalive;->BINDER_DIED:I,blocked
Landroid/net/SocketKeepalive;->DATA_RECEIVED:I,blocked
Landroid/net/SocketKeepalive;->ERROR_HARDWARE_ERROR:I,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive;->ERROR_INSUFFICIENT_RESOURCES:I,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive;->ERROR_INVALID_INTERVAL:I,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive;->ERROR_INVALID_IP_ADDRESS:I,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive;->ERROR_INVALID_LENGTH:I,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive;->ERROR_INVALID_NETWORK:I,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive;->ERROR_INVALID_PORT:I,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive;->ERROR_INVALID_SOCKET:I,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive;->ERROR_NO_SUCH_SLOT:I,sdk,system-api,test-api
Landroid/net/SocketKeepalive;->ERROR_SOCKET_NOT_IDLE:I,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive;->ERROR_STOP_REASON_UNINITIALIZED:I,blocked
Landroid/net/SocketKeepalive;->ERROR_UNSUPPORTED:I,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive;->MAX_INTERVAL_SEC:I,blocked
Landroid/net/SocketKeepalive;->MIN_INTERVAL_SEC:I,blocked
Landroid/net/SocketKeepalive;->NO_KEEPALIVE:I,blocked
Landroid/net/SocketKeepalive;->SUCCESS:I,sdk,system-api,test-api
Landroid/net/SocketKeepalive;->TAG:Ljava/lang/String;,blocked
Landroid/net/SocketKeepalive;->close()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive;->mCallback:Landroid/net/ISocketKeepaliveCallback;,blocked
Landroid/net/SocketKeepalive;->mExecutor:Ljava/util/concurrent/Executor;,blocked
Landroid/net/SocketKeepalive;->mNetwork:Landroid/net/Network;,blocked
Landroid/net/SocketKeepalive;->mPfd:Landroid/os/ParcelFileDescriptor;,blocked
Landroid/net/SocketKeepalive;->mService:Landroid/net/IConnectivityManager;,blocked
Landroid/net/SocketKeepalive;->mSlot:Ljava/lang/Integer;,blocked
Landroid/net/SocketKeepalive;->start(I)V,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive;->startImpl(I)V,blocked
Landroid/net/SocketKeepalive;->stop()V,public-api,sdk,system-api,test-api
Landroid/net/SocketKeepalive;->stopImpl()V,blocked
Landroid/net/SocketLocalAddressChangedException;-><init>()V,blocked
Landroid/net/SocketNotBoundException;-><init>()V,blocked
Landroid/net/StaticIpConfiguration$1;-><init>()V,blocked
Landroid/net/StaticIpConfiguration$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/StaticIpConfiguration;,blocked
Landroid/net/StaticIpConfiguration$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration$1;->newArray(I)[Landroid/net/StaticIpConfiguration;,blocked
Landroid/net/StaticIpConfiguration$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration$Builder;-><init>()V,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration$Builder;->build()Landroid/net/StaticIpConfiguration;,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration$Builder;->mDnsServers:Ljava/lang/Iterable;,blocked
Landroid/net/StaticIpConfiguration$Builder;->mDomains:Ljava/lang/String;,blocked
Landroid/net/StaticIpConfiguration$Builder;->mGateway:Ljava/net/InetAddress;,blocked
Landroid/net/StaticIpConfiguration$Builder;->mIpAddress:Landroid/net/LinkAddress;,blocked
Landroid/net/StaticIpConfiguration$Builder;->setDnsServers(Ljava/lang/Iterable;)Landroid/net/StaticIpConfiguration$Builder;,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration$Builder;->setDomains(Ljava/lang/String;)Landroid/net/StaticIpConfiguration$Builder;,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration$Builder;->setGateway(Ljava/net/InetAddress;)Landroid/net/StaticIpConfiguration$Builder;,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration$Builder;->setIpAddress(Landroid/net/LinkAddress;)Landroid/net/StaticIpConfiguration$Builder;,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration;-><clinit>()V,blocked
Landroid/net/StaticIpConfiguration;-><init>()V,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration;-><init>(Landroid/net/StaticIpConfiguration;)V,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration;->CREATOR:Landroid/os/Parcelable$Creator;,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration;->addDnsServer(Ljava/net/InetAddress;)V,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration;->clear()V,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration;->dnsServers:Ljava/util/ArrayList;,max-target-r
Landroid/net/StaticIpConfiguration;->domains:Ljava/lang/String;,max-target-r
Landroid/net/StaticIpConfiguration;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration;->gateway:Ljava/net/InetAddress;,max-target-r
Landroid/net/StaticIpConfiguration;->getDnsServers()Ljava/util/List;,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration;->getDomains()Ljava/lang/String;,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration;->getGateway()Ljava/net/InetAddress;,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration;->getIpAddress()Landroid/net/LinkAddress;,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration;->getRoutes(Ljava/lang/String;)Ljava/util/List;,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration;->ipAddress:Landroid/net/LinkAddress;,max-target-r
Landroid/net/StaticIpConfiguration;->readFromParcel(Landroid/os/Parcel;)Landroid/net/StaticIpConfiguration;,blocked
Landroid/net/StaticIpConfiguration;->toLinkProperties(Ljava/lang/String;)Landroid/net/LinkProperties;,lo-prio,max-target-o
Landroid/net/StaticIpConfiguration;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/StaticIpConfiguration;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/TcpKeepalivePacketData$1;-><init>()V,blocked
Landroid/net/TcpKeepalivePacketData$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/TcpKeepalivePacketData;,blocked
Landroid/net/TcpKeepalivePacketData$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TcpKeepalivePacketData$1;->newArray(I)[Landroid/net/TcpKeepalivePacketData;,blocked
Landroid/net/TcpKeepalivePacketData$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TcpKeepalivePacketData;-><clinit>()V,blocked
Landroid/net/TcpKeepalivePacketData;-><init>(Ljava/net/InetAddress;ILjava/net/InetAddress;I[BIIIIII)V,sdk,system-api,test-api
Landroid/net/TcpKeepalivePacketData;->CREATOR:Landroid/os/Parcelable$Creator;,sdk,system-api,test-api
Landroid/net/TcpKeepalivePacketData;->TAG:Ljava/lang/String;,blocked
Landroid/net/TcpKeepalivePacketData;->access$000(Landroid/os/Parcel;)Landroid/net/TcpKeepalivePacketData;,blocked
Landroid/net/TcpKeepalivePacketData;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/TcpKeepalivePacketData;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TcpKeepalivePacketData;->getIpTos()I,sdk,system-api,test-api
Landroid/net/TcpKeepalivePacketData;->getIpTtl()I,sdk,system-api,test-api
Landroid/net/TcpKeepalivePacketData;->getTcpAck()I,sdk,system-api,test-api
Landroid/net/TcpKeepalivePacketData;->getTcpSeq()I,sdk,system-api,test-api
Landroid/net/TcpKeepalivePacketData;->getTcpWindow()I,sdk,system-api,test-api
Landroid/net/TcpKeepalivePacketData;->getTcpWindowScale()I,sdk,system-api,test-api
Landroid/net/TcpKeepalivePacketData;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TcpKeepalivePacketData;->ipTos:I,blocked
Landroid/net/TcpKeepalivePacketData;->ipTtl:I,blocked
Landroid/net/TcpKeepalivePacketData;->readFromParcel(Landroid/os/Parcel;)Landroid/net/TcpKeepalivePacketData;,blocked
Landroid/net/TcpKeepalivePacketData;->tcpAck:I,blocked
Landroid/net/TcpKeepalivePacketData;->tcpSeq:I,blocked
Landroid/net/TcpKeepalivePacketData;->tcpWindow:I,blocked
Landroid/net/TcpKeepalivePacketData;->tcpWindowScale:I,blocked
Landroid/net/TcpKeepalivePacketData;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TcpKeepalivePacketData;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/TcpRepairWindow;-><init>(IIIIII)V,blocked
Landroid/net/TcpRepairWindow;->maxWindow:I,blocked
Landroid/net/TcpRepairWindow;->rcvWnd:I,blocked
Landroid/net/TcpRepairWindow;->rcvWndScale:I,blocked
Landroid/net/TcpRepairWindow;->rcvWup:I,blocked
Landroid/net/TcpRepairWindow;->sndWl1:I,blocked
Landroid/net/TcpRepairWindow;->sndWnd:I,blocked
Landroid/net/TcpSocketKeepalive$$ExternalSyntheticLambda0;-><init>(Landroid/net/TcpSocketKeepalive;)V,blocked
Landroid/net/TcpSocketKeepalive$$ExternalSyntheticLambda0;->f$0:Landroid/net/TcpSocketKeepalive;,blocked
Landroid/net/TcpSocketKeepalive$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TcpSocketKeepalive$$ExternalSyntheticLambda1;-><init>(Landroid/net/TcpSocketKeepalive;I)V,blocked
Landroid/net/TcpSocketKeepalive$$ExternalSyntheticLambda1;->f$0:Landroid/net/TcpSocketKeepalive;,blocked
Landroid/net/TcpSocketKeepalive$$ExternalSyntheticLambda1;->f$1:I,blocked
Landroid/net/TcpSocketKeepalive$$ExternalSyntheticLambda1;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TcpSocketKeepalive;-><init>(Landroid/net/IConnectivityManager;Landroid/net/Network;Landroid/os/ParcelFileDescriptor;Ljava/util/concurrent/Executor;Landroid/net/SocketKeepalive$Callback;)V,blocked
Landroid/net/TcpSocketKeepalive;->lambda$startImpl$0$TcpSocketKeepalive(I)V,blocked
Landroid/net/TcpSocketKeepalive;->lambda$stopImpl$1$TcpSocketKeepalive()V,blocked
Landroid/net/TcpSocketKeepalive;->startImpl(I)V,blocked
Landroid/net/TcpSocketKeepalive;->stopImpl()V,blocked
Landroid/net/TestNetworkInterface$1;-><init>()V,blocked
Landroid/net/TestNetworkInterface$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/TestNetworkInterface;,blocked
Landroid/net/TestNetworkInterface$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TestNetworkInterface$1;->newArray(I)[Landroid/net/TestNetworkInterface;,blocked
Landroid/net/TestNetworkInterface$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TestNetworkInterface;-><clinit>()V,blocked
Landroid/net/TestNetworkInterface;-><init>(Landroid/os/Parcel;)V,blocked
Landroid/net/TestNetworkInterface;-><init>(Landroid/os/Parcel;Landroid/net/TestNetworkInterface$1;)V,blocked
Landroid/net/TestNetworkInterface;-><init>(Landroid/os/ParcelFileDescriptor;Ljava/lang/String;)V,blocked
Landroid/net/TestNetworkInterface;->CREATOR:Landroid/os/Parcelable$Creator;,blocked
Landroid/net/TestNetworkInterface;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/TestNetworkInterface;->getFileDescriptor()Landroid/os/ParcelFileDescriptor;,blocked
Landroid/net/TestNetworkInterface;->getInterfaceName()Ljava/lang/String;,blocked
Landroid/net/TestNetworkInterface;->mFileDescriptor:Landroid/os/ParcelFileDescriptor;,blocked
Landroid/net/TestNetworkInterface;->mInterfaceName:Ljava/lang/String;,blocked
Landroid/net/TestNetworkInterface;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/TestNetworkManager;-><clinit>()V,blocked
Landroid/net/TestNetworkManager;-><init>(Landroid/net/ITestNetworkManager;)V,blocked
Landroid/net/TestNetworkManager;->TAG:Ljava/lang/String;,blocked
Landroid/net/TestNetworkManager;->TEST_TAP_PREFIX:Ljava/lang/String;,blocked
Landroid/net/TestNetworkManager;->TEST_TUN_PREFIX:Ljava/lang/String;,blocked
Landroid/net/TestNetworkManager;->createTapInterface()Landroid/net/TestNetworkInterface;,blocked
Landroid/net/TestNetworkManager;->createTunInterface(Ljava/util/Collection;)Landroid/net/TestNetworkInterface;,blocked
Landroid/net/TestNetworkManager;->createTunInterface([Landroid/net/LinkAddress;)Landroid/net/TestNetworkInterface;,blocked
Landroid/net/TestNetworkManager;->mService:Landroid/net/ITestNetworkManager;,blocked
Landroid/net/TestNetworkManager;->setupTestNetwork(Landroid/net/LinkProperties;ZLandroid/os/IBinder;)V,blocked
Landroid/net/TestNetworkManager;->setupTestNetwork(Ljava/lang/String;Landroid/net/LinkProperties;Z[ILandroid/os/IBinder;)V,blocked
Landroid/net/TestNetworkManager;->setupTestNetwork(Ljava/lang/String;Landroid/os/IBinder;)V,blocked
Landroid/net/TestNetworkManager;->setupTestNetwork(Ljava/lang/String;[ILandroid/os/IBinder;)V,blocked
Landroid/net/TestNetworkManager;->teardownTestNetwork(Landroid/net/Network;)V,blocked
Landroid/net/TestNetworkSpecifier$1;-><init>()V,blocked
Landroid/net/TestNetworkSpecifier$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/TestNetworkSpecifier;,blocked
Landroid/net/TestNetworkSpecifier$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TestNetworkSpecifier$1;->newArray(I)[Landroid/net/TestNetworkSpecifier;,blocked
Landroid/net/TestNetworkSpecifier$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TestNetworkSpecifier;-><clinit>()V,blocked
Landroid/net/TestNetworkSpecifier;-><init>(Ljava/lang/String;)V,blocked
Landroid/net/TestNetworkSpecifier;->CREATOR:Landroid/os/Parcelable$Creator;,blocked
Landroid/net/TestNetworkSpecifier;->canBeSatisfiedBy(Landroid/net/NetworkSpecifier;)Z,sdk,system-api,test-api
Landroid/net/TestNetworkSpecifier;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/TestNetworkSpecifier;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TestNetworkSpecifier;->getInterfaceName()Ljava/lang/String;,blocked
Landroid/net/TestNetworkSpecifier;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TestNetworkSpecifier;->mInterfaceName:Ljava/lang/String;,blocked
Landroid/net/TestNetworkSpecifier;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TestNetworkSpecifier;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/TetherStatesParcel$1;-><init>()V,blocked
Landroid/net/TetherStatesParcel$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/TetherStatesParcel;,blocked
Landroid/net/TetherStatesParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TetherStatesParcel$1;->newArray(I)[Landroid/net/TetherStatesParcel;,blocked
Landroid/net/TetherStatesParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TetherStatesParcel;-><clinit>()V,blocked
Landroid/net/TetherStatesParcel;-><init>()V,blocked
Landroid/net/TetherStatesParcel;->CREATOR:Landroid/os/Parcelable$Creator;,blocked
Landroid/net/TetherStatesParcel;->availableList:[Landroid/net/TetheringInterface;,blocked
Landroid/net/TetherStatesParcel;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/TetherStatesParcel;->describeContents(Ljava/lang/Object;)I,blocked
Landroid/net/TetherStatesParcel;->erroredIfaceList:[Landroid/net/TetheringInterface;,blocked
Landroid/net/TetherStatesParcel;->lastErrorList:[I,blocked
Landroid/net/TetherStatesParcel;->localOnlyList:[Landroid/net/TetheringInterface;,blocked
Landroid/net/TetherStatesParcel;->readFromParcel(Landroid/os/Parcel;)V,blocked
Landroid/net/TetherStatesParcel;->tetheredList:[Landroid/net/TetheringInterface;,blocked
Landroid/net/TetherStatesParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/TetheredClient$1;-><init>()V,blocked
Landroid/net/TetheredClient$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/TetheredClient;,blocked
Landroid/net/TetheredClient$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TetheredClient$1;->newArray(I)[Landroid/net/TetheredClient;,blocked
Landroid/net/TetheredClient$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TetheredClient$AddressInfo$1;-><init>()V,blocked
Landroid/net/TetheredClient$AddressInfo$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/TetheredClient$AddressInfo;,blocked
Landroid/net/TetheredClient$AddressInfo$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TetheredClient$AddressInfo$1;->newArray(I)[Landroid/net/TetheredClient$AddressInfo;,blocked
Landroid/net/TetheredClient$AddressInfo$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TetheredClient$AddressInfo;-><clinit>()V,blocked
Landroid/net/TetheredClient$AddressInfo;-><init>(Landroid/net/LinkAddress;Ljava/lang/String;)V,blocked
Landroid/net/TetheredClient$AddressInfo;-><init>(Landroid/os/Parcel;)V,blocked
Landroid/net/TetheredClient$AddressInfo;-><init>(Landroid/os/Parcel;Landroid/net/TetheredClient$1;)V,blocked
Landroid/net/TetheredClient$AddressInfo;->CREATOR:Landroid/os/Parcelable$Creator;,sdk,system-api,test-api
Landroid/net/TetheredClient$AddressInfo;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/TetheredClient$AddressInfo;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheredClient$AddressInfo;->getAddress()Landroid/net/LinkAddress;,sdk,system-api,test-api
Landroid/net/TetheredClient$AddressInfo;->getExpirationTime()J,blocked
Landroid/net/TetheredClient$AddressInfo;->getHostname()Ljava/lang/String;,sdk,system-api,test-api
Landroid/net/TetheredClient$AddressInfo;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheredClient$AddressInfo;->mAddress:Landroid/net/LinkAddress;,blocked
Landroid/net/TetheredClient$AddressInfo;->mHostname:Ljava/lang/String;,blocked
Landroid/net/TetheredClient$AddressInfo;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheredClient$AddressInfo;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/TetheredClient;-><clinit>()V,blocked
Landroid/net/TetheredClient;-><init>(Landroid/net/MacAddress;Ljava/util/Collection;I)V,sdk,system-api,test-api
Landroid/net/TetheredClient;-><init>(Landroid/os/Parcel;)V,blocked
Landroid/net/TetheredClient;-><init>(Landroid/os/Parcel;Landroid/net/TetheredClient$1;)V,blocked
Landroid/net/TetheredClient;->CREATOR:Landroid/os/Parcelable$Creator;,sdk,system-api,test-api
Landroid/net/TetheredClient;->addAddresses(Landroid/net/TetheredClient;)Landroid/net/TetheredClient;,blocked
Landroid/net/TetheredClient;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/TetheredClient;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheredClient;->getAddresses()Ljava/util/List;,sdk,system-api,test-api
Landroid/net/TetheredClient;->getMacAddress()Landroid/net/MacAddress;,sdk,system-api,test-api
Landroid/net/TetheredClient;->getTetheringType()I,sdk,system-api,test-api
Landroid/net/TetheredClient;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheredClient;->mAddresses:Ljava/util/List;,blocked
Landroid/net/TetheredClient;->mMacAddress:Landroid/net/MacAddress;,blocked
Landroid/net/TetheredClient;->mTetheringType:I,blocked
Landroid/net/TetheredClient;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheredClient;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/TetheringCallbackStartedParcel$1;-><init>()V,blocked
Landroid/net/TetheringCallbackStartedParcel$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/TetheringCallbackStartedParcel;,blocked
Landroid/net/TetheringCallbackStartedParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TetheringCallbackStartedParcel$1;->newArray(I)[Landroid/net/TetheringCallbackStartedParcel;,blocked
Landroid/net/TetheringCallbackStartedParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TetheringCallbackStartedParcel;-><clinit>()V,blocked
Landroid/net/TetheringCallbackStartedParcel;-><init>()V,blocked
Landroid/net/TetheringCallbackStartedParcel;->CREATOR:Landroid/os/Parcelable$Creator;,blocked
Landroid/net/TetheringCallbackStartedParcel;->config:Landroid/net/TetheringConfigurationParcel;,blocked
Landroid/net/TetheringCallbackStartedParcel;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/TetheringCallbackStartedParcel;->describeContents(Ljava/lang/Object;)I,blocked
Landroid/net/TetheringCallbackStartedParcel;->offloadStatus:I,blocked
Landroid/net/TetheringCallbackStartedParcel;->readFromParcel(Landroid/os/Parcel;)V,blocked
Landroid/net/TetheringCallbackStartedParcel;->states:Landroid/net/TetherStatesParcel;,blocked
Landroid/net/TetheringCallbackStartedParcel;->tetheredClients:Ljava/util/List;,blocked
Landroid/net/TetheringCallbackStartedParcel;->tetheringSupported:Z,blocked
Landroid/net/TetheringCallbackStartedParcel;->upstreamNetwork:Landroid/net/Network;,blocked
Landroid/net/TetheringCallbackStartedParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/TetheringConfigurationParcel$1;-><init>()V,blocked
Landroid/net/TetheringConfigurationParcel$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/TetheringConfigurationParcel;,blocked
Landroid/net/TetheringConfigurationParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TetheringConfigurationParcel$1;->newArray(I)[Landroid/net/TetheringConfigurationParcel;,blocked
Landroid/net/TetheringConfigurationParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TetheringConfigurationParcel;-><clinit>()V,blocked
Landroid/net/TetheringConfigurationParcel;-><init>()V,blocked
Landroid/net/TetheringConfigurationParcel;->CREATOR:Landroid/os/Parcelable$Creator;,blocked
Landroid/net/TetheringConfigurationParcel;->chooseUpstreamAutomatically:Z,blocked
Landroid/net/TetheringConfigurationParcel;->defaultIPv4DNS:[Ljava/lang/String;,blocked
Landroid/net/TetheringConfigurationParcel;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/TetheringConfigurationParcel;->enableLegacyDhcpServer:Z,blocked
Landroid/net/TetheringConfigurationParcel;->isDunRequired:Z,blocked
Landroid/net/TetheringConfigurationParcel;->legacyDhcpRanges:[Ljava/lang/String;,blocked
Landroid/net/TetheringConfigurationParcel;->preferredUpstreamIfaceTypes:[I,blocked
Landroid/net/TetheringConfigurationParcel;->provisioningApp:[Ljava/lang/String;,blocked
Landroid/net/TetheringConfigurationParcel;->provisioningAppNoUi:Ljava/lang/String;,blocked
Landroid/net/TetheringConfigurationParcel;->provisioningCheckPeriod:I,blocked
Landroid/net/TetheringConfigurationParcel;->readFromParcel(Landroid/os/Parcel;)V,blocked
Landroid/net/TetheringConfigurationParcel;->subId:I,blocked
Landroid/net/TetheringConfigurationParcel;->tetherableBluetoothRegexs:[Ljava/lang/String;,blocked
Landroid/net/TetheringConfigurationParcel;->tetherableUsbRegexs:[Ljava/lang/String;,blocked
Landroid/net/TetheringConfigurationParcel;->tetherableWifiRegexs:[Ljava/lang/String;,blocked
Landroid/net/TetheringConfigurationParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/TetheringConstants;-><init>()V,blocked
Landroid/net/TetheringConstants;->EXTRA_ADD_TETHER_TYPE:Ljava/lang/String;,blocked
Landroid/net/TetheringConstants;->EXTRA_PROVISION_CALLBACK:Ljava/lang/String;,blocked
Landroid/net/TetheringConstants;->EXTRA_REM_TETHER_TYPE:Ljava/lang/String;,blocked
Landroid/net/TetheringConstants;->EXTRA_RUN_PROVISION:Ljava/lang/String;,blocked
Landroid/net/TetheringConstants;->EXTRA_SET_ALARM:Ljava/lang/String;,blocked
Landroid/net/TetheringConstants;->EXTRA_TETHER_PROVISIONING_RESPONSE:Ljava/lang/String;,blocked
Landroid/net/TetheringConstants;->EXTRA_TETHER_SILENT_PROVISIONING_ACTION:Ljava/lang/String;,blocked
Landroid/net/TetheringConstants;->EXTRA_TETHER_SUBID:Ljava/lang/String;,blocked
Landroid/net/TetheringConstants;->EXTRA_TETHER_UI_PROVISIONING_APP_NAME:Ljava/lang/String;,blocked
Landroid/net/TetheringInterface$1;-><init>()V,blocked
Landroid/net/TetheringInterface$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/TetheringInterface;,blocked
Landroid/net/TetheringInterface$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TetheringInterface$1;->newArray(I)[Landroid/net/TetheringInterface;,blocked
Landroid/net/TetheringInterface$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TetheringInterface;-><clinit>()V,blocked
Landroid/net/TetheringInterface;-><init>(ILjava/lang/String;)V,sdk,system-api,test-api
Landroid/net/TetheringInterface;-><init>(Landroid/os/Parcel;)V,blocked
Landroid/net/TetheringInterface;-><init>(Landroid/os/Parcel;Landroid/net/TetheringInterface$1;)V,blocked
Landroid/net/TetheringInterface;->CREATOR:Landroid/os/Parcelable$Creator;,sdk,system-api,test-api
Landroid/net/TetheringInterface;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/TetheringInterface;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheringInterface;->getInterface()Ljava/lang/String;,sdk,system-api,test-api
Landroid/net/TetheringInterface;->getType()I,sdk,system-api,test-api
Landroid/net/TetheringInterface;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheringInterface;->mInterface:Ljava/lang/String;,blocked
Landroid/net/TetheringInterface;->mType:I,blocked
Landroid/net/TetheringInterface;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheringInterface;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/TetheringManager$$ExternalSyntheticLambda0;-><init>(Landroid/net/ITetheringEventCallback;Ljava/lang/String;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda0;->f$0:Landroid/net/ITetheringEventCallback;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda0;->f$1:Ljava/lang/String;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda0;->onConnectorAvailable(Landroid/net/ITetheringConnector;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda10;-><init>(Landroid/net/TetheringManager;ZLjava/lang/String;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda10;->f$0:Landroid/net/TetheringManager;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda10;->f$1:Z,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda10;->f$2:Ljava/lang/String;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda10;->runRequest(Landroid/net/ITetheringConnector;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda11;-><init>(Landroid/net/TetheringManager;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda11;->f$0:Landroid/net/TetheringManager;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda11;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheringManager$$ExternalSyntheticLambda1;-><init>(Landroid/net/ITetheringEventCallback;Ljava/lang/String;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda1;->f$0:Landroid/net/ITetheringEventCallback;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda1;->f$1:Ljava/lang/String;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda1;->onConnectorAvailable(Landroid/net/ITetheringConnector;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda2;-><init>(Landroid/net/TetheringManager;ILandroid/os/ResultReceiver;ZLjava/lang/String;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda2;->f$0:Landroid/net/TetheringManager;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda2;->f$1:I,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda2;->f$2:Landroid/os/ResultReceiver;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda2;->f$3:Z,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda2;->f$4:Ljava/lang/String;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda2;->onConnectorAvailable(Landroid/net/ITetheringConnector;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda3;-><init>(Landroid/net/TetheringManager;ILjava/lang/String;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda3;->f$0:Landroid/net/TetheringManager;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda3;->f$1:I,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda3;->f$2:Ljava/lang/String;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda3;->onConnectorAvailable(Landroid/net/ITetheringConnector;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda4;-><init>(Landroid/net/TetheringManager;Landroid/net/TetheringManager$TetheringRequest;Ljava/lang/String;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda4;->f$0:Landroid/net/TetheringManager;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda4;->f$1:Landroid/net/TetheringManager$TetheringRequest;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda4;->f$2:Ljava/lang/String;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda4;->f$3:Landroid/net/IIntResultListener;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda4;->onConnectorAvailable(Landroid/net/ITetheringConnector;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda5;-><init>(Landroid/net/TetheringManager;Ljava/lang/String;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda5;->f$0:Landroid/net/TetheringManager;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda5;->f$1:Ljava/lang/String;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda5;->onConnectorAvailable(Landroid/net/ITetheringConnector;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda6;-><init>(Landroid/net/TetheringManager;Ljava/lang/String;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda6;->f$0:Landroid/net/TetheringManager;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda6;->f$1:Ljava/lang/String;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda6;->onConnectorAvailable(Landroid/net/ITetheringConnector;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda7;-><init>(Landroid/net/TetheringManager;Ljava/lang/String;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda7;->f$0:Landroid/net/TetheringManager;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda7;->f$1:Ljava/lang/String;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda7;->runRequest(Landroid/net/ITetheringConnector;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda8;-><init>(Landroid/net/TetheringManager;Ljava/lang/String;Ljava/lang/String;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda8;->f$0:Landroid/net/TetheringManager;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda8;->f$1:Ljava/lang/String;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda8;->f$2:Ljava/lang/String;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda8;->runRequest(Landroid/net/ITetheringConnector;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda9;-><init>(Landroid/net/TetheringManager;Ljava/lang/String;Ljava/lang/String;)V,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda9;->f$0:Landroid/net/TetheringManager;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda9;->f$1:Ljava/lang/String;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda9;->f$2:Ljava/lang/String;,blocked
Landroid/net/TetheringManager$$ExternalSyntheticLambda9;->runRequest(Landroid/net/ITetheringConnector;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/TetheringManager$1$$ExternalSyntheticLambda0;-><init>(ILandroid/net/TetheringManager$StartTetheringCallback;)V,blocked
Landroid/net/TetheringManager$1$$ExternalSyntheticLambda0;->f$0:I,blocked
Landroid/net/TetheringManager$1$$ExternalSyntheticLambda0;->f$1:Landroid/net/TetheringManager$StartTetheringCallback;,blocked
Landroid/net/TetheringManager$1$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheringManager$1;-><init>(Landroid/net/TetheringManager;Ljava/util/concurrent/Executor;Landroid/net/TetheringManager$StartTetheringCallback;)V,blocked
Landroid/net/TetheringManager$1;->lambda$onResult$0(ILandroid/net/TetheringManager$StartTetheringCallback;)V,blocked
Landroid/net/TetheringManager$1;->onResult(I)V,blocked
Landroid/net/TetheringManager$1;->this$0:Landroid/net/TetheringManager;,blocked
Landroid/net/TetheringManager$1;->val$callback:Landroid/net/TetheringManager$StartTetheringCallback;,blocked
Landroid/net/TetheringManager$1;->val$executor:Ljava/util/concurrent/Executor;,blocked
Landroid/net/TetheringManager$2;-><init>(Landroid/net/TetheringManager;)V,blocked
Landroid/net/TetheringManager$2;->onResult(I)V,blocked
Landroid/net/TetheringManager$2;->this$0:Landroid/net/TetheringManager;,blocked
Landroid/net/TetheringManager$3$$ExternalSyntheticLambda0;-><init>(Landroid/net/TetheringManager$OnTetheringEntitlementResultListener;I)V,blocked
Landroid/net/TetheringManager$3$$ExternalSyntheticLambda0;->f$0:Landroid/net/TetheringManager$OnTetheringEntitlementResultListener;,blocked
Landroid/net/TetheringManager$3$$ExternalSyntheticLambda0;->f$1:I,blocked
Landroid/net/TetheringManager$3$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheringManager$3;-><init>(Landroid/net/TetheringManager;Landroid/os/Handler;Ljava/util/concurrent/Executor;Landroid/net/TetheringManager$OnTetheringEntitlementResultListener;)V,blocked
Landroid/net/TetheringManager$3;->lambda$onReceiveResult$0(Landroid/net/TetheringManager$OnTetheringEntitlementResultListener;I)V,blocked
Landroid/net/TetheringManager$3;->onReceiveResult(ILandroid/os/Bundle;)V,public-api,sdk,system-api,test-api
Landroid/net/TetheringManager$3;->this$0:Landroid/net/TetheringManager;,blocked
Landroid/net/TetheringManager$3;->val$executor:Ljava/util/concurrent/Executor;,blocked
Landroid/net/TetheringManager$3;->val$listener:Landroid/net/TetheringManager$OnTetheringEntitlementResultListener;,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda0;-><init>(Landroid/net/TetheringManager$4;I)V,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda0;->f$0:Landroid/net/TetheringManager$4;,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda0;->f$1:I,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda1;-><init>(Landroid/net/TetheringManager$4;Landroid/net/TetherStatesParcel;)V,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda1;->f$0:Landroid/net/TetheringManager$4;,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda1;->f$1:Landroid/net/TetherStatesParcel;,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda1;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda2;-><init>(Landroid/net/TetheringManager$4;Landroid/net/TetheringConfigurationParcel;)V,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda2;->f$0:Landroid/net/TetheringManager$4;,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda2;->f$1:Landroid/net/TetheringConfigurationParcel;,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda2;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda3;-><init>(Landroid/net/TetheringManager$4;Landroid/net/TetheringManager$TetheringEventCallback;Landroid/net/TetheringCallbackStartedParcel;)V,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda3;->f$0:Landroid/net/TetheringManager$4;,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda3;->f$1:Landroid/net/TetheringManager$TetheringEventCallback;,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda3;->f$2:Landroid/net/TetheringCallbackStartedParcel;,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda3;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda4;-><init>(Landroid/net/TetheringManager$TetheringEventCallback;I)V,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda4;->f$0:Landroid/net/TetheringManager$TetheringEventCallback;,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda4;->f$1:I,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda4;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda5;-><init>(Landroid/net/TetheringManager$TetheringEventCallback;Landroid/net/Network;)V,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda5;->f$0:Landroid/net/TetheringManager$TetheringEventCallback;,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda5;->f$1:Landroid/net/Network;,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda5;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda6;-><init>(Landroid/net/TetheringManager$TetheringEventCallback;Ljava/util/List;)V,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda6;->f$0:Landroid/net/TetheringManager$TetheringEventCallback;,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda6;->f$1:Ljava/util/List;,blocked
Landroid/net/TetheringManager$4$$ExternalSyntheticLambda6;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheringManager$4;-><init>(Landroid/net/TetheringManager;Ljava/util/concurrent/Executor;Landroid/net/TetheringManager$TetheringEventCallback;)V,blocked
Landroid/net/TetheringManager$4;->lambda$onCallbackStarted$1$TetheringManager$4(Landroid/net/TetheringManager$TetheringEventCallback;Landroid/net/TetheringCallbackStartedParcel;)V,blocked
Landroid/net/TetheringManager$4;->lambda$onCallbackStopped$2$TetheringManager$4(I)V,blocked
Landroid/net/TetheringManager$4;->lambda$onConfigurationChanged$3$TetheringManager$4(Landroid/net/TetheringConfigurationParcel;)V,blocked
Landroid/net/TetheringManager$4;->lambda$onOffloadStatusChanged$6(Landroid/net/TetheringManager$TetheringEventCallback;I)V,blocked
Landroid/net/TetheringManager$4;->lambda$onTetherClientsChanged$5(Landroid/net/TetheringManager$TetheringEventCallback;Ljava/util/List;)V,blocked
Landroid/net/TetheringManager$4;->lambda$onTetherStatesChanged$4$TetheringManager$4(Landroid/net/TetherStatesParcel;)V,blocked
Landroid/net/TetheringManager$4;->lambda$onUpstreamChanged$0(Landroid/net/TetheringManager$TetheringEventCallback;Landroid/net/Network;)V,blocked
Landroid/net/TetheringManager$4;->mErrorStates:Ljava/util/HashMap;,blocked
Landroid/net/TetheringManager$4;->mLastLocalOnlyInterfaces:[Landroid/net/TetheringInterface;,blocked
Landroid/net/TetheringManager$4;->mLastTetherableInterfaces:[Landroid/net/TetheringInterface;,blocked
Landroid/net/TetheringManager$4;->mLastTetheredInterfaces:[Landroid/net/TetheringInterface;,blocked
Landroid/net/TetheringManager$4;->maybeSendLocalOnlyIfacesChangedCallback(Landroid/net/TetherStatesParcel;)V,blocked
Landroid/net/TetheringManager$4;->maybeSendTetherableIfacesChangedCallback(Landroid/net/TetherStatesParcel;)V,blocked
Landroid/net/TetheringManager$4;->maybeSendTetheredIfacesChangedCallback(Landroid/net/TetherStatesParcel;)V,blocked
Landroid/net/TetheringManager$4;->onCallbackStarted(Landroid/net/TetheringCallbackStartedParcel;)V,blocked
Landroid/net/TetheringManager$4;->onCallbackStopped(I)V,blocked
Landroid/net/TetheringManager$4;->onConfigurationChanged(Landroid/net/TetheringConfigurationParcel;)V,blocked
Landroid/net/TetheringManager$4;->onOffloadStatusChanged(I)V,blocked
Landroid/net/TetheringManager$4;->onTetherClientsChanged(Ljava/util/List;)V,blocked
Landroid/net/TetheringManager$4;->onTetherStatesChanged(Landroid/net/TetherStatesParcel;)V,blocked
Landroid/net/TetheringManager$4;->onUpstreamChanged(Landroid/net/Network;)V,blocked
Landroid/net/TetheringManager$4;->sendErrorCallbacks(Landroid/net/TetherStatesParcel;)V,blocked
Landroid/net/TetheringManager$4;->sendRegexpsChanged(Landroid/net/TetheringConfigurationParcel;)V,blocked
Landroid/net/TetheringManager$4;->this$0:Landroid/net/TetheringManager;,blocked
Landroid/net/TetheringManager$4;->val$callback:Landroid/net/TetheringManager$TetheringEventCallback;,blocked
Landroid/net/TetheringManager$4;->val$executor:Ljava/util/concurrent/Executor;,blocked
Landroid/net/TetheringManager$5;-><init>(Landroid/net/TetheringManager;)V,blocked
Landroid/net/TetheringManager$5;->onResult(I)V,blocked
Landroid/net/TetheringManager$5;->this$0:Landroid/net/TetheringManager;,blocked
Landroid/net/TetheringManager$ConnectorConsumer;->onConnectorAvailable(Landroid/net/ITetheringConnector;)V,blocked
Landroid/net/TetheringManager$OnTetheringEntitlementResultListener;->onTetheringEntitlementResult(I)V,sdk,system-api,test-api
Landroid/net/TetheringManager$RequestDispatcher$$ExternalSyntheticLambda0;-><init>(Landroid/net/TetheringManager$RequestDispatcher;Landroid/net/TetheringManager$RequestHelper;)V,blocked
Landroid/net/TetheringManager$RequestDispatcher$$ExternalSyntheticLambda0;->f$0:Landroid/net/TetheringManager$RequestDispatcher;,blocked
Landroid/net/TetheringManager$RequestDispatcher$$ExternalSyntheticLambda0;->f$1:Landroid/net/TetheringManager$RequestHelper;,blocked
Landroid/net/TetheringManager$RequestDispatcher$$ExternalSyntheticLambda0;->onConnectorAvailable(Landroid/net/ITetheringConnector;)V,blocked
Landroid/net/TetheringManager$RequestDispatcher$1;-><init>(Landroid/net/TetheringManager$RequestDispatcher;)V,blocked
Landroid/net/TetheringManager$RequestDispatcher$1;->onResult(I)V,blocked
Landroid/net/TetheringManager$RequestDispatcher$1;->this$1:Landroid/net/TetheringManager$RequestDispatcher;,blocked
Landroid/net/TetheringManager$RequestDispatcher;-><init>(Landroid/net/TetheringManager;)V,blocked
Landroid/net/TetheringManager$RequestDispatcher;->access$100(Landroid/net/TetheringManager$RequestDispatcher;)Landroid/os/ConditionVariable;,blocked
Landroid/net/TetheringManager$RequestDispatcher;->lambda$waitForResult$0$TetheringManager$RequestDispatcher(Landroid/net/TetheringManager$RequestHelper;Landroid/net/ITetheringConnector;)V,blocked
Landroid/net/TetheringManager$RequestDispatcher;->mListener:Landroid/net/IIntResultListener;,blocked
Landroid/net/TetheringManager$RequestDispatcher;->mRemoteResult:I,blocked
Landroid/net/TetheringManager$RequestDispatcher;->mWaiting:Landroid/os/ConditionVariable;,blocked
Landroid/net/TetheringManager$RequestDispatcher;->this$0:Landroid/net/TetheringManager;,blocked
Landroid/net/TetheringManager$RequestDispatcher;->waitForResult(Landroid/net/TetheringManager$RequestHelper;)I,blocked
Landroid/net/TetheringManager$RequestHelper;->runRequest(Landroid/net/ITetheringConnector;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/TetheringManager$StartTetheringCallback;->onTetheringFailed(I)V,sdk,system-api,test-api
Landroid/net/TetheringManager$StartTetheringCallback;->onTetheringStarted()V,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringCallbackInternal;-><init>(Landroid/net/TetheringManager;)V,blocked
Landroid/net/TetheringManager$TetheringCallbackInternal;-><init>(Landroid/net/TetheringManager;Landroid/net/TetheringManager$1;)V,blocked
Landroid/net/TetheringManager$TetheringCallbackInternal;->mError:I,blocked
Landroid/net/TetheringManager$TetheringCallbackInternal;->mWaitForCallback:Landroid/os/ConditionVariable;,blocked
Landroid/net/TetheringManager$TetheringCallbackInternal;->onCallbackStarted(Landroid/net/TetheringCallbackStartedParcel;)V,blocked
Landroid/net/TetheringManager$TetheringCallbackInternal;->onCallbackStopped(I)V,blocked
Landroid/net/TetheringManager$TetheringCallbackInternal;->onConfigurationChanged(Landroid/net/TetheringConfigurationParcel;)V,blocked
Landroid/net/TetheringManager$TetheringCallbackInternal;->onOffloadStatusChanged(I)V,blocked
Landroid/net/TetheringManager$TetheringCallbackInternal;->onTetherClientsChanged(Ljava/util/List;)V,blocked
Landroid/net/TetheringManager$TetheringCallbackInternal;->onTetherStatesChanged(Landroid/net/TetherStatesParcel;)V,blocked
Landroid/net/TetheringManager$TetheringCallbackInternal;->onUpstreamChanged(Landroid/net/Network;)V,blocked
Landroid/net/TetheringManager$TetheringCallbackInternal;->this$0:Landroid/net/TetheringManager;,blocked
Landroid/net/TetheringManager$TetheringCallbackInternal;->waitForStarted()V,blocked
Landroid/net/TetheringManager$TetheringEventCallback;->onClientsChanged(Ljava/util/Collection;)V,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringEventCallback;->onError(Landroid/net/TetheringInterface;I)V,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringEventCallback;->onError(Ljava/lang/String;I)V,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringEventCallback;->onLocalOnlyInterfacesChanged(Ljava/util/List;)V,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringEventCallback;->onLocalOnlyInterfacesChanged(Ljava/util/Set;)V,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringEventCallback;->onOffloadStatusChanged(I)V,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringEventCallback;->onTetherableInterfaceRegexpsChanged(Landroid/net/TetheringManager$TetheringInterfaceRegexps;)V,blocked
Landroid/net/TetheringManager$TetheringEventCallback;->onTetherableInterfacesChanged(Ljava/util/List;)V,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringEventCallback;->onTetherableInterfacesChanged(Ljava/util/Set;)V,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringEventCallback;->onTetheredInterfacesChanged(Ljava/util/List;)V,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringEventCallback;->onTetheredInterfacesChanged(Ljava/util/Set;)V,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringEventCallback;->onTetheringSupported(Z)V,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringEventCallback;->onUpstreamChanged(Landroid/net/Network;)V,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringInterfaceRegexps;-><init>([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V,blocked
Landroid/net/TetheringManager$TetheringInterfaceRegexps;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringInterfaceRegexps;->getTetherableBluetoothRegexs()Ljava/util/List;,blocked
Landroid/net/TetheringManager$TetheringInterfaceRegexps;->getTetherableUsbRegexs()Ljava/util/List;,blocked
Landroid/net/TetheringManager$TetheringInterfaceRegexps;->getTetherableWifiRegexs()Ljava/util/List;,blocked
Landroid/net/TetheringManager$TetheringInterfaceRegexps;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringInterfaceRegexps;->mTetherableBluetoothRegexs:[Ljava/lang/String;,blocked
Landroid/net/TetheringManager$TetheringInterfaceRegexps;->mTetherableUsbRegexs:[Ljava/lang/String;,blocked
Landroid/net/TetheringManager$TetheringInterfaceRegexps;->mTetherableWifiRegexs:[Ljava/lang/String;,blocked
Landroid/net/TetheringManager$TetheringRequest$Builder;-><init>(I)V,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringRequest$Builder;->build()Landroid/net/TetheringManager$TetheringRequest;,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringRequest$Builder;->mBuilderParcel:Landroid/net/TetheringRequestParcel;,blocked
Landroid/net/TetheringManager$TetheringRequest$Builder;->setConnectivityScope(I)Landroid/net/TetheringManager$TetheringRequest$Builder;,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringRequest$Builder;->setExemptFromEntitlementCheck(Z)Landroid/net/TetheringManager$TetheringRequest$Builder;,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringRequest$Builder;->setShouldShowEntitlementUi(Z)Landroid/net/TetheringManager$TetheringRequest$Builder;,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringRequest$Builder;->setStaticIpv4Addresses(Landroid/net/LinkAddress;Landroid/net/LinkAddress;)Landroid/net/TetheringManager$TetheringRequest$Builder;,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringRequest;-><init>(Landroid/net/TetheringRequestParcel;)V,blocked
Landroid/net/TetheringManager$TetheringRequest;-><init>(Landroid/net/TetheringRequestParcel;Landroid/net/TetheringManager$1;)V,blocked
Landroid/net/TetheringManager$TetheringRequest;->access$600(II)Z,blocked
Landroid/net/TetheringManager$TetheringRequest;->checkConnectivityScope(II)Z,blocked
Landroid/net/TetheringManager$TetheringRequest;->checkStaticAddressConfiguration(Landroid/net/LinkAddress;Landroid/net/LinkAddress;)Z,blocked
Landroid/net/TetheringManager$TetheringRequest;->getClientStaticIpv4Address()Landroid/net/LinkAddress;,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringRequest;->getConnectivityScope()I,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringRequest;->getDefaultConnectivityScope(I)I,blocked
Landroid/net/TetheringManager$TetheringRequest;->getLocalIpv4Address()Landroid/net/LinkAddress;,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringRequest;->getParcel()Landroid/net/TetheringRequestParcel;,blocked
Landroid/net/TetheringManager$TetheringRequest;->getShouldShowEntitlementUi()Z,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringRequest;->getTetheringType()I,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringRequest;->isExemptFromEntitlementCheck()Z,sdk,system-api,test-api
Landroid/net/TetheringManager$TetheringRequest;->mRequestParcel:Landroid/net/TetheringRequestParcel;,blocked
Landroid/net/TetheringManager$TetheringRequest;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/TetheringManager;-><clinit>()V,blocked
Landroid/net/TetheringManager;-><init>(Landroid/content/Context;Ljava/util/function/Supplier;)V,blocked
Landroid/net/TetheringManager;->ACTION_TETHER_STATE_CHANGED:Ljava/lang/String;,sdk,system-api,test-api
Landroid/net/TetheringManager;->CONNECTIVITY_SCOPE_GLOBAL:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->CONNECTIVITY_SCOPE_LOCAL:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->CONNECTOR_POLL_INTERVAL_MILLIS:J,blocked
Landroid/net/TetheringManager;->DEFAULT_TIMEOUT_MS:I,blocked
Landroid/net/TetheringManager;->EXTRA_ACTIVE_LOCAL_ONLY:Ljava/lang/String;,sdk,system-api,test-api
Landroid/net/TetheringManager;->EXTRA_ACTIVE_TETHER:Ljava/lang/String;,sdk,system-api,test-api
Landroid/net/TetheringManager;->EXTRA_AVAILABLE_TETHER:Ljava/lang/String;,sdk,system-api,test-api
Landroid/net/TetheringManager;->EXTRA_ERRORED_TETHER:Ljava/lang/String;,sdk,system-api,test-api
Landroid/net/TetheringManager;->TAG:Ljava/lang/String;,blocked
Landroid/net/TetheringManager;->TETHERING_BLUETOOTH:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHERING_ETHERNET:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHERING_INVALID:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHERING_NCM:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHERING_USB:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHERING_WIFI:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHERING_WIFI_P2P:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHERING_WIGIG:I,blocked
Landroid/net/TetheringManager;->TETHER_ERROR_DHCPSERVER_ERROR:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHER_ERROR_DISABLE_FORWARDING_ERROR:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHER_ERROR_ENABLE_FORWARDING_ERROR:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHER_ERROR_ENTITLEMENT_UNKNOWN:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHER_ERROR_IFACE_CFG_ERROR:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHER_ERROR_INTERNAL_ERROR:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHER_ERROR_NO_ACCESS_TETHERING_PERMISSION:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHER_ERROR_NO_CHANGE_TETHERING_PERMISSION:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHER_ERROR_NO_ERROR:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHER_ERROR_PROVISIONING_FAILED:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHER_ERROR_SERVICE_UNAVAIL:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHER_ERROR_TETHER_IFACE_ERROR:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHER_ERROR_UNAVAIL_IFACE:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHER_ERROR_UNKNOWN_IFACE:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHER_ERROR_UNKNOWN_TYPE:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHER_ERROR_UNSUPPORTED:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHER_ERROR_UNTETHER_IFACE_ERROR:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHER_HARDWARE_OFFLOAD_FAILED:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHER_HARDWARE_OFFLOAD_STARTED:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->TETHER_HARDWARE_OFFLOAD_STOPPED:I,sdk,system-api,test-api
Landroid/net/TetheringManager;->access$200(Landroid/net/TetheringManager;Landroid/net/TetheringManager$ConnectorConsumer;)V,blocked
Landroid/net/TetheringManager;->access$300(Landroid/net/TetheringManager;I)V,blocked
Landroid/net/TetheringManager;->access$402(Landroid/net/TetheringManager;Landroid/net/TetheringConfigurationParcel;)Landroid/net/TetheringConfigurationParcel;,blocked
Landroid/net/TetheringManager;->access$502(Landroid/net/TetheringManager;Landroid/net/TetherStatesParcel;)Landroid/net/TetherStatesParcel;,blocked
Landroid/net/TetheringManager;->getAttributionTag()Ljava/lang/String;,blocked
Landroid/net/TetheringManager;->getConnector(Landroid/net/TetheringManager$ConnectorConsumer;)V,blocked
Landroid/net/TetheringManager;->getLastTetherError(Ljava/lang/String;)I,blocked
Landroid/net/TetheringManager;->getTetherableBluetoothRegexs()[Ljava/lang/String;,blocked
Landroid/net/TetheringManager;->getTetherableIfaces()[Ljava/lang/String;,blocked
Landroid/net/TetheringManager;->getTetherableUsbRegexs()[Ljava/lang/String;,blocked
Landroid/net/TetheringManager;->getTetherableWifiRegexs()[Ljava/lang/String;,blocked
Landroid/net/TetheringManager;->getTetheredDhcpRanges()[Ljava/lang/String;,blocked
Landroid/net/TetheringManager;->getTetheredIfaces()[Ljava/lang/String;,blocked
Landroid/net/TetheringManager;->getTetheringErroredIfaces()[Ljava/lang/String;,blocked
Landroid/net/TetheringManager;->isTetheringSupported()Z,blocked
Landroid/net/TetheringManager;->isTetheringSupported(Ljava/lang/String;)Z,blocked
Landroid/net/TetheringManager;->lambda$isTetheringSupported$10$TetheringManager(Ljava/lang/String;Landroid/net/ITetheringConnector;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/TetheringManager;->lambda$new$0$TetheringManager(Ljava/lang/String;Landroid/net/ITetheringConnector;)V,blocked
Landroid/net/TetheringManager;->lambda$registerTetheringEventCallback$8(Landroid/net/ITetheringEventCallback;Ljava/lang/String;Landroid/net/ITetheringConnector;)V,blocked
Landroid/net/TetheringManager;->lambda$requestLatestTetheringEntitlementResult$7$TetheringManager(ILandroid/os/ResultReceiver;ZLjava/lang/String;Landroid/net/ITetheringConnector;)V,blocked
Landroid/net/TetheringManager;->lambda$setUsbTethering$4$TetheringManager(ZLjava/lang/String;Landroid/net/ITetheringConnector;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/TetheringManager;->lambda$startPollingForConnector$1$TetheringManager()V,blocked
Landroid/net/TetheringManager;->lambda$startTethering$5$TetheringManager(Landroid/net/TetheringManager$TetheringRequest;Ljava/lang/String;Landroid/net/IIntResultListener;Landroid/net/ITetheringConnector;)V,blocked
Landroid/net/TetheringManager;->lambda$stopAllTethering$11$TetheringManager(Ljava/lang/String;Landroid/net/ITetheringConnector;)V,blocked
Landroid/net/TetheringManager;->lambda$stopTethering$6$TetheringManager(ILjava/lang/String;Landroid/net/ITetheringConnector;)V,blocked
Landroid/net/TetheringManager;->lambda$tether$2$TetheringManager(Ljava/lang/String;Ljava/lang/String;Landroid/net/ITetheringConnector;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/TetheringManager;->lambda$unregisterTetheringEventCallback$9(Landroid/net/ITetheringEventCallback;Ljava/lang/String;Landroid/net/ITetheringConnector;)V,blocked
Landroid/net/TetheringManager;->lambda$untether$3$TetheringManager(Ljava/lang/String;Ljava/lang/String;Landroid/net/ITetheringConnector;Landroid/net/IIntResultListener;)V,blocked
Landroid/net/TetheringManager;->mCallback:Landroid/net/TetheringManager$TetheringCallbackInternal;,blocked
Landroid/net/TetheringManager;->mConnector:Landroid/net/ITetheringConnector;,blocked
Landroid/net/TetheringManager;->mConnectorSupplier:Ljava/util/function/Supplier;,blocked
Landroid/net/TetheringManager;->mConnectorWaitQueue:Ljava/util/List;,blocked
Landroid/net/TetheringManager;->mContext:Landroid/content/Context;,blocked
Landroid/net/TetheringManager;->mTetherStatesParcel:Landroid/net/TetherStatesParcel;,blocked
Landroid/net/TetheringManager;->mTetheringConfiguration:Landroid/net/TetheringConfigurationParcel;,blocked
Landroid/net/TetheringManager;->mTetheringEventCallbacks:Landroid/util/ArrayMap;,blocked
Landroid/net/TetheringManager;->onTetheringConnected(Landroid/net/ITetheringConnector;)V,blocked
Landroid/net/TetheringManager;->registerTetheringEventCallback(Ljava/util/concurrent/Executor;Landroid/net/TetheringManager$TetheringEventCallback;)V,sdk,system-api,test-api
Landroid/net/TetheringManager;->requestLatestTetheringEntitlementResult(ILandroid/os/ResultReceiver;Z)V,blocked
Landroid/net/TetheringManager;->requestLatestTetheringEntitlementResult(IZLjava/util/concurrent/Executor;Landroid/net/TetheringManager$OnTetheringEntitlementResultListener;)V,sdk,system-api,test-api
Landroid/net/TetheringManager;->setUsbTethering(Z)I,blocked
Landroid/net/TetheringManager;->startPollingForConnector()V,blocked
Landroid/net/TetheringManager;->startTethering(ILjava/util/concurrent/Executor;Landroid/net/TetheringManager$StartTetheringCallback;)V,blocked
Landroid/net/TetheringManager;->startTethering(Landroid/net/TetheringManager$TetheringRequest;Ljava/util/concurrent/Executor;Landroid/net/TetheringManager$StartTetheringCallback;)V,sdk,system-api,test-api
Landroid/net/TetheringManager;->stopAllTethering()V,sdk,system-api,test-api
Landroid/net/TetheringManager;->stopTethering(I)V,sdk,system-api,test-api
Landroid/net/TetheringManager;->tether(Ljava/lang/String;)I,blocked
Landroid/net/TetheringManager;->throwIfPermissionFailure(I)V,blocked
Landroid/net/TetheringManager;->toIfaces(Ljava/util/Collection;)Ljava/util/ArrayList;,blocked
Landroid/net/TetheringManager;->toIfaces([Landroid/net/TetheringInterface;)[Ljava/lang/String;,blocked
Landroid/net/TetheringManager;->unregisterTetheringEventCallback(Landroid/net/TetheringManager$TetheringEventCallback;)V,sdk,system-api,test-api
Landroid/net/TetheringManager;->untether(Ljava/lang/String;)I,blocked
Landroid/net/TetheringRequestParcel$1;-><init>()V,blocked
Landroid/net/TetheringRequestParcel$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/TetheringRequestParcel;,blocked
Landroid/net/TetheringRequestParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TetheringRequestParcel$1;->newArray(I)[Landroid/net/TetheringRequestParcel;,blocked
Landroid/net/TetheringRequestParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/TetheringRequestParcel;-><clinit>()V,blocked
Landroid/net/TetheringRequestParcel;-><init>()V,blocked
Landroid/net/TetheringRequestParcel;->CREATOR:Landroid/os/Parcelable$Creator;,blocked
Landroid/net/TetheringRequestParcel;->connectivityScope:I,blocked
Landroid/net/TetheringRequestParcel;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/TetheringRequestParcel;->describeContents(Ljava/lang/Object;)I,blocked
Landroid/net/TetheringRequestParcel;->exemptFromEntitlementCheck:Z,blocked
Landroid/net/TetheringRequestParcel;->localIPv4Address:Landroid/net/LinkAddress;,blocked
Landroid/net/TetheringRequestParcel;->readFromParcel(Landroid/os/Parcel;)V,blocked
Landroid/net/TetheringRequestParcel;->showProvisioningUi:Z,blocked
Landroid/net/TetheringRequestParcel;->staticClientAddress:Landroid/net/LinkAddress;,blocked
Landroid/net/TetheringRequestParcel;->tetheringType:I,blocked
Landroid/net/TetheringRequestParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/TransportInfo;->getApplicableRedactions()J,blocked
Landroid/net/TransportInfo;->makeCopy(J)Landroid/net/TransportInfo;,blocked
Landroid/net/UidRange$1;-><init>()V,blocked
Landroid/net/UidRange$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/UidRange;,blocked
Landroid/net/UidRange$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/UidRange$1;->newArray(I)[Landroid/net/UidRange;,blocked
Landroid/net/UidRange$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/UidRange;-><clinit>()V,blocked
Landroid/net/UidRange;-><init>(II)V,lo-prio,max-target-o
Landroid/net/UidRange;->CREATOR:Landroid/os/Parcelable$Creator;,lo-prio,max-target-o
Landroid/net/UidRange;->contains(I)Z,lo-prio,max-target-o
Landroid/net/UidRange;->containsRange(Landroid/net/UidRange;)Z,lo-prio,max-target-o
Landroid/net/UidRange;->containsUid(Ljava/util/Collection;I)Z,blocked
Landroid/net/UidRange;->count()I,lo-prio,max-target-o
Landroid/net/UidRange;->createForUser(Landroid/os/UserHandle;)Landroid/net/UidRange;,blocked
Landroid/net/UidRange;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/UidRange;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/UidRange;->fromIntRanges(Ljava/util/Set;)Landroid/util/ArraySet;,blocked
Landroid/net/UidRange;->getEndUser()I,blocked
Landroid/net/UidRange;->getStartUser()I,lo-prio,max-target-o
Landroid/net/UidRange;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/UidRange;->start:I,lo-prio,max-target-o
Landroid/net/UidRange;->stop:I,lo-prio,max-target-o
Landroid/net/UidRange;->toIntRanges(Ljava/util/Set;)Landroid/util/ArraySet;,blocked
Landroid/net/UidRange;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/UidRange;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/VpnTransportInfo$1;-><init>()V,blocked
Landroid/net/VpnTransportInfo$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/VpnTransportInfo;,blocked
Landroid/net/VpnTransportInfo$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/VpnTransportInfo$1;->newArray(I)[Landroid/net/VpnTransportInfo;,blocked
Landroid/net/VpnTransportInfo$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/VpnTransportInfo;-><clinit>()V,blocked
Landroid/net/VpnTransportInfo;-><init>(ILjava/lang/String;)V,blocked
Landroid/net/VpnTransportInfo;->CREATOR:Landroid/os/Parcelable$Creator;,blocked
Landroid/net/VpnTransportInfo;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/VpnTransportInfo;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/VpnTransportInfo;->getApplicableRedactions()J,blocked
Landroid/net/VpnTransportInfo;->getSessionId()Ljava/lang/String;,blocked
Landroid/net/VpnTransportInfo;->getType()I,blocked
Landroid/net/VpnTransportInfo;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/VpnTransportInfo;->mSessionId:Ljava/lang/String;,blocked
Landroid/net/VpnTransportInfo;->mType:I,blocked
Landroid/net/VpnTransportInfo;->makeCopy(J)Landroid/net/TransportInfo;,blocked
Landroid/net/VpnTransportInfo;->makeCopy(J)Landroid/net/VpnTransportInfo;,blocked
Landroid/net/VpnTransportInfo;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/VpnTransportInfo;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/apf/ApfCapabilities$1;-><init>()V,blocked
Landroid/net/apf/ApfCapabilities$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/apf/ApfCapabilities;,blocked
Landroid/net/apf/ApfCapabilities$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/apf/ApfCapabilities$1;->newArray(I)[Landroid/net/apf/ApfCapabilities;,blocked
Landroid/net/apf/ApfCapabilities$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/apf/ApfCapabilities;-><clinit>()V,blocked
Landroid/net/apf/ApfCapabilities;-><init>(III)V,sdk,system-api,test-api
Landroid/net/apf/ApfCapabilities;-><init>(Landroid/os/Parcel;)V,blocked
Landroid/net/apf/ApfCapabilities;-><init>(Landroid/os/Parcel;Landroid/net/apf/ApfCapabilities$1;)V,blocked
Landroid/net/apf/ApfCapabilities;->CREATOR:Landroid/os/Parcelable$Creator;,sdk,system-api,test-api
Landroid/net/apf/ApfCapabilities;->apfPacketFormat:I,sdk,system-api,test-api
Landroid/net/apf/ApfCapabilities;->apfVersionSupported:I,sdk,system-api,test-api
Landroid/net/apf/ApfCapabilities;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/apf/ApfCapabilities;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/apf/ApfCapabilities;->getApfDrop8023Frames()Z,sdk,system-api,test-api
Landroid/net/apf/ApfCapabilities;->getApfEtherTypeBlackList()[I,sdk,system-api,test-api
Landroid/net/apf/ApfCapabilities;->getResources(Landroid/content/Context;)Landroid/net/ConnectivityResources;,blocked
Landroid/net/apf/ApfCapabilities;->hasDataAccess()Z,sdk,system-api,test-api
Landroid/net/apf/ApfCapabilities;->maximumApfProgramSize:I,sdk,system-api,test-api
Landroid/net/apf/ApfCapabilities;->sResources:Landroid/net/ConnectivityResources;,blocked
Landroid/net/apf/ApfCapabilities;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/apf/ApfCapabilities;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/connectivity/framework/util/CollectionUtils;-><init>()V,blocked
Landroid/net/connectivity/framework/util/CollectionUtils;->all(Ljava/util/Collection;Ljava/util/function/Predicate;)Z,blocked
Landroid/net/connectivity/framework/util/CollectionUtils;->any(Landroid/util/SparseArray;Ljava/util/function/Predicate;)Z,blocked
Landroid/net/connectivity/framework/util/CollectionUtils;->any(Ljava/util/Collection;Ljava/util/function/Predicate;)Z,blocked
Landroid/net/connectivity/framework/util/CollectionUtils;->contains([II)Z,blocked
Landroid/net/connectivity/framework/util/CollectionUtils;->contains([Ljava/lang/Object;Ljava/lang/Object;)Z,blocked
Landroid/net/connectivity/framework/util/CollectionUtils;->filter(Ljava/util/Collection;Ljava/util/function/Predicate;)Ljava/util/ArrayList;,blocked
Landroid/net/connectivity/framework/util/CollectionUtils;->indexOf(Ljava/util/Collection;Ljava/util/function/Predicate;)I,blocked
Landroid/net/connectivity/framework/util/CollectionUtils;->indexOf([Ljava/lang/Object;Ljava/lang/Object;)I,blocked
Landroid/net/connectivity/framework/util/CollectionUtils;->isEmpty(Ljava/util/Collection;)Z,blocked
Landroid/net/connectivity/framework/util/CollectionUtils;->isEmpty([Ljava/lang/Object;)Z,blocked
Landroid/net/connectivity/framework/util/CollectionUtils;->toIntArray(Ljava/util/Collection;)[I,blocked
Landroid/net/connectivity/framework/util/CollectionUtils;->toLongArray(Ljava/util/Collection;)[J,blocked
Landroid/net/connectivity/framework/util/ConnectivitySettingsUtils;-><init>()V,blocked
Landroid/net/connectivity/framework/util/ConnectivitySettingsUtils;->PRIVATE_DNS_DEFAULT_MODE:Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/ConnectivitySettingsUtils;->PRIVATE_DNS_MODE:Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/ConnectivitySettingsUtils;->PRIVATE_DNS_MODE_OFF:I,blocked
Landroid/net/connectivity/framework/util/ConnectivitySettingsUtils;->PRIVATE_DNS_MODE_OFF_STRING:Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/ConnectivitySettingsUtils;->PRIVATE_DNS_MODE_OPPORTUNISTIC:I,blocked
Landroid/net/connectivity/framework/util/ConnectivitySettingsUtils;->PRIVATE_DNS_MODE_OPPORTUNISTIC_STRING:Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/ConnectivitySettingsUtils;->PRIVATE_DNS_MODE_PROVIDER_HOSTNAME:I,blocked
Landroid/net/connectivity/framework/util/ConnectivitySettingsUtils;->PRIVATE_DNS_MODE_PROVIDER_HOSTNAME_STRING:Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/ConnectivitySettingsUtils;->PRIVATE_DNS_SPECIFIER:Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/ConnectivitySettingsUtils;->getPrivateDnsHostname(Landroid/content/Context;)Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/ConnectivitySettingsUtils;->getPrivateDnsMode(Landroid/content/Context;)I,blocked
Landroid/net/connectivity/framework/util/ConnectivitySettingsUtils;->getPrivateDnsModeAsInt(Ljava/lang/String;)I,blocked
Landroid/net/connectivity/framework/util/ConnectivitySettingsUtils;->getPrivateDnsModeAsString(I)Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/ConnectivitySettingsUtils;->setPrivateDnsHostname(Landroid/content/Context;Ljava/lang/String;)V,blocked
Landroid/net/connectivity/framework/util/ConnectivitySettingsUtils;->setPrivateDnsMode(Landroid/content/Context;I)V,blocked
Landroid/net/connectivity/framework/util/ConnectivityUtils;-><init>()V,blocked
Landroid/net/connectivity/framework/util/ConnectivityUtils;->addressAndPortToString(Ljava/net/InetAddress;I)Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/ConnectivityUtils;->isIPv6ULA(Ljava/net/InetAddress;)Z,blocked
Landroid/net/connectivity/framework/util/ConnectivityUtils;->saturatedCast(J)I,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsHeader;-><init>(Landroid/net/connectivity/framework/util/DnsPacket;Ljava/nio/ByteBuffer;)V,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsHeader;->TAG:Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsHeader;->flags:I,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsHeader;->getRecordCount(I)I,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsHeader;->id:I,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsHeader;->mRecordCount:[I,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsHeader;->rcode:I,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsHeader;->this$0:Landroid/net/connectivity/framework/util/DnsPacket;,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsRecord;-><init>(Landroid/net/connectivity/framework/util/DnsPacket;ILjava/nio/ByteBuffer;)V,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsRecord;->MAXLABELCOUNT:I,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsRecord;->MAXLABELSIZE:I,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsRecord;->MAXNAMESIZE:I,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsRecord;->NAME_COMPRESSION:I,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsRecord;->NAME_NORMAL:I,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsRecord;->TAG:Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsRecord;->dName:Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsRecord;->getRR()[B,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsRecord;->labelToString([B)Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsRecord;->mByteFormat:Ljava/text/DecimalFormat;,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsRecord;->mPos:Ljava/text/FieldPosition;,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsRecord;->mRdata:[B,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsRecord;->nsClass:I,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsRecord;->nsType:I,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsRecord;->parseName(Ljava/nio/ByteBuffer;I)Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsRecord;->this$0:Landroid/net/connectivity/framework/util/DnsPacket;,blocked
Landroid/net/connectivity/framework/util/DnsPacket$DnsRecord;->ttl:J,blocked
Landroid/net/connectivity/framework/util/DnsPacket$ParseException;-><init>(Ljava/lang/String;)V,blocked
Landroid/net/connectivity/framework/util/DnsPacket$ParseException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V,blocked
Landroid/net/connectivity/framework/util/DnsPacket$ParseException;->reason:Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/DnsPacket;-><clinit>()V,blocked
Landroid/net/connectivity/framework/util/DnsPacket;-><init>([B)V,blocked
Landroid/net/connectivity/framework/util/DnsPacket;->ANSECTION:I,blocked
Landroid/net/connectivity/framework/util/DnsPacket;->ARSECTION:I,blocked
Landroid/net/connectivity/framework/util/DnsPacket;->NSSECTION:I,blocked
Landroid/net/connectivity/framework/util/DnsPacket;->NUM_SECTIONS:I,blocked
Landroid/net/connectivity/framework/util/DnsPacket;->QDSECTION:I,blocked
Landroid/net/connectivity/framework/util/DnsPacket;->TAG:Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/DnsPacket;->mHeader:Landroid/net/connectivity/framework/util/DnsPacket$DnsHeader;,blocked
Landroid/net/connectivity/framework/util/DnsPacket;->mRecords:[Ljava/util/List;,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord$1;-><init>()V,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/connectivity/framework/util/DnsSdTxtRecord;,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/connectivity/framework/util/DnsSdTxtRecord$1;->newArray(I)[Landroid/net/connectivity/framework/util/DnsSdTxtRecord;,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord$1;->newArray(I)[Ljava/lang/Object;,public-api,sdk,system-api,test-api
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;-><clinit>()V,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;-><init>()V,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;-><init>(Landroid/net/connectivity/framework/util/DnsSdTxtRecord;)V,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;-><init>([B)V,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->CREATOR:Landroid/os/Parcelable$Creator;,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->access$000(Landroid/net/connectivity/framework/util/DnsSdTxtRecord;)[B,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->contains(Ljava/lang/String;)Z,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->describeContents()I,public-api,sdk,system-api,test-api
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->get(Ljava/lang/String;)Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->getKey(I)Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->getRawData()[B,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->getValue(I)[B,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->getValue(Ljava/lang/String;)[B,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->getValueAsString(I)Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->insert([B[BI)V,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->keyCount()I,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->mData:[B,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->mSeparator:B,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->remove(Ljava/lang/String;)I,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->set(Ljava/lang/String;Ljava/lang/String;)V,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->size()I,blocked
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/connectivity/framework/util/DnsSdTxtRecord;->writeToParcel(Landroid/os/Parcel;I)V,public-api,sdk,system-api,test-api
Landroid/net/connectivity/framework/util/Inet4AddressUtils;-><init>()V,blocked
Landroid/net/connectivity/framework/util/Inet4AddressUtils;->getBroadcastAddress(Ljava/net/Inet4Address;I)Ljava/net/Inet4Address;,blocked
Landroid/net/connectivity/framework/util/Inet4AddressUtils;->getImplicitNetmask(Ljava/net/Inet4Address;)I,blocked
Landroid/net/connectivity/framework/util/Inet4AddressUtils;->getPrefixMaskAsInet4Address(I)Ljava/net/Inet4Address;,blocked
Landroid/net/connectivity/framework/util/Inet4AddressUtils;->inet4AddressToIntHTH(Ljava/net/Inet4Address;)I,blocked
Landroid/net/connectivity/framework/util/Inet4AddressUtils;->inet4AddressToIntHTL(Ljava/net/Inet4Address;)I,blocked
Landroid/net/connectivity/framework/util/Inet4AddressUtils;->intToInet4AddressHTH(I)Ljava/net/Inet4Address;,blocked
Landroid/net/connectivity/framework/util/Inet4AddressUtils;->intToInet4AddressHTL(I)Ljava/net/Inet4Address;,blocked
Landroid/net/connectivity/framework/util/Inet4AddressUtils;->netmaskToPrefixLength(Ljava/net/Inet4Address;)I,blocked
Landroid/net/connectivity/framework/util/Inet4AddressUtils;->prefixLengthToV4NetmaskIntHTH(I)I,blocked
Landroid/net/connectivity/framework/util/Inet4AddressUtils;->prefixLengthToV4NetmaskIntHTL(I)I,blocked
Landroid/net/connectivity/framework/util/Inet4AddressUtils;->trimAddressZeros(Ljava/lang/String;)Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/InetAddressUtils;-><init>()V,blocked
Landroid/net/connectivity/framework/util/InetAddressUtils;->INET6_ADDR_LENGTH:I,blocked
Landroid/net/connectivity/framework/util/InetAddressUtils;->parcelInetAddress(Landroid/os/Parcel;Ljava/net/InetAddress;I)V,blocked
Landroid/net/connectivity/framework/util/InetAddressUtils;->unparcelInetAddress(Landroid/os/Parcel;)Ljava/net/InetAddress;,blocked
Landroid/net/connectivity/framework/util/IpRange;-><init>(Landroid/net/IpPrefix;)V,blocked
Landroid/net/connectivity/framework/util/IpRange;-><init>(Ljava/net/InetAddress;Ljava/net/InetAddress;)V,blocked
Landroid/net/connectivity/framework/util/IpRange;->SIGNUM_POSITIVE:I,blocked
Landroid/net/connectivity/framework/util/IpRange;->addrToBigInteger([B)Ljava/math/BigInteger;,blocked
Landroid/net/connectivity/framework/util/IpRange;->asIpPrefixes()Ljava/util/List;,blocked
Landroid/net/connectivity/framework/util/IpRange;->containsRange(Landroid/net/connectivity/framework/util/IpRange;)Z,blocked
Landroid/net/connectivity/framework/util/IpRange;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/connectivity/framework/util/IpRange;->getAsInetAddress([B)Ljava/net/InetAddress;,blocked
Landroid/net/connectivity/framework/util/IpRange;->getEndAddr()Ljava/net/InetAddress;,blocked
Landroid/net/connectivity/framework/util/IpRange;->getStartAddr()Ljava/net/InetAddress;,blocked
Landroid/net/connectivity/framework/util/IpRange;->getSubsetPrefixes(Landroid/net/IpPrefix;)Ljava/util/List;,blocked
Landroid/net/connectivity/framework/util/IpRange;->hashCode()I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/connectivity/framework/util/IpRange;->mEndAddr:[B,blocked
Landroid/net/connectivity/framework/util/IpRange;->mStartAddr:[B,blocked
Landroid/net/connectivity/framework/util/IpRange;->overlapsRange(Landroid/net/connectivity/framework/util/IpRange;)Z,blocked
Landroid/net/connectivity/framework/util/IpUtils;-><init>()V,blocked
Landroid/net/connectivity/framework/util/IpUtils;->addressAndPortToString(Ljava/net/InetAddress;I)Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/IpUtils;->checksum(Ljava/nio/ByteBuffer;III)I,blocked
Landroid/net/connectivity/framework/util/IpUtils;->icmpv6Checksum(Ljava/nio/ByteBuffer;III)S,blocked
Landroid/net/connectivity/framework/util/IpUtils;->intAbs(S)I,blocked
Landroid/net/connectivity/framework/util/IpUtils;->ipChecksum(Ljava/nio/ByteBuffer;I)S,blocked
Landroid/net/connectivity/framework/util/IpUtils;->ipversion(Ljava/nio/ByteBuffer;I)B,blocked
Landroid/net/connectivity/framework/util/IpUtils;->isValidUdpOrTcpPort(I)Z,blocked
Landroid/net/connectivity/framework/util/IpUtils;->pseudoChecksumIPv4(Ljava/nio/ByteBuffer;III)I,blocked
Landroid/net/connectivity/framework/util/IpUtils;->pseudoChecksumIPv6(Ljava/nio/ByteBuffer;III)I,blocked
Landroid/net/connectivity/framework/util/IpUtils;->tcpChecksum(Ljava/nio/ByteBuffer;III)S,blocked
Landroid/net/connectivity/framework/util/IpUtils;->transportChecksum(Ljava/nio/ByteBuffer;IIII)S,blocked
Landroid/net/connectivity/framework/util/IpUtils;->udpChecksum(Ljava/nio/ByteBuffer;II)S,blocked
Landroid/net/connectivity/framework/util/LinkPropertiesUtils$CompareOrUpdateResult;-><init>(Ljava/util/Collection;Ljava/util/Collection;Ljava/util/function/Function;)V,blocked
Landroid/net/connectivity/framework/util/LinkPropertiesUtils$CompareOrUpdateResult;->added:Ljava/util/List;,blocked
Landroid/net/connectivity/framework/util/LinkPropertiesUtils$CompareOrUpdateResult;->removed:Ljava/util/List;,blocked
Landroid/net/connectivity/framework/util/LinkPropertiesUtils$CompareOrUpdateResult;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/connectivity/framework/util/LinkPropertiesUtils$CompareOrUpdateResult;->updated:Ljava/util/List;,blocked
Landroid/net/connectivity/framework/util/LinkPropertiesUtils$CompareResult;-><init>()V,blocked
Landroid/net/connectivity/framework/util/LinkPropertiesUtils$CompareResult;-><init>(Ljava/util/Collection;Ljava/util/Collection;)V,blocked
Landroid/net/connectivity/framework/util/LinkPropertiesUtils$CompareResult;->added:Ljava/util/List;,blocked
Landroid/net/connectivity/framework/util/LinkPropertiesUtils$CompareResult;->removed:Ljava/util/List;,blocked
Landroid/net/connectivity/framework/util/LinkPropertiesUtils$CompareResult;->toString()Ljava/lang/String;,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/connectivity/framework/util/LinkPropertiesUtils;-><init>()V,blocked
Landroid/net/connectivity/framework/util/LinkPropertiesUtils;->compareAddresses(Landroid/net/LinkProperties;Landroid/net/LinkProperties;)Landroid/net/connectivity/framework/util/LinkPropertiesUtils$CompareResult;,blocked
Landroid/net/connectivity/framework/util/LinkPropertiesUtils;->isIdenticalAddresses(Landroid/net/LinkProperties;Landroid/net/LinkProperties;)Z,blocked
Landroid/net/connectivity/framework/util/LinkPropertiesUtils;->isIdenticalDnses(Landroid/net/LinkProperties;Landroid/net/LinkProperties;)Z,blocked
Landroid/net/connectivity/framework/util/LinkPropertiesUtils;->isIdenticalHttpProxy(Landroid/net/LinkProperties;Landroid/net/LinkProperties;)Z,blocked
Landroid/net/connectivity/framework/util/LinkPropertiesUtils;->isIdenticalInterfaceName(Landroid/net/LinkProperties;Landroid/net/LinkProperties;)Z,blocked
Landroid/net/connectivity/framework/util/LinkPropertiesUtils;->isIdenticalRoutes(Landroid/net/LinkProperties;Landroid/net/LinkProperties;)Z,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;-><init>(Landroid/content/Context;)V,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->ERROR_LOCATION_MODE_OFF:I,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->ERROR_LOCATION_PERMISSION_MISSING:I,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->SUCCEEDED:I,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->TAG:Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->checkCallersLocationPermission(Ljava/lang/String;Ljava/lang/String;IZLjava/lang/String;)Z,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->checkLocationPermission(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)Z,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->checkLocationPermissionInternal(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)I,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->checkLocationPermissionWithDetailInfo(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)I,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->checkMainlineNetworkStackPermission(I)Z,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->checkNetworkSettingsPermission(I)Z,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->checkNetworkSetupWizardPermission(I)Z,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->checkNetworkStackPermission(I)Z,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->checkPackage(ILjava/lang/String;)V,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->enforceLocationPermission(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->getCurrentUser()I,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->getUidPermission(Ljava/lang/String;I)I,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->isLocationModeEnabled()Z,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->isTargetSdkLessThan(Ljava/lang/String;II)Z,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->mAppOpsManager:Landroid/app/AppOpsManager;,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->mContext:Landroid/content/Context;,blocked
Landroid/net/connectivity/framework/util/LocationPermissionChecker;->noteAppOpAllowed(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)Z,blocked
Landroid/net/connectivity/framework/util/MacAddressUtils;-><clinit>()V,blocked
Landroid/net/connectivity/framework/util/MacAddressUtils;-><init>()V,blocked
Landroid/net/connectivity/framework/util/MacAddressUtils;->DEFAULT_MAC_ADDRESS:Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/MacAddressUtils;->ETHER_ADDR_LEN:I,blocked
Landroid/net/connectivity/framework/util/MacAddressUtils;->LOCALLY_ASSIGNED_MASK:J,blocked
Landroid/net/connectivity/framework/util/MacAddressUtils;->MULTICAST_MASK:J,blocked
Landroid/net/connectivity/framework/util/MacAddressUtils;->NIC_MASK:J,blocked
Landroid/net/connectivity/framework/util/MacAddressUtils;->OUI_MASK:J,blocked
Landroid/net/connectivity/framework/util/MacAddressUtils;->VALID_LONG_MASK:J,blocked
Landroid/net/connectivity/framework/util/MacAddressUtils;->byteAddrFromLongAddr(J)[B,blocked
Landroid/net/connectivity/framework/util/MacAddressUtils;->createRandomUnicastAddress()Landroid/net/MacAddress;,blocked
Landroid/net/connectivity/framework/util/MacAddressUtils;->createRandomUnicastAddress(Landroid/net/MacAddress;Ljava/util/Random;)Landroid/net/MacAddress;,blocked
Landroid/net/connectivity/framework/util/MacAddressUtils;->isMacAddress([B)Z,blocked
Landroid/net/connectivity/framework/util/MacAddressUtils;->isMulticastAddress(Landroid/net/MacAddress;)Z,blocked
Landroid/net/connectivity/framework/util/MacAddressUtils;->longAddrFromByteAddr([B)J,blocked
Landroid/net/connectivity/framework/util/NetUtils;-><init>()V,blocked
Landroid/net/connectivity/framework/util/NetUtils;->addressTypeMatches(Ljava/net/InetAddress;Ljava/net/InetAddress;)Z,blocked
Landroid/net/connectivity/framework/util/NetUtils;->getNetworkPart(Ljava/net/InetAddress;I)Ljava/net/InetAddress;,blocked
Landroid/net/connectivity/framework/util/NetUtils;->maskRawAddress([BI)V,blocked
Landroid/net/connectivity/framework/util/NetUtils;->selectBestRoute(Ljava/util/Collection;Ljava/net/InetAddress;)Landroid/net/RouteInfo;,blocked
Landroid/net/connectivity/framework/util/NetworkCapabilitiesUtils;-><clinit>()V,blocked
Landroid/net/connectivity/framework/util/NetworkCapabilitiesUtils;-><init>()V,blocked
Landroid/net/connectivity/framework/util/NetworkCapabilitiesUtils;->DISPLAY_TRANSPORT_PRIORITIES:[I,blocked
Landroid/net/connectivity/framework/util/NetworkCapabilitiesUtils;->FORCE_RESTRICTED_CAPABILITIES:J,blocked
Landroid/net/connectivity/framework/util/NetworkCapabilitiesUtils;->NET_CAPABILITY_BIP:I,blocked
Landroid/net/connectivity/framework/util/NetworkCapabilitiesUtils;->NET_CAPABILITY_ENTERPRISE:I,blocked
Landroid/net/connectivity/framework/util/NetworkCapabilitiesUtils;->NET_CAPABILITY_NOT_VCN_MANAGED:I,blocked
Landroid/net/connectivity/framework/util/NetworkCapabilitiesUtils;->NET_CAPABILITY_OEM_PRIVATE:I,blocked
Landroid/net/connectivity/framework/util/NetworkCapabilitiesUtils;->NET_CAPABILITY_VEHICLE_INTERNAL:I,blocked
Landroid/net/connectivity/framework/util/NetworkCapabilitiesUtils;->NET_CAPABILITY_VSIM:I,blocked
Landroid/net/connectivity/framework/util/NetworkCapabilitiesUtils;->RESTRICTED_CAPABILITIES:J,blocked
Landroid/net/connectivity/framework/util/NetworkCapabilitiesUtils;->TRANSPORT_USB:I,blocked
Landroid/net/connectivity/framework/util/NetworkCapabilitiesUtils;->UNRESTRICTED_CAPABILITIES:J,blocked
Landroid/net/connectivity/framework/util/NetworkCapabilitiesUtils;->getDisplayTransport([I)I,blocked
Landroid/net/connectivity/framework/util/NetworkCapabilitiesUtils;->inferRestrictedCapability(Landroid/net/NetworkCapabilities;)Z,blocked
Landroid/net/connectivity/framework/util/NetworkCapabilitiesUtils;->packBits([I)J,blocked
Landroid/net/connectivity/framework/util/NetworkCapabilitiesUtils;->unpackBits(J)[I,blocked
Landroid/net/connectivity/framework/util/NetworkIdentityUtils;-><init>()V,blocked
Landroid/net/connectivity/framework/util/NetworkIdentityUtils;->scrubSubscriberId(Ljava/lang/String;)Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/NetworkIdentityUtils;->scrubSubscriberIds([Ljava/lang/String;)[Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;-><clinit>()V,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;-><init>()V,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ARP_ETHER_IPV4_LEN:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ARP_HWTYPE_ETHER:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ARP_HWTYPE_RESERVED_HI:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ARP_HWTYPE_RESERVED_LO:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ARP_PAYLOAD_LEN:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ARP_REPLY:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ARP_REQUEST:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->DHCP4_CLIENT_PORT:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ETHER_ADDR_LEN:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ETHER_BROADCAST:[B,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ETHER_DST_ADDR_OFFSET:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ETHER_HEADER_LEN:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ETHER_MTU:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ETHER_SRC_ADDR_OFFSET:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ETHER_TYPE_ARP:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ETHER_TYPE_IPV4:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ETHER_TYPE_IPV6:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ETHER_TYPE_LENGTH:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ETHER_TYPE_OFFSET:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ICMPV6_CHECKSUM_OFFSET:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ICMPV6_ECHO_REPLY_TYPE:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ICMPV6_ECHO_REQUEST_TYPE:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ICMPV6_HEADER_MIN_LEN:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ICMPV6_ND_OPTION_LENGTH_SCALING_FACTOR:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ICMPV6_ND_OPTION_MIN_LENGTH:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ICMPV6_ND_OPTION_MTU:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ICMPV6_ND_OPTION_PIO:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ICMPV6_ND_OPTION_PREF64:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ICMPV6_ND_OPTION_RDNSS:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ICMPV6_ND_OPTION_SLLA:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ICMPV6_ND_OPTION_TLLA:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ICMPV6_NEIGHBOR_ADVERTISEMENT:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ICMPV6_NEIGHBOR_SOLICITATION:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ICMPV6_RA_HEADER_LEN:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ICMPV6_ROUTER_ADVERTISEMENT:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ICMPV6_ROUTER_SOLICITATION:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->INFINITE_LEASE:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV4_ADDR_ALL:Ljava/net/Inet4Address;,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV4_ADDR_ANY:Ljava/net/Inet4Address;,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV4_ADDR_BITS:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV4_ADDR_LEN:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV4_CONFLICT_ANNOUNCE_NUM:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV4_CONFLICT_PROBE_NUM:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV4_DST_ADDR_OFFSET:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV4_FLAGS_OFFSET:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV4_FRAGMENT_MASK:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV4_HEADER_MIN_LEN:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV4_IHL_MASK:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV4_MAX_MTU:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV4_MIN_MTU:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV4_PROTOCOL_OFFSET:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV4_SRC_ADDR_OFFSET:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV6_ADDR_ALL_HOSTS_MULTICAST:Ljava/net/Inet6Address;,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV6_ADDR_ALL_NODES_MULTICAST:Ljava/net/Inet6Address;,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV6_ADDR_ALL_ROUTERS_MULTICAST:Ljava/net/Inet6Address;,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV6_ADDR_ANY:Ljava/net/Inet6Address;,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV6_ADDR_LEN:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV6_DST_ADDR_OFFSET:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV6_HEADER_LEN:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV6_LEN_OFFSET:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV6_MIN_MTU:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV6_PROTOCOL_OFFSET:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->IPV6_SRC_ADDR_OFFSET:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->NEIGHBOR_ADVERTISEMENT_FLAG_OVERRIDE:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->NEIGHBOR_ADVERTISEMENT_FLAG_ROUTER:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->NEIGHBOR_ADVERTISEMENT_FLAG_SOLICITED:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->PIO_FLAG_AUTONOMOUS:B,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->PIO_FLAG_ON_LINK:B,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ROUTER_ADVERTISEMENT_FLAG_MANAGED_ADDRESS:B,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->ROUTER_ADVERTISEMENT_FLAG_OTHER:B,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->TAG_SYSTEM_DHCP:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->TAG_SYSTEM_DHCP_SERVER:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->TAG_SYSTEM_DNS:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->TAG_SYSTEM_NEIGHBOR:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->TAG_SYSTEM_PROBE:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->UDP_HEADER_LEN:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->VENDOR_SPECIFIC_IE_ID:I,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->makeInet4Address(BBBB)Ljava/net/Inet4Address;,blocked
Landroid/net/connectivity/framework/util/NetworkStackConstants;->makeInet6Address([B)Ljava/net/Inet6Address;,blocked
Landroid/net/connectivity/framework/util/PermissionUtils;-><init>()V,blocked
Landroid/net/connectivity/framework/util/PermissionUtils;->checkAnyPermissionOf(Landroid/content/Context;[Ljava/lang/String;)Z,blocked
Landroid/net/connectivity/framework/util/PermissionUtils;->enforceAnyPermissionOf(Landroid/content/Context;[Ljava/lang/String;)V,blocked
Landroid/net/connectivity/framework/util/PermissionUtils;->enforceNetworkStackPermission(Landroid/content/Context;)V,blocked
Landroid/net/connectivity/framework/util/PermissionUtils;->enforceNetworkStackPermissionOr(Landroid/content/Context;[Ljava/lang/String;)V,blocked
Landroid/net/connectivity/framework/util/ProxyUtils;-><clinit>()V,blocked
Landroid/net/connectivity/framework/util/ProxyUtils;-><init>()V,blocked
Landroid/net/connectivity/framework/util/ProxyUtils;->EXCLLIST_PATTERN:Ljava/util/regex/Pattern;,blocked
Landroid/net/connectivity/framework/util/ProxyUtils;->EXCLLIST_REGEXP:Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/ProxyUtils;->EXCL_REGEX:Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/ProxyUtils;->HOSTNAME_PATTERN:Ljava/util/regex/Pattern;,blocked
Landroid/net/connectivity/framework/util/ProxyUtils;->HOSTNAME_REGEXP:Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/ProxyUtils;->NAME_IP_REGEX:Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/ProxyUtils;->PROXY_EXCLLIST_INVALID:I,blocked
Landroid/net/connectivity/framework/util/ProxyUtils;->PROXY_HOSTNAME_EMPTY:I,blocked
Landroid/net/connectivity/framework/util/ProxyUtils;->PROXY_HOSTNAME_INVALID:I,blocked
Landroid/net/connectivity/framework/util/ProxyUtils;->PROXY_PORT_EMPTY:I,blocked
Landroid/net/connectivity/framework/util/ProxyUtils;->PROXY_PORT_INVALID:I,blocked
Landroid/net/connectivity/framework/util/ProxyUtils;->PROXY_VALID:I,blocked
Landroid/net/connectivity/framework/util/ProxyUtils;->exclusionListAsString([Ljava/lang/String;)Ljava/lang/String;,blocked
Landroid/net/connectivity/framework/util/ProxyUtils;->exclusionStringAsList(Ljava/lang/String;)Ljava/util/List;,blocked
Landroid/net/connectivity/framework/util/ProxyUtils;->validate(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I,blocked
Landroid/net/util/DnsUtils$Rfc6724Comparator;-><init>()V,blocked
Landroid/net/util/DnsUtils$Rfc6724Comparator;->compare(Landroid/net/util/DnsUtils$SortableAddress;Landroid/net/util/DnsUtils$SortableAddress;)I,blocked
Landroid/net/util/DnsUtils$Rfc6724Comparator;->compare(Ljava/lang/Object;Ljava/lang/Object;)I,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/util/DnsUtils$SortableAddress;-><init>(Ljava/net/InetAddress;Ljava/net/InetAddress;)V,blocked
Landroid/net/util/DnsUtils$SortableAddress;->address:Ljava/net/InetAddress;,blocked
Landroid/net/util/DnsUtils$SortableAddress;->hasSrcAddr:I,blocked
Landroid/net/util/DnsUtils$SortableAddress;->label:I,blocked
Landroid/net/util/DnsUtils$SortableAddress;->labelMatch:I,blocked
Landroid/net/util/DnsUtils$SortableAddress;->precedence:I,blocked
Landroid/net/util/DnsUtils$SortableAddress;->prefixMatchLen:I,blocked
Landroid/net/util/DnsUtils$SortableAddress;->scope:I,blocked
Landroid/net/util/DnsUtils$SortableAddress;->scopeMatch:I,blocked
Landroid/net/util/DnsUtils;-><clinit>()V,blocked
Landroid/net/util/DnsUtils;-><init>()V,blocked
Landroid/net/util/DnsUtils;->CHAR_BIT:I,blocked
Landroid/net/util/DnsUtils;->IPV6_ADDR_SCOPE_GLOBAL:I,blocked
Landroid/net/util/DnsUtils;->IPV6_ADDR_SCOPE_LINKLOCAL:I,blocked
Landroid/net/util/DnsUtils;->IPV6_ADDR_SCOPE_NODELOCAL:I,blocked
Landroid/net/util/DnsUtils;->IPV6_ADDR_SCOPE_SITELOCAL:I,blocked
Landroid/net/util/DnsUtils;->TAG:Ljava/lang/String;,blocked
Landroid/net/util/DnsUtils;->access$000(Ljava/net/InetAddress;)I,blocked
Landroid/net/util/DnsUtils;->access$100(Ljava/net/InetAddress;)I,blocked
Landroid/net/util/DnsUtils;->access$200(Ljava/net/InetAddress;)I,blocked
Landroid/net/util/DnsUtils;->access$300(Ljava/net/InetAddress;)Z,blocked
Landroid/net/util/DnsUtils;->access$400(Ljava/net/InetAddress;Ljava/net/InetAddress;)I,blocked
Landroid/net/util/DnsUtils;->checkConnectivity(Landroid/net/Network;ILjava/net/SocketAddress;)Z,blocked
Landroid/net/util/DnsUtils;->compareIpv6PrefixMatchLen(Ljava/net/InetAddress;Ljava/net/InetAddress;)I,blocked
Landroid/net/util/DnsUtils;->findLabel(Ljava/net/InetAddress;)I,blocked
Landroid/net/util/DnsUtils;->findPrecedence(Ljava/net/InetAddress;)I,blocked
Landroid/net/util/DnsUtils;->findScope(Ljava/net/InetAddress;)I,blocked
Landroid/net/util/DnsUtils;->findSrcAddress(Landroid/net/Network;Ljava/net/InetAddress;)Ljava/net/InetAddress;,blocked
Landroid/net/util/DnsUtils;->getIpv6MulticastScope(Ljava/net/InetAddress;)I,blocked
Landroid/net/util/DnsUtils;->haveIpv4(Landroid/net/Network;)Z,blocked
Landroid/net/util/DnsUtils;->haveIpv6(Landroid/net/Network;)Z,blocked
Landroid/net/util/DnsUtils;->isIpv4Address(Ljava/net/InetAddress;)Z,blocked
Landroid/net/util/DnsUtils;->isIpv6Address(Ljava/net/InetAddress;)Z,blocked
Landroid/net/util/DnsUtils;->isIpv6Address6Bone(Ljava/net/InetAddress;)Z,blocked
Landroid/net/util/DnsUtils;->isIpv6Address6To4(Ljava/net/InetAddress;)Z,blocked
Landroid/net/util/DnsUtils;->isIpv6AddressTeredo(Ljava/net/InetAddress;)Z,blocked
Landroid/net/util/DnsUtils;->isIpv6AddressULA(Ljava/net/InetAddress;)Z,blocked
Landroid/net/util/DnsUtils;->rfc6724Sort(Landroid/net/Network;Ljava/util/List;)Ljava/util/List;,blocked
Landroid/net/util/DnsUtils;->sRfc6724Comparator:Ljava/util/Comparator;,blocked
Landroid/net/util/KeepaliveUtils$KeepaliveDeviceConfigurationException;-><init>(Ljava/lang/String;)V,blocked
Landroid/net/util/KeepaliveUtils;-><init>()V,blocked
Landroid/net/util/KeepaliveUtils;->TAG:Ljava/lang/String;,blocked
Landroid/net/util/KeepaliveUtils;->getSupportedKeepalives(Landroid/content/Context;)[I,blocked
Landroid/net/util/KeepaliveUtils;->getSupportedKeepalivesForNetworkCapabilities([ILandroid/net/NetworkCapabilities;)I,blocked
Landroid/net/util/MultinetworkPolicyTracker$$ExternalSyntheticLambda0;-><init>(Landroid/net/util/MultinetworkPolicyTracker;)V,blocked
Landroid/net/util/MultinetworkPolicyTracker$$ExternalSyntheticLambda0;->f$0:Landroid/net/util/MultinetworkPolicyTracker;,blocked
Landroid/net/util/MultinetworkPolicyTracker$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/util/MultinetworkPolicyTracker$1;-><init>(Landroid/net/util/MultinetworkPolicyTracker;)V,blocked
Landroid/net/util/MultinetworkPolicyTracker$1;->onReceive(Landroid/content/Context;Landroid/content/Intent;)V,public-api,sdk,system-api,test-api
Landroid/net/util/MultinetworkPolicyTracker$1;->this$0:Landroid/net/util/MultinetworkPolicyTracker;,blocked
Landroid/net/util/MultinetworkPolicyTracker$ActiveDataSubscriptionIdListener;-><init>(Landroid/net/util/MultinetworkPolicyTracker;)V,blocked
Landroid/net/util/MultinetworkPolicyTracker$ActiveDataSubscriptionIdListener;->onActiveDataSubscriptionIdChanged(I)V,public-api,sdk,system-api,test-api
Landroid/net/util/MultinetworkPolicyTracker$ActiveDataSubscriptionIdListener;->this$0:Landroid/net/util/MultinetworkPolicyTracker;,blocked
Landroid/net/util/MultinetworkPolicyTracker$HandlerExecutor;-><init>(Landroid/os/Handler;)V,blocked
Landroid/net/util/MultinetworkPolicyTracker$HandlerExecutor;->execute(Ljava/lang/Runnable;)V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/net/util/MultinetworkPolicyTracker$HandlerExecutor;->mHandler:Landroid/os/Handler;,blocked
Landroid/net/util/MultinetworkPolicyTracker$SettingObserver;-><init>(Landroid/net/util/MultinetworkPolicyTracker;)V,blocked
Landroid/net/util/MultinetworkPolicyTracker$SettingObserver;->onChange(Z)V,public-api,sdk,system-api,test-api
Landroid/net/util/MultinetworkPolicyTracker$SettingObserver;->onChange(ZLandroid/net/Uri;)V,public-api,sdk,system-api,test-api
Landroid/net/util/MultinetworkPolicyTracker$SettingObserver;->this$0:Landroid/net/util/MultinetworkPolicyTracker;,blocked
Landroid/net/util/MultinetworkPolicyTracker;->$r8$lambda$uc2TUU6h-EGLmClaxRXAj76u_WU(Landroid/net/util/MultinetworkPolicyTracker;)V,blocked
Landroid/net/util/MultinetworkPolicyTracker;-><clinit>()V,blocked
Landroid/net/util/MultinetworkPolicyTracker;-><init>(Landroid/content/Context;Landroid/os/Handler;)V,blocked
Landroid/net/util/MultinetworkPolicyTracker;-><init>(Landroid/content/Context;Landroid/os/Handler;Ljava/lang/Runnable;)V,blocked
Landroid/net/util/MultinetworkPolicyTracker;->TAG:Ljava/lang/String;,blocked
Landroid/net/util/MultinetworkPolicyTracker;->access$002(Landroid/net/util/MultinetworkPolicyTracker;I)I,blocked
Landroid/net/util/MultinetworkPolicyTracker;->access$100(Landroid/net/util/MultinetworkPolicyTracker;)V,blocked
Landroid/net/util/MultinetworkPolicyTracker;->access$200()Ljava/lang/String;,blocked
Landroid/net/util/MultinetworkPolicyTracker;->access$300(Landroid/net/util/MultinetworkPolicyTracker;)Ljava/util/List;,blocked
Landroid/net/util/MultinetworkPolicyTracker;->configMeteredMultipathPreference()I,blocked
Landroid/net/util/MultinetworkPolicyTracker;->configRestrictsAvoidBadWifi()Z,blocked
Landroid/net/util/MultinetworkPolicyTracker;->getAvoidBadWifi()Z,blocked
Landroid/net/util/MultinetworkPolicyTracker;->getAvoidBadWifiSetting()Ljava/lang/String;,blocked
Landroid/net/util/MultinetworkPolicyTracker;->getMeteredMultipathPreference()I,blocked
Landroid/net/util/MultinetworkPolicyTracker;->getResourcesForActiveSubId()Landroid/content/res/Resources;,blocked
Landroid/net/util/MultinetworkPolicyTracker;->mActiveSubId:I,blocked
Landroid/net/util/MultinetworkPolicyTracker;->mAvoidBadWifi:Z,blocked
Landroid/net/util/MultinetworkPolicyTracker;->mAvoidBadWifiCallback:Ljava/lang/Runnable;,blocked
Landroid/net/util/MultinetworkPolicyTracker;->mBroadcastReceiver:Landroid/content/BroadcastReceiver;,blocked
Landroid/net/util/MultinetworkPolicyTracker;->mContext:Landroid/content/Context;,blocked
Landroid/net/util/MultinetworkPolicyTracker;->mHandler:Landroid/os/Handler;,blocked
Landroid/net/util/MultinetworkPolicyTracker;->mMeteredMultipathPreference:I,blocked
Landroid/net/util/MultinetworkPolicyTracker;->mResolver:Landroid/content/ContentResolver;,blocked
Landroid/net/util/MultinetworkPolicyTracker;->mResources:Landroid/net/ConnectivityResources;,blocked
Landroid/net/util/MultinetworkPolicyTracker;->mSettingObserver:Landroid/net/util/MultinetworkPolicyTracker$SettingObserver;,blocked
Landroid/net/util/MultinetworkPolicyTracker;->mSettingsUris:Ljava/util/List;,blocked
Landroid/net/util/MultinetworkPolicyTracker;->mTestAllowBadWifiUntilMs:J,blocked
Landroid/net/util/MultinetworkPolicyTracker;->reevaluate()V,blocked
Landroid/net/util/MultinetworkPolicyTracker;->reevaluateInternal()V,blocked
Landroid/net/util/MultinetworkPolicyTracker;->setTestAllowBadWifiUntil(J)V,blocked
Landroid/net/util/MultinetworkPolicyTracker;->shouldNotifyWifiUnvalidated()Z,blocked
Landroid/net/util/MultinetworkPolicyTracker;->shutdown()V,blocked
Landroid/net/util/MultinetworkPolicyTracker;->start()V,blocked
Landroid/net/util/MultinetworkPolicyTracker;->updateAvoidBadWifi()Z,blocked
Landroid/net/util/MultinetworkPolicyTracker;->updateMeteredMultipathPreference()V,blocked
