Landroid/health/connect/AggregateRecordsGroupedByDurationResponse$$ExternalSyntheticLambda0;->accept(Ljava/lang/Object;Ljava/lang/Object;)V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsGroupedByDurationResponse;->get(Landroid/health/connect/datatypes/AggregationType;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsGroupedByDurationResponse;->getDataOrigins(Landroid/health/connect/datatypes/AggregationType;)Ljava/util/Set;,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsGroupedByDurationResponse;->getEndTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsGroupedByDurationResponse;->getStartTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsGroupedByDurationResponse;->getZoneOffset(Landroid/health/connect/datatypes/AggregationType;)Ljava/time/ZoneOffset;,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsGroupedByPeriodResponse$$ExternalSyntheticLambda0;->accept(Ljava/lang/Object;Ljava/lang/Object;)V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsGroupedByPeriodResponse;->get(Landroid/health/connect/datatypes/AggregationType;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsGroupedByPeriodResponse;->getDataOrigins(Landroid/health/connect/datatypes/AggregationType;)Ljava/util/Set;,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsGroupedByPeriodResponse;->getEndTime()Ljava/time/LocalDateTime;,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsGroupedByPeriodResponse;->getStartTime()Ljava/time/LocalDateTime;,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsGroupedByPeriodResponse;->getZoneOffset(Landroid/health/connect/datatypes/AggregationType;)Ljava/time/ZoneOffset;,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsRequest$Builder;-><init>(Landroid/health/connect/TimeRangeFilter;)V,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsRequest$Builder;->addAggregationType(Landroid/health/connect/datatypes/AggregationType;)Landroid/health/connect/AggregateRecordsRequest$Builder;,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsRequest$Builder;->addDataOriginsFilter(Landroid/health/connect/datatypes/DataOrigin;)Landroid/health/connect/AggregateRecordsRequest$Builder;,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsRequest$Builder;->build()Landroid/health/connect/AggregateRecordsRequest;,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsRequest;->getAggregationTypes()Ljava/util/Set;,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsRequest;->getDataOriginsFilters()Ljava/util/Set;,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsRequest;->getTimeRangeFilter()Landroid/health/connect/TimeRangeFilter;,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsResponse$$ExternalSyntheticLambda0;->accept(Ljava/lang/Object;Ljava/lang/Object;)V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsResponse$$ExternalSyntheticLambda1;->accept(Ljava/lang/Object;Ljava/lang/Object;)V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsResponse;->get(Landroid/health/connect/datatypes/AggregationType;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsResponse;->getDataOrigins(Landroid/health/connect/datatypes/AggregationType;)Ljava/util/Set;,public-api,system-api,test-api
Landroid/health/connect/AggregateRecordsResponse;->getZoneOffset(Landroid/health/connect/datatypes/AggregationType;)Ljava/time/ZoneOffset;,public-api,system-api,test-api
Landroid/health/connect/ApplicationInfoResponse;->getApplicationInfoList()Ljava/util/List;,system-api,test-api
Landroid/health/connect/DeleteUsingFiltersRequest$Builder;-><init>()V,system-api,test-api
Landroid/health/connect/DeleteUsingFiltersRequest$Builder;->addDataOrigin(Landroid/health/connect/datatypes/DataOrigin;)Landroid/health/connect/DeleteUsingFiltersRequest$Builder;,system-api,test-api
Landroid/health/connect/DeleteUsingFiltersRequest$Builder;->addRecordType(Ljava/lang/Class;)Landroid/health/connect/DeleteUsingFiltersRequest$Builder;,system-api,test-api
Landroid/health/connect/DeleteUsingFiltersRequest$Builder;->build()Landroid/health/connect/DeleteUsingFiltersRequest;,system-api,test-api
Landroid/health/connect/DeleteUsingFiltersRequest$Builder;->clearDataOrigins()Landroid/health/connect/DeleteUsingFiltersRequest$Builder;,system-api,test-api
Landroid/health/connect/DeleteUsingFiltersRequest$Builder;->clearRecordTypes()Landroid/health/connect/DeleteUsingFiltersRequest$Builder;,system-api,test-api
Landroid/health/connect/DeleteUsingFiltersRequest$Builder;->setTimeRangeFilter(Landroid/health/connect/TimeRangeFilter;)Landroid/health/connect/DeleteUsingFiltersRequest$Builder;,system-api,test-api
Landroid/health/connect/DeleteUsingFiltersRequest;->getDataOrigins()Ljava/util/Set;,system-api,test-api
Landroid/health/connect/DeleteUsingFiltersRequest;->getRecordTypes()Ljava/util/Set;,system-api,test-api
Landroid/health/connect/DeleteUsingFiltersRequest;->getTimeRangeFilter()Landroid/health/connect/TimeRangeFilter;,system-api,test-api
Landroid/health/connect/FetchDataOriginsPriorityOrderResponse;->getDataOriginsPriorityOrder()Ljava/util/List;,system-api,test-api
Landroid/health/connect/HealthConnectDataState$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/HealthConnectDataState$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/HealthConnectDataState;->CREATOR:Landroid/os/Parcelable$Creator;,system-api,test-api
Landroid/health/connect/HealthConnectDataState;->MIGRATION_STATE_ALLOWED:I,system-api,test-api
Landroid/health/connect/HealthConnectDataState;->MIGRATION_STATE_APP_UPGRADE_REQUIRED:I,system-api,test-api
Landroid/health/connect/HealthConnectDataState;->MIGRATION_STATE_COMPLETE:I,system-api,test-api
Landroid/health/connect/HealthConnectDataState;->MIGRATION_STATE_IDLE:I,system-api,test-api
Landroid/health/connect/HealthConnectDataState;->MIGRATION_STATE_IN_PROGRESS:I,system-api,test-api
Landroid/health/connect/HealthConnectDataState;->MIGRATION_STATE_MODULE_UPGRADE_REQUIRED:I,system-api,test-api
Landroid/health/connect/HealthConnectDataState;->RESTORE_ERROR_FETCHING_DATA:I,system-api,test-api
Landroid/health/connect/HealthConnectDataState;->RESTORE_ERROR_NONE:I,system-api,test-api
Landroid/health/connect/HealthConnectDataState;->RESTORE_ERROR_UNKNOWN:I,system-api,test-api
Landroid/health/connect/HealthConnectDataState;->RESTORE_ERROR_VERSION_DIFF:I,system-api,test-api
Landroid/health/connect/HealthConnectDataState;->RESTORE_STATE_IDLE:I,system-api,test-api
Landroid/health/connect/HealthConnectDataState;->RESTORE_STATE_IN_PROGRESS:I,system-api,test-api
Landroid/health/connect/HealthConnectDataState;->RESTORE_STATE_PENDING:I,system-api,test-api
Landroid/health/connect/HealthConnectDataState;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/HealthConnectDataState;->getDataMigrationState()I,system-api,test-api
Landroid/health/connect/HealthConnectDataState;->getDataRestoreError()I,system-api,test-api
Landroid/health/connect/HealthConnectDataState;->getDataRestoreState()I,system-api,test-api
Landroid/health/connect/HealthConnectDataState;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/HealthConnectException;->ERROR_DATA_SYNC_IN_PROGRESS:I,public-api,system-api,test-api
Landroid/health/connect/HealthConnectException;->ERROR_INTERNAL:I,public-api,system-api,test-api
Landroid/health/connect/HealthConnectException;->ERROR_INVALID_ARGUMENT:I,public-api,system-api,test-api
Landroid/health/connect/HealthConnectException;->ERROR_IO:I,public-api,system-api,test-api
Landroid/health/connect/HealthConnectException;->ERROR_RATE_LIMIT_EXCEEDED:I,public-api,system-api,test-api
Landroid/health/connect/HealthConnectException;->ERROR_REMOTE:I,public-api,system-api,test-api
Landroid/health/connect/HealthConnectException;->ERROR_SECURITY:I,public-api,system-api,test-api
Landroid/health/connect/HealthConnectException;->ERROR_UNKNOWN:I,public-api,system-api,test-api
Landroid/health/connect/HealthConnectException;->ERROR_UNSUPPORTED_OPERATION:I,public-api,system-api,test-api
Landroid/health/connect/HealthConnectException;->getErrorCode()I,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$$ExternalSyntheticLambda0;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$$ExternalSyntheticLambda1;->accept(Ljava/lang/Object;)V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$$ExternalSyntheticLambda2;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$1$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$10$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$11$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$12$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$13$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$14$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$15$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$16$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$17$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$17$$ExternalSyntheticLambda1;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$18$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$18$$ExternalSyntheticLambda1;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$19$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$19$$ExternalSyntheticLambda1;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$2$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$20$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$21$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$22$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$22$$ExternalSyntheticLambda1;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$3$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$4$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$5$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$6$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$7$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$8$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager$9$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager;->ACTION_HEALTH_CONNECT_MIGRATION_READY:Ljava/lang/String;,system-api,test-api
Landroid/health/connect/HealthConnectManager;->ACTION_HEALTH_HOME_SETTINGS:Ljava/lang/String;,system-api,test-api
Landroid/health/connect/HealthConnectManager;->ACTION_MANAGE_HEALTH_DATA:Ljava/lang/String;,system-api,test-api
Landroid/health/connect/HealthConnectManager;->ACTION_MANAGE_HEALTH_PERMISSIONS:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager;->ACTION_REQUEST_EXERCISE_ROUTE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager;->ACTION_REQUEST_HEALTH_PERMISSIONS:Ljava/lang/String;,system-api,test-api
Landroid/health/connect/HealthConnectManager;->ACTION_SHOW_MIGRATION_INFO:Ljava/lang/String;,system-api,test-api
Landroid/health/connect/HealthConnectManager;->CATEGORY_HEALTH_PERMISSIONS:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager;->DATA_DOWNLOAD_COMPLETE:I,system-api,test-api
Landroid/health/connect/HealthConnectManager;->DATA_DOWNLOAD_FAILED:I,system-api,test-api
Landroid/health/connect/HealthConnectManager;->DATA_DOWNLOAD_RETRY:I,system-api,test-api
Landroid/health/connect/HealthConnectManager;->DATA_DOWNLOAD_STARTED:I,system-api,test-api
Landroid/health/connect/HealthConnectManager;->DATA_DOWNLOAD_STATE_UNKNOWN:I,system-api,test-api
Landroid/health/connect/HealthConnectManager;->EXTRA_EXERCISE_ROUTE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager;->EXTRA_SESSION_ID:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager;->aggregate(Landroid/health/connect/AggregateRecordsRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager;->aggregateGroupByDuration(Landroid/health/connect/AggregateRecordsRequest;Ljava/time/Duration;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager;->aggregateGroupByPeriod(Landroid/health/connect/AggregateRecordsRequest;Ljava/time/Period;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager;->deleteRecords(Landroid/health/connect/DeleteUsingFiltersRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,system-api,test-api
Landroid/health/connect/HealthConnectManager;->deleteRecords(Ljava/lang/Class;Landroid/health/connect/TimeRangeFilter;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager;->deleteRecords(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager;->fetchDataOriginsPriorityOrder(ILjava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,system-api,test-api
Landroid/health/connect/HealthConnectManager;->finishMigration(Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,system-api,test-api
Landroid/health/connect/HealthConnectManager;->getChangeLogToken(Landroid/health/connect/changelog/ChangeLogTokenRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager;->getChangeLogs(Landroid/health/connect/changelog/ChangeLogsRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager;->getContributorApplicationsInfo(Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,system-api,test-api
Landroid/health/connect/HealthConnectManager;->getHealthConnectDataState(Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,system-api,test-api
Landroid/health/connect/HealthConnectManager;->getHealthPermissions(Landroid/content/Context;)Ljava/util/Set;,system-api,test-api
Landroid/health/connect/HealthConnectManager;->getRecordRetentionPeriodInDays()I,system-api,test-api
Landroid/health/connect/HealthConnectManager;->insertMinDataMigrationSdkExtensionVersion(ILjava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,system-api,test-api
Landroid/health/connect/HealthConnectManager;->insertRecords(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager;->isHealthPermission(Landroid/content/Context;Ljava/lang/String;)Z,system-api,test-api
Landroid/health/connect/HealthConnectManager;->queryAccessLogs(Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,system-api,test-api
Landroid/health/connect/HealthConnectManager;->queryActivityDates(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,system-api,test-api
Landroid/health/connect/HealthConnectManager;->queryAllRecordTypesInfo(Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,system-api,test-api
Landroid/health/connect/HealthConnectManager;->readRecords(Landroid/health/connect/ReadRecordsRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager;->setRecordRetentionPeriodInDays(ILjava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,system-api,test-api
Landroid/health/connect/HealthConnectManager;->stageAllHealthConnectRemoteData(Ljava/util/Map;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,system-api,test-api
Landroid/health/connect/HealthConnectManager;->startMigration(Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,system-api,test-api
Landroid/health/connect/HealthConnectManager;->updateDataDownloadState(I)V,system-api,test-api
Landroid/health/connect/HealthConnectManager;->updateDataOriginPriorityOrder(Landroid/health/connect/UpdateDataOriginPriorityOrderRequest;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,system-api,test-api
Landroid/health/connect/HealthConnectManager;->updateRecords(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,public-api,system-api,test-api
Landroid/health/connect/HealthConnectManager;->writeMigrationData(Ljava/util/List;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V,system-api,test-api
Landroid/health/connect/HealthDataCategory;->ACTIVITY:I,system-api,test-api
Landroid/health/connect/HealthDataCategory;->BODY_MEASUREMENTS:I,system-api,test-api
Landroid/health/connect/HealthDataCategory;->CYCLE_TRACKING:I,system-api,test-api
Landroid/health/connect/HealthDataCategory;->NUTRITION:I,system-api,test-api
Landroid/health/connect/HealthDataCategory;->SLEEP:I,system-api,test-api
Landroid/health/connect/HealthDataCategory;->UNKNOWN:I,system-api,test-api
Landroid/health/connect/HealthDataCategory;->VITALS:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->ACTIVE_CALORIES_BURNED:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->BASAL_BODY_TEMPERATURE:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->BASAL_METABOLIC_RATE:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->BLOOD_GLUCOSE:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->BLOOD_PRESSURE:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->BODY_FAT:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->BODY_TEMPERATURE:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->BODY_WATER_MASS:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->BONE_MASS:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->CERVICAL_MUCUS:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->DISTANCE:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->ELEVATION_GAINED:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->EXERCISE:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->FLOORS_CLIMBED:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->HEART_RATE:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->HEART_RATE_VARIABILITY:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->HEIGHT:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->HYDRATION:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->INTERMENSTRUAL_BLEEDING:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->LEAN_BODY_MASS:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->MENSTRUATION:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->NUTRITION:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->OVULATION_TEST:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->OXYGEN_SATURATION:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->POWER:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->RESPIRATORY_RATE:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->RESTING_HEART_RATE:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->SEXUAL_ACTIVITY:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->SLEEP:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->SPEED:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->STEPS:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->TOTAL_CALORIES_BURNED:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->UNKNOWN:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->VO2_MAX:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->WEIGHT:I,system-api,test-api
Landroid/health/connect/HealthPermissionCategory;->WHEELCHAIR_PUSHES:I,system-api,test-api
Landroid/health/connect/HealthPermissions;->HEALTH_PERMISSION_GROUP:Ljava/lang/String;,system-api,test-api
Landroid/health/connect/HealthPermissions;->MANAGE_HEALTH_DATA_PERMISSION:Ljava/lang/String;,system-api,test-api
Landroid/health/connect/HealthPermissions;->MANAGE_HEALTH_PERMISSIONS:Ljava/lang/String;,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_ACTIVE_CALORIES_BURNED:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_BASAL_BODY_TEMPERATURE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_BASAL_METABOLIC_RATE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_BLOOD_GLUCOSE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_BLOOD_PRESSURE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_BODY_FAT:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_BODY_TEMPERATURE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_BODY_WATER_MASS:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_BONE_MASS:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_CERVICAL_MUCUS:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_DISTANCE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_ELEVATION_GAINED:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_EXERCISE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_FLOORS_CLIMBED:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_HEART_RATE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_HEART_RATE_VARIABILITY:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_HEIGHT:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_HYDRATION:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_INTERMENSTRUAL_BLEEDING:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_LEAN_BODY_MASS:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_MENSTRUATION:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_NUTRITION:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_OVULATION_TEST:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_OXYGEN_SATURATION:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_POWER:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_RESPIRATORY_RATE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_RESTING_HEART_RATE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_SEXUAL_ACTIVITY:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_SLEEP:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_SPEED:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_STEPS:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_TOTAL_CALORIES_BURNED:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_VO2_MAX:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_WEIGHT:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->READ_WHEELCHAIR_PUSHES:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_ACTIVE_CALORIES_BURNED:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_BASAL_BODY_TEMPERATURE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_BASAL_METABOLIC_RATE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_BLOOD_GLUCOSE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_BLOOD_PRESSURE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_BODY_FAT:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_BODY_TEMPERATURE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_BODY_WATER_MASS:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_BONE_MASS:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_CERVICAL_MUCUS:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_DISTANCE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_ELEVATION_GAINED:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_EXERCISE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_EXERCISE_ROUTE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_FLOORS_CLIMBED:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_HEART_RATE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_HEART_RATE_VARIABILITY:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_HEIGHT:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_HYDRATION:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_INTERMENSTRUAL_BLEEDING:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_LEAN_BODY_MASS:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_MENSTRUATION:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_NUTRITION:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_OVULATION_TEST:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_OXYGEN_SATURATION:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_POWER:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_RESPIRATORY_RATE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_RESTING_HEART_RATE:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_SEXUAL_ACTIVITY:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_SLEEP:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_SPEED:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_STEPS:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_TOTAL_CALORIES_BURNED:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_VO2_MAX:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_WEIGHT:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthPermissions;->WRITE_WHEELCHAIR_PUSHES:Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/HealthServicesInitializer$$ExternalSyntheticLambda0;->createService(Landroid/content/Context;Landroid/os/IBinder;)Ljava/lang/Object;,system-api,test-api
Landroid/health/connect/InsertRecordsResponse;->getRecords()Ljava/util/List;,public-api,system-api,test-api
Landroid/health/connect/LocalTimeRangeFilter$Builder;-><init>()V,public-api,system-api,test-api
Landroid/health/connect/LocalTimeRangeFilter$Builder;->build()Landroid/health/connect/LocalTimeRangeFilter;,public-api,system-api,test-api
Landroid/health/connect/LocalTimeRangeFilter$Builder;->setEndTime(Ljava/time/LocalDateTime;)Landroid/health/connect/LocalTimeRangeFilter$Builder;,public-api,system-api,test-api
Landroid/health/connect/LocalTimeRangeFilter$Builder;->setStartTime(Ljava/time/LocalDateTime;)Landroid/health/connect/LocalTimeRangeFilter$Builder;,public-api,system-api,test-api
Landroid/health/connect/LocalTimeRangeFilter;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/LocalTimeRangeFilter;->getEndTime()Ljava/time/LocalDateTime;,public-api,system-api,test-api
Landroid/health/connect/LocalTimeRangeFilter;->getStartTime()Ljava/time/LocalDateTime;,public-api,system-api,test-api
Landroid/health/connect/LocalTimeRangeFilter;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/LocalTimeRangeFilter;->isBounded()Z,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsRequest;->getRecordType()Ljava/lang/Class;,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsRequestUsingFilters$Builder;-><init>(Ljava/lang/Class;)V,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsRequestUsingFilters$Builder;->addDataOrigins(Landroid/health/connect/datatypes/DataOrigin;)Landroid/health/connect/ReadRecordsRequestUsingFilters$Builder;,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsRequestUsingFilters$Builder;->build()Landroid/health/connect/ReadRecordsRequestUsingFilters;,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsRequestUsingFilters$Builder;->setAscending(Z)Landroid/health/connect/ReadRecordsRequestUsingFilters$Builder;,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsRequestUsingFilters$Builder;->setPageSize(I)Landroid/health/connect/ReadRecordsRequestUsingFilters$Builder;,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsRequestUsingFilters$Builder;->setPageToken(J)Landroid/health/connect/ReadRecordsRequestUsingFilters$Builder;,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsRequestUsingFilters$Builder;->setTimeRangeFilter(Landroid/health/connect/TimeRangeFilter;)Landroid/health/connect/ReadRecordsRequestUsingFilters$Builder;,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsRequestUsingFilters;->getDataOrigins()Ljava/util/Set;,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsRequestUsingFilters;->getPageSize()I,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsRequestUsingFilters;->getPageToken()J,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsRequestUsingFilters;->getTimeRangeFilter()Landroid/health/connect/TimeRangeFilter;,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsRequestUsingFilters;->isAscending()Z,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsRequestUsingIds$Builder;-><init>(Ljava/lang/Class;)V,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsRequestUsingIds$Builder;->addClientRecordId(Ljava/lang/String;)Landroid/health/connect/ReadRecordsRequestUsingIds$Builder;,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsRequestUsingIds$Builder;->addId(Ljava/lang/String;)Landroid/health/connect/ReadRecordsRequestUsingIds$Builder;,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsRequestUsingIds$Builder;->build()Landroid/health/connect/ReadRecordsRequestUsingIds;,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsRequestUsingIds;->getRecordIdFilters()Ljava/util/List;,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsResponse;->getNextPageToken()J,public-api,system-api,test-api
Landroid/health/connect/ReadRecordsResponse;->getRecords()Ljava/util/List;,public-api,system-api,test-api
Landroid/health/connect/RecordIdFilter;->fromClientRecordId(Ljava/lang/Class;Ljava/lang/String;)Landroid/health/connect/RecordIdFilter;,public-api,system-api,test-api
Landroid/health/connect/RecordIdFilter;->fromId(Ljava/lang/Class;Ljava/lang/String;)Landroid/health/connect/RecordIdFilter;,public-api,system-api,test-api
Landroid/health/connect/RecordIdFilter;->getClientRecordId()Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/RecordIdFilter;->getId()Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/RecordIdFilter;->getRecordType()Ljava/lang/Class;,public-api,system-api,test-api
Landroid/health/connect/RecordTypeInfoResponse;->getContributingPackages()Ljava/util/List;,system-api,test-api
Landroid/health/connect/RecordTypeInfoResponse;->getDataCategory()I,system-api,test-api
Landroid/health/connect/RecordTypeInfoResponse;->getPermissionCategory()I,system-api,test-api
Landroid/health/connect/TimeInstantRangeFilter$Builder;-><init>()V,public-api,system-api,test-api
Landroid/health/connect/TimeInstantRangeFilter$Builder;->build()Landroid/health/connect/TimeInstantRangeFilter;,public-api,system-api,test-api
Landroid/health/connect/TimeInstantRangeFilter$Builder;->setEndTime(Ljava/time/Instant;)Landroid/health/connect/TimeInstantRangeFilter$Builder;,public-api,system-api,test-api
Landroid/health/connect/TimeInstantRangeFilter$Builder;->setStartTime(Ljava/time/Instant;)Landroid/health/connect/TimeInstantRangeFilter$Builder;,public-api,system-api,test-api
Landroid/health/connect/TimeInstantRangeFilter;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/TimeInstantRangeFilter;->getEndTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/TimeInstantRangeFilter;->getStartTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/TimeInstantRangeFilter;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/TimeInstantRangeFilter;->isBounded()Z,public-api,system-api,test-api
Landroid/health/connect/UpdateDataOriginPriorityOrderRequest;-><init>(Ljava/util/List;I)V,system-api,test-api
Landroid/health/connect/UpdateDataOriginPriorityOrderRequest;->getDataCategory()I,system-api,test-api
Landroid/health/connect/UpdateDataOriginPriorityOrderRequest;->getDataOriginInOrder()Ljava/util/List;,system-api,test-api
Landroid/health/connect/accesslog/AccessLog$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/accesslog/AccessLog$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/accesslog/AccessLog$OperationType;->OPERATION_TYPE_DELETE:I,system-api,test-api
Landroid/health/connect/accesslog/AccessLog$OperationType;->OPERATION_TYPE_READ:I,system-api,test-api
Landroid/health/connect/accesslog/AccessLog$OperationType;->OPERATION_TYPE_UPSERT:I,system-api,test-api
Landroid/health/connect/accesslog/AccessLog;->CREATOR:Landroid/os/Parcelable$Creator;,system-api,test-api
Landroid/health/connect/accesslog/AccessLog;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/accesslog/AccessLog;->getAccessTime()Ljava/time/Instant;,system-api,test-api
Landroid/health/connect/accesslog/AccessLog;->getOperationType()I,system-api,test-api
Landroid/health/connect/accesslog/AccessLog;->getPackageName()Ljava/lang/String;,system-api,test-api
Landroid/health/connect/accesslog/AccessLog;->getRecordTypes()Ljava/util/List;,system-api,test-api
Landroid/health/connect/accesslog/AccessLog;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/accesslog/AccessLogsResponseParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/accesslog/AccessLogsResponseParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/accesslog/AccessLogsResponseParcel;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/accesslog/AccessLogsResponseParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/aidl/ActivityDatesRequestParcel$$ExternalSyntheticLambda0;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/aidl/ActivityDatesRequestParcel$$ExternalSyntheticLambda1;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/aidl/ActivityDatesRequestParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/ActivityDatesRequestParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/ActivityDatesRequestParcel;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/aidl/ActivityDatesRequestParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/aidl/ActivityDatesResponseParcel$$ExternalSyntheticLambda0;->accept(Ljava/lang/Object;)V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/aidl/ActivityDatesResponseParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/ActivityDatesResponseParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/ActivityDatesResponseParcel;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/aidl/ActivityDatesResponseParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/aidl/AggregateDataRequestParcel$$ExternalSyntheticLambda0;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/aidl/AggregateDataRequestParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/AggregateDataRequestParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/AggregateDataRequestParcel;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/aidl/AggregateDataRequestParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/aidl/AggregateDataResponseParcel$$ExternalSyntheticLambda0;->accept(Ljava/lang/Object;Ljava/lang/Object;)V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/aidl/AggregateDataResponseParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/AggregateDataResponseParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/AggregateDataResponseParcel;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/aidl/AggregateDataResponseParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/aidl/ApplicationInfoResponseParcel$$ExternalSyntheticLambda0;->accept(Ljava/lang/Object;)V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/aidl/ApplicationInfoResponseParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/ApplicationInfoResponseParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/ApplicationInfoResponseParcel;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/aidl/ApplicationInfoResponseParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/aidl/DeleteUsingFiltersRequestParcel$$ExternalSyntheticLambda0;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/aidl/DeleteUsingFiltersRequestParcel$$ExternalSyntheticLambda1;->applyAsInt(Ljava/lang/Object;)I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/aidl/DeleteUsingFiltersRequestParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/DeleteUsingFiltersRequestParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/DeleteUsingFiltersRequestParcel;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/aidl/DeleteUsingFiltersRequestParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/aidl/DeletedLogsParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/DeletedLogsParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/DeletedLogsParcel;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/aidl/DeletedLogsParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/aidl/GetPriorityResponseParcel$$ExternalSyntheticLambda0;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/aidl/GetPriorityResponseParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/GetPriorityResponseParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/GetPriorityResponseParcel;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/aidl/GetPriorityResponseParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/aidl/HealthConnectExceptionParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/HealthConnectExceptionParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/HealthConnectExceptionParcel;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/aidl/HealthConnectExceptionParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/aidl/IAccessLogsResponseCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IAccessLogsResponseCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IAccessLogsResponseCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IAccessLogsResponseCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,system-api,test-api
Landroid/health/connect/aidl/IActivityDatesResponseCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IActivityDatesResponseCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IActivityDatesResponseCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IActivityDatesResponseCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,system-api,test-api
Landroid/health/connect/aidl/IAggregateRecordsResponseCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IAggregateRecordsResponseCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IAggregateRecordsResponseCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IAggregateRecordsResponseCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,system-api,test-api
Landroid/health/connect/aidl/IApplicationInfoResponseCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IApplicationInfoResponseCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IApplicationInfoResponseCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IApplicationInfoResponseCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,system-api,test-api
Landroid/health/connect/aidl/IChangeLogsResponseCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IChangeLogsResponseCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IChangeLogsResponseCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IChangeLogsResponseCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,system-api,test-api
Landroid/health/connect/aidl/IDataStagingFinishedCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IDataStagingFinishedCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IDataStagingFinishedCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IDataStagingFinishedCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,system-api,test-api
Landroid/health/connect/aidl/IEmptyResponseCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IEmptyResponseCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IEmptyResponseCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IEmptyResponseCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,system-api,test-api
Landroid/health/connect/aidl/IGetChangeLogTokenCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IGetChangeLogTokenCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IGetChangeLogTokenCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IGetChangeLogTokenCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,system-api,test-api
Landroid/health/connect/aidl/IGetHealthConnectDataStateCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IGetHealthConnectDataStateCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IGetHealthConnectDataStateCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IGetHealthConnectDataStateCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,system-api,test-api
Landroid/health/connect/aidl/IGetHealthConnectMigrationUiStateCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IGetHealthConnectMigrationUiStateCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IGetHealthConnectMigrationUiStateCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IGetHealthConnectMigrationUiStateCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,system-api,test-api
Landroid/health/connect/aidl/IGetPriorityResponseCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IGetPriorityResponseCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IGetPriorityResponseCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IGetPriorityResponseCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,system-api,test-api
Landroid/health/connect/aidl/IHealthConnectService$Default;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IHealthConnectService$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IHealthConnectService$Stub;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IHealthConnectService$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,system-api,test-api
Landroid/health/connect/aidl/IInsertRecordsResponseCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IInsertRecordsResponseCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IInsertRecordsResponseCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IInsertRecordsResponseCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,system-api,test-api
Landroid/health/connect/aidl/IMigrationCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IMigrationCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IMigrationCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IMigrationCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,system-api,test-api
Landroid/health/connect/aidl/IReadRecordsResponseCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IReadRecordsResponseCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IReadRecordsResponseCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IReadRecordsResponseCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,system-api,test-api
Landroid/health/connect/aidl/IRecordTypeInfoResponseCallback$Default;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IRecordTypeInfoResponseCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IRecordTypeInfoResponseCallback$Stub;->asBinder()Landroid/os/IBinder;,public-api,system-api,test-api
Landroid/health/connect/aidl/IRecordTypeInfoResponseCallback$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,system-api,test-api
Landroid/health/connect/aidl/InsertRecordsResponseParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/InsertRecordsResponseParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/InsertRecordsResponseParcel;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/aidl/InsertRecordsResponseParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/aidl/ReadRecordsRequestParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/ReadRecordsRequestParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/ReadRecordsRequestParcel;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/aidl/ReadRecordsRequestParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/aidl/ReadRecordsResponseParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/ReadRecordsResponseParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/ReadRecordsResponseParcel;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/aidl/ReadRecordsResponseParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/aidl/RecordIdFiltersParcel$$ExternalSyntheticLambda0;->accept(Ljava/lang/Object;)V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/aidl/RecordIdFiltersParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/RecordIdFiltersParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/RecordIdFiltersParcel;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/aidl/RecordIdFiltersParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/aidl/RecordTypeInfoResponseParcel$$ExternalSyntheticLambda0;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/aidl/RecordTypeInfoResponseParcel$$ExternalSyntheticLambda1;->test(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/aidl/RecordTypeInfoResponseParcel$$ExternalSyntheticLambda2;->accept(Ljava/lang/Object;Ljava/lang/Object;)V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/aidl/RecordTypeInfoResponseParcel$$ExternalSyntheticLambda3;->accept(Ljava/lang/Object;Ljava/lang/Object;)V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/aidl/RecordTypeInfoResponseParcel$$ExternalSyntheticLambda4;->accept(Ljava/lang/Object;Ljava/lang/Object;)V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/aidl/RecordTypeInfoResponseParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/RecordTypeInfoResponseParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/RecordTypeInfoResponseParcel;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/aidl/RecordTypeInfoResponseParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/aidl/RecordsParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/RecordsParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/RecordsParcel;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/aidl/RecordsParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/aidl/UpdatePriorityRequestParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/UpdatePriorityRequestParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/aidl/UpdatePriorityRequestParcel;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/aidl/UpdatePriorityRequestParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogTokenRequest$$ExternalSyntheticLambda0;->accept(Ljava/lang/Object;)V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogTokenRequest$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogTokenRequest$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogTokenRequest$Builder;-><init>()V,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogTokenRequest$Builder;->addDataOriginFilter(Landroid/health/connect/datatypes/DataOrigin;)Landroid/health/connect/changelog/ChangeLogTokenRequest$Builder;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogTokenRequest$Builder;->addRecordType(Ljava/lang/Class;)Landroid/health/connect/changelog/ChangeLogTokenRequest$Builder;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogTokenRequest$Builder;->build()Landroid/health/connect/changelog/ChangeLogTokenRequest;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogTokenRequest;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogTokenRequest;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogTokenRequest;->getDataOriginFilters()Ljava/util/Set;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogTokenRequest;->getRecordTypes()Ljava/util/Set;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogTokenRequest;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogTokenResponse$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogTokenResponse$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogTokenResponse;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogTokenResponse;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogTokenResponse;->getToken()Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogTokenResponse;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsRequest$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsRequest$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsRequest$Builder;-><init>(Ljava/lang/String;)V,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsRequest$Builder;->build()Landroid/health/connect/changelog/ChangeLogsRequest;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsRequest$Builder;->setPageSize(I)Landroid/health/connect/changelog/ChangeLogsRequest$Builder;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsRequest;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsRequest;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsRequest;->getPageSize()I,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsRequest;->getToken()Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsRequest;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsResponse$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsResponse$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsResponse$DeletedLog;-><init>(Ljava/lang/String;J)V,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsResponse$DeletedLog;->getDeletedRecordId()Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsResponse$DeletedLog;->getDeletedTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsResponse;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsResponse;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsResponse;->getDeletedLogs()Ljava/util/List;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsResponse;->getNextChangesToken()Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsResponse;->getUpsertedRecords()Ljava/util/List;,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsResponse;->hasMorePages()Z,public-api,system-api,test-api
Landroid/health/connect/changelog/ChangeLogsResponse;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/ActiveCaloriesBurnedRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;Landroid/health/connect/datatypes/units/Energy;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/ActiveCaloriesBurnedRecord$Builder;->build()Landroid/health/connect/datatypes/ActiveCaloriesBurnedRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ActiveCaloriesBurnedRecord$Builder;->clearEndZoneOffset()Landroid/health/connect/datatypes/ActiveCaloriesBurnedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ActiveCaloriesBurnedRecord$Builder;->clearStartZoneOffset()Landroid/health/connect/datatypes/ActiveCaloriesBurnedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ActiveCaloriesBurnedRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/ActiveCaloriesBurnedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ActiveCaloriesBurnedRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/ActiveCaloriesBurnedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ActiveCaloriesBurnedRecord;->ACTIVE_CALORIES_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ActiveCaloriesBurnedRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/ActiveCaloriesBurnedRecord;->getEnergy()Landroid/health/connect/datatypes/units/Energy;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ActiveCaloriesBurnedRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/AppInfo;->getIcon()Landroid/graphics/Bitmap;,public-api,system-api,test-api
Landroid/health/connect/datatypes/AppInfo;->getName()Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/datatypes/AppInfo;->getPackageName()Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BasalBodyTemperatureRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;ILandroid/health/connect/datatypes/units/Temperature;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/BasalBodyTemperatureRecord$Builder;->build()Landroid/health/connect/datatypes/BasalBodyTemperatureRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BasalBodyTemperatureRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/BasalBodyTemperatureRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BasalBodyTemperatureRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/BasalBodyTemperatureRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BasalBodyTemperatureRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/BasalBodyTemperatureRecord;->getMeasurementLocation()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BasalBodyTemperatureRecord;->getTemperature()Landroid/health/connect/datatypes/units/Temperature;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BasalBodyTemperatureRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/BasalMetabolicRateRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Landroid/health/connect/datatypes/units/Power;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/BasalMetabolicRateRecord$Builder;->build()Landroid/health/connect/datatypes/BasalMetabolicRateRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BasalMetabolicRateRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/BasalMetabolicRateRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BasalMetabolicRateRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/BasalMetabolicRateRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BasalMetabolicRateRecord;->BASAL_CALORIES_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BasalMetabolicRateRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/BasalMetabolicRateRecord;->getBasalMetabolicRate()Landroid/health/connect/datatypes/units/Power;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BasalMetabolicRateRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;ILandroid/health/connect/datatypes/units/BloodGlucose;II)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord$Builder;->build()Landroid/health/connect/datatypes/BloodGlucoseRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/BloodGlucoseRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/BloodGlucoseRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord$RelationToMealType;->RELATION_TO_MEAL_AFTER_MEAL:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord$RelationToMealType;->RELATION_TO_MEAL_BEFORE_MEAL:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord$RelationToMealType;->RELATION_TO_MEAL_FASTING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord$RelationToMealType;->RELATION_TO_MEAL_GENERAL:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord$RelationToMealType;->RELATION_TO_MEAL_UNKNOWN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord$SpecimenSource;->SPECIMEN_SOURCE_CAPILLARY_BLOOD:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord$SpecimenSource;->SPECIMEN_SOURCE_INTERSTITIAL_FLUID:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord$SpecimenSource;->SPECIMEN_SOURCE_PLASMA:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord$SpecimenSource;->SPECIMEN_SOURCE_SERUM:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord$SpecimenSource;->SPECIMEN_SOURCE_TEARS:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord$SpecimenSource;->SPECIMEN_SOURCE_UNKNOWN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord$SpecimenSource;->SPECIMEN_SOURCE_WHOLE_BLOOD:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord;->getLevel()Landroid/health/connect/datatypes/units/BloodGlucose;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord;->getMealType()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord;->getRelationToMeal()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord;->getSpecimenSource()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodGlucoseRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord$BloodPressureMeasurementLocation;->BLOOD_PRESSURE_MEASUREMENT_LOCATION_LEFT_UPPER_ARM:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord$BloodPressureMeasurementLocation;->BLOOD_PRESSURE_MEASUREMENT_LOCATION_LEFT_WRIST:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord$BloodPressureMeasurementLocation;->BLOOD_PRESSURE_MEASUREMENT_LOCATION_RIGHT_UPPER_ARM:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord$BloodPressureMeasurementLocation;->BLOOD_PRESSURE_MEASUREMENT_LOCATION_RIGHT_WRIST:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord$BloodPressureMeasurementLocation;->BLOOD_PRESSURE_MEASUREMENT_LOCATION_UNKNOWN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord$BodyPosition;->BODY_POSITION_LYING_DOWN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord$BodyPosition;->BODY_POSITION_RECLINING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord$BodyPosition;->BODY_POSITION_SITTING_DOWN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord$BodyPosition;->BODY_POSITION_STANDING_UP:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord$BodyPosition;->BODY_POSITION_UNKNOWN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;ILandroid/health/connect/datatypes/units/Pressure;Landroid/health/connect/datatypes/units/Pressure;I)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord$Builder;->build()Landroid/health/connect/datatypes/BloodPressureRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/BloodPressureRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/BloodPressureRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord;->DIASTOLIC_AVG:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord;->DIASTOLIC_MAX:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord;->DIASTOLIC_MIN:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord;->SYSTOLIC_AVG:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord;->SYSTOLIC_MAX:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord;->SYSTOLIC_MIN:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord;->getBodyPosition()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord;->getDiastolic()Landroid/health/connect/datatypes/units/Pressure;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord;->getMeasurementLocation()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord;->getSystolic()Landroid/health/connect/datatypes/units/Pressure;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BloodPressureRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyFatRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Landroid/health/connect/datatypes/units/Percentage;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyFatRecord$Builder;->build()Landroid/health/connect/datatypes/BodyFatRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyFatRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/BodyFatRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyFatRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/BodyFatRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyFatRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyFatRecord;->getPercentage()Landroid/health/connect/datatypes/units/Percentage;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyFatRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyTemperatureMeasurementLocation;->MEASUREMENT_LOCATION_ARMPIT:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyTemperatureMeasurementLocation;->MEASUREMENT_LOCATION_EAR:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyTemperatureMeasurementLocation;->MEASUREMENT_LOCATION_FINGER:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyTemperatureMeasurementLocation;->MEASUREMENT_LOCATION_FOREHEAD:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyTemperatureMeasurementLocation;->MEASUREMENT_LOCATION_MOUTH:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyTemperatureMeasurementLocation;->MEASUREMENT_LOCATION_RECTUM:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyTemperatureMeasurementLocation;->MEASUREMENT_LOCATION_TEMPORAL_ARTERY:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyTemperatureMeasurementLocation;->MEASUREMENT_LOCATION_TOE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyTemperatureMeasurementLocation;->MEASUREMENT_LOCATION_UNKNOWN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyTemperatureMeasurementLocation;->MEASUREMENT_LOCATION_VAGINA:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyTemperatureMeasurementLocation;->MEASUREMENT_LOCATION_WRIST:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyTemperatureRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;ILandroid/health/connect/datatypes/units/Temperature;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyTemperatureRecord$Builder;->build()Landroid/health/connect/datatypes/BodyTemperatureRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyTemperatureRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/BodyTemperatureRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyTemperatureRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/BodyTemperatureRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyTemperatureRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyTemperatureRecord;->getMeasurementLocation()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyTemperatureRecord;->getTemperature()Landroid/health/connect/datatypes/units/Temperature;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyTemperatureRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyWaterMassRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Landroid/health/connect/datatypes/units/Mass;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyWaterMassRecord$Builder;->build()Landroid/health/connect/datatypes/BodyWaterMassRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyWaterMassRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/BodyWaterMassRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyWaterMassRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/BodyWaterMassRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyWaterMassRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyWaterMassRecord;->getBodyWaterMass()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BodyWaterMassRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/BoneMassRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Landroid/health/connect/datatypes/units/Mass;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/BoneMassRecord$Builder;->build()Landroid/health/connect/datatypes/BoneMassRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BoneMassRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/BoneMassRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BoneMassRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/BoneMassRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BoneMassRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/BoneMassRecord;->getMass()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/BoneMassRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/CervicalMucusRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;II)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/CervicalMucusRecord$Builder;->build()Landroid/health/connect/datatypes/CervicalMucusRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/CervicalMucusRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/CervicalMucusRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/CervicalMucusRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/CervicalMucusRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/CervicalMucusRecord$CervicalMucusAppearance;->APPEARANCE_CREAMY:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/CervicalMucusRecord$CervicalMucusAppearance;->APPEARANCE_DRY:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/CervicalMucusRecord$CervicalMucusAppearance;->APPEARANCE_EGG_WHITE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/CervicalMucusRecord$CervicalMucusAppearance;->APPEARANCE_STICKY:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/CervicalMucusRecord$CervicalMucusAppearance;->APPEARANCE_UNKNOWN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/CervicalMucusRecord$CervicalMucusAppearance;->APPEARANCE_UNUSUAL:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/CervicalMucusRecord$CervicalMucusAppearance;->APPEARANCE_WATERY:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/CervicalMucusRecord$CervicalMucusSensation;->SENSATION_HEAVY:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/CervicalMucusRecord$CervicalMucusSensation;->SENSATION_LIGHT:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/CervicalMucusRecord$CervicalMucusSensation;->SENSATION_MEDIUM:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/CervicalMucusRecord$CervicalMucusSensation;->SENSATION_UNKNOWN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/CervicalMucusRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/CervicalMucusRecord;->getAppearance()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/CervicalMucusRecord;->getSensation()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/CervicalMucusRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord$$ExternalSyntheticLambda0;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;Ljava/util/List;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord$Builder;->build()Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord$Builder;->clearEndZoneOffset()Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord$Builder;->clearStartZoneOffset()Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord$CyclingPedalingCadenceRecordSample;-><init>(DLjava/time/Instant;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord$CyclingPedalingCadenceRecordSample;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord$CyclingPedalingCadenceRecordSample;->getRevolutionsPerMinute()D,public-api,system-api,test-api
Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord$CyclingPedalingCadenceRecordSample;->getTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord$CyclingPedalingCadenceRecordSample;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord;->RPM_AVG:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord;->RPM_MAX:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord;->RPM_MIN:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord;->getSamples()Ljava/util/List;,public-api,system-api,test-api
Landroid/health/connect/datatypes/CyclingPedalingCadenceRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/DataOrigin$Builder;-><init>()V,public-api,system-api,test-api
Landroid/health/connect/datatypes/DataOrigin$Builder;->build()Landroid/health/connect/datatypes/DataOrigin;,public-api,system-api,test-api
Landroid/health/connect/datatypes/DataOrigin$Builder;->setPackageName(Ljava/lang/String;)Landroid/health/connect/datatypes/DataOrigin$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/DataOrigin;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/DataOrigin;->getPackageName()Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/datatypes/DataOrigin;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/Device$Builder;-><init>()V,public-api,system-api,test-api
Landroid/health/connect/datatypes/Device$Builder;->build()Landroid/health/connect/datatypes/Device;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Device$Builder;->setManufacturer(Ljava/lang/String;)Landroid/health/connect/datatypes/Device$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Device$Builder;->setModel(Ljava/lang/String;)Landroid/health/connect/datatypes/Device$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Device$Builder;->setType(I)Landroid/health/connect/datatypes/Device$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Device;->DEVICE_TYPE_CHEST_STRAP:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Device;->DEVICE_TYPE_FITNESS_BAND:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Device;->DEVICE_TYPE_HEAD_MOUNTED:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Device;->DEVICE_TYPE_PHONE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Device;->DEVICE_TYPE_RING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Device;->DEVICE_TYPE_SCALE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Device;->DEVICE_TYPE_SMART_DISPLAY:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Device;->DEVICE_TYPE_UNKNOWN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Device;->DEVICE_TYPE_WATCH:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Device;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/Device;->getManufacturer()Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Device;->getModel()Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Device;->getType()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Device;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/DistanceRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;Landroid/health/connect/datatypes/units/Length;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/DistanceRecord$Builder;->build()Landroid/health/connect/datatypes/DistanceRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/DistanceRecord$Builder;->clearEndZoneOffset()Landroid/health/connect/datatypes/DistanceRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/DistanceRecord$Builder;->clearStartZoneOffset()Landroid/health/connect/datatypes/DistanceRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/DistanceRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/DistanceRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/DistanceRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/DistanceRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/DistanceRecord;->DISTANCE_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/DistanceRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/DistanceRecord;->getDistance()Landroid/health/connect/datatypes/units/Length;,public-api,system-api,test-api
Landroid/health/connect/datatypes/DistanceRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/ElevationGainedRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;Landroid/health/connect/datatypes/units/Length;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/ElevationGainedRecord$Builder;->build()Landroid/health/connect/datatypes/ElevationGainedRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ElevationGainedRecord$Builder;->clearEndZoneOffset()Landroid/health/connect/datatypes/ElevationGainedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ElevationGainedRecord$Builder;->clearStartZoneOffset()Landroid/health/connect/datatypes/ElevationGainedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ElevationGainedRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/ElevationGainedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ElevationGainedRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/ElevationGainedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ElevationGainedRecord;->ELEVATION_GAINED_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ElevationGainedRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/ElevationGainedRecord;->getElevation()Landroid/health/connect/datatypes/units/Length;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ElevationGainedRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseLap$Builder;-><init>(Ljava/time/Instant;Ljava/time/Instant;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseLap$Builder;->build()Landroid/health/connect/datatypes/ExerciseLap;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseLap$Builder;->setLength(Landroid/health/connect/datatypes/units/Length;)Landroid/health/connect/datatypes/ExerciseLap$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseLap;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseLap;->getEndTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseLap;->getLength()Landroid/health/connect/datatypes/units/Length;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseLap;->getStartTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseLap;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$Location$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$Location$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$Location$Builder;-><init>(Ljava/time/Instant;DD)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$Location$Builder;->build()Landroid/health/connect/datatypes/ExerciseRoute$Location;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$Location$Builder;->setAltitude(Landroid/health/connect/datatypes/units/Length;)Landroid/health/connect/datatypes/ExerciseRoute$Location$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$Location$Builder;->setHorizontalAccuracy(Landroid/health/connect/datatypes/units/Length;)Landroid/health/connect/datatypes/ExerciseRoute$Location$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$Location$Builder;->setVerticalAccuracy(Landroid/health/connect/datatypes/units/Length;)Landroid/health/connect/datatypes/ExerciseRoute$Location$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$Location;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$Location;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$Location;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$Location;->getAltitude()Landroid/health/connect/datatypes/units/Length;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$Location;->getHorizontalAccuracy()Landroid/health/connect/datatypes/units/Length;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$Location;->getLatitude()D,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$Location;->getLongitude()D,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$Location;->getTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$Location;->getVerticalAccuracy()Landroid/health/connect/datatypes/units/Length;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$Location;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute$Location;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute;-><init>(Ljava/util/List;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute;->CREATOR:Landroid/os/Parcelable$Creator;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute;->getRouteLocations()Ljava/util/List;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseRoute;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegment$Builder;-><init>(Ljava/time/Instant;Ljava/time/Instant;I)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegment$Builder;->build()Landroid/health/connect/datatypes/ExerciseSegment;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegment$Builder;->setRepetitionsCount(I)Landroid/health/connect/datatypes/ExerciseSegment$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegment;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegment;->getEndTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegment;->getRepetitionsCount()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegment;->getSegmentType()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegment;->getStartTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegment;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_ARM_CURL:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_BACK_EXTENSION:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_BALL_SLAM:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_BARBELL_SHOULDER_PRESS:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_BENCH_PRESS:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_BENCH_SIT_UP:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_BIKING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_BIKING_STATIONARY:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_BURPEE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_CRUNCH:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_DEADLIFT:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_DOUBLE_ARM_TRICEPS_EXTENSION:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_DUMBBELL_CURL_LEFT_ARM:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_DUMBBELL_CURL_RIGHT_ARM:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_DUMBBELL_FRONT_RAISE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_DUMBBELL_LATERAL_RAISE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_DUMBBELL_ROW:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_DUMBBELL_TRICEPS_EXTENSION_LEFT_ARM:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_DUMBBELL_TRICEPS_EXTENSION_RIGHT_ARM:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_DUMBBELL_TRICEPS_EXTENSION_TWO_ARM:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_ELLIPTICAL:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_FORWARD_TWIST:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_FRONT_RAISE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_HIGH_INTENSITY_INTERVAL_TRAINING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_HIP_THRUST:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_HULA_HOOP:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_JUMPING_JACK:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_JUMP_ROPE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_KETTLEBELL_SWING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_LATERAL_RAISE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_LAT_PULL_DOWN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_LEG_CURL:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_LEG_EXTENSION:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_LEG_PRESS:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_LEG_RAISE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_LUNGE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_MOUNTAIN_CLIMBER:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_OTHER_WORKOUT:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_PAUSE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_PILATES:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_PLANK:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_PULL_UP:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_PUNCH:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_REST:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_ROWING_MACHINE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_RUNNING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_RUNNING_TREADMILL:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_SHOULDER_PRESS:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_SINGLE_ARM_TRICEPS_EXTENSION:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_SIT_UP:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_SQUAT:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_STAIR_CLIMBING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_STAIR_CLIMBING_MACHINE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_STRETCHING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_SWIMMING_BACKSTROKE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_SWIMMING_BREASTSTROKE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_SWIMMING_BUTTERFLY:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_SWIMMING_FREESTYLE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_SWIMMING_MIXED:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_SWIMMING_OPEN_WATER:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_SWIMMING_OTHER:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_SWIMMING_POOL:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_UNKNOWN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_UPPER_TWIST:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_WALKING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_WEIGHTLIFTING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_WHEELCHAIR:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSegmentType;->EXERCISE_SEGMENT_TYPE_YOGA:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord$$ExternalSyntheticLambda0;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord$$ExternalSyntheticLambda1;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;I)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;->build()Landroid/health/connect/datatypes/ExerciseSessionRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;->clearEndZoneOffset()Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;->clearStartZoneOffset()Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;->setLaps(Ljava/util/List;)Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;->setNotes(Ljava/lang/CharSequence;)Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;->setRoute(Landroid/health/connect/datatypes/ExerciseRoute;)Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;->setSegments(Ljava/util/List;)Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;->setTitle(Ljava/lang/CharSequence;)Landroid/health/connect/datatypes/ExerciseSessionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord;->EXERCISE_DURATION_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord;->getExerciseType()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord;->getLaps()Ljava/util/List;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord;->getNotes()Ljava/lang/CharSequence;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord;->getRoute()Landroid/health/connect/datatypes/ExerciseRoute;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord;->getSegments()Ljava/util/List;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord;->getTitle()Ljava/lang/CharSequence;,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord;->hasRoute()Z,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_BADMINTON:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_BASEBALL:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_BASKETBALL:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_BIKING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_BIKING_STATIONARY:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_BOOT_CAMP:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_BOXING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_CALISTHENICS:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_CRICKET:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_DANCING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_ELLIPTICAL:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_EXERCISE_CLASS:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_FENCING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_FOOTBALL_AMERICAN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_FOOTBALL_AUSTRALIAN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_FRISBEE_DISC:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_GOLF:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_GUIDED_BREATHING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_GYMNASTICS:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_HANDBALL:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_HIGH_INTENSITY_INTERVAL_TRAINING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_HIKING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_ICE_HOCKEY:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_ICE_SKATING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_MARTIAL_ARTS:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_OTHER_WORKOUT:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_PADDLING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_PARAGLIDING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_PILATES:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_RACQUETBALL:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_ROCK_CLIMBING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_ROLLER_HOCKEY:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_ROWING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_ROWING_MACHINE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_RUGBY:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_RUNNING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_RUNNING_TREADMILL:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_SAILING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_SCUBA_DIVING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_SKATING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_SKIING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_SNOWBOARDING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_SNOWSHOEING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_SOCCER:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_SOFTBALL:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_SQUASH:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_STAIR_CLIMBING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_STAIR_CLIMBING_MACHINE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_STRENGTH_TRAINING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_STRETCHING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_SURFING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_SWIMMING_OPEN_WATER:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_SWIMMING_POOL:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_TABLE_TENNIS:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_TENNIS:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_UNKNOWN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_VOLLEYBALL:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_WALKING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_WATER_POLO:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_WEIGHTLIFTING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_WHEELCHAIR:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/ExerciseSessionType;->EXERCISE_SESSION_TYPE_YOGA:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/FloorsClimbedRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;D)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/FloorsClimbedRecord$Builder;->build()Landroid/health/connect/datatypes/FloorsClimbedRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/FloorsClimbedRecord$Builder;->clearEndZoneOffset()Landroid/health/connect/datatypes/FloorsClimbedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/FloorsClimbedRecord$Builder;->clearStartZoneOffset()Landroid/health/connect/datatypes/FloorsClimbedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/FloorsClimbedRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/FloorsClimbedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/FloorsClimbedRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/FloorsClimbedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/FloorsClimbedRecord;->FLOORS_CLIMBED_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/FloorsClimbedRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/FloorsClimbedRecord;->getFloors()D,public-api,system-api,test-api
Landroid/health/connect/datatypes/FloorsClimbedRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateRecord$$ExternalSyntheticLambda0;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;Ljava/util/List;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateRecord$Builder;->build()Landroid/health/connect/datatypes/HeartRateRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateRecord$Builder;->clearEndZoneOffset()Landroid/health/connect/datatypes/HeartRateRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateRecord$Builder;->clearStartZoneOffset()Landroid/health/connect/datatypes/HeartRateRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/HeartRateRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/HeartRateRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateRecord$HeartRateSample;-><init>(JLjava/time/Instant;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateRecord$HeartRateSample;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateRecord$HeartRateSample;->getBeatsPerMinute()J,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateRecord$HeartRateSample;->getTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateRecord$HeartRateSample;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateRecord;->BPM_AVG:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateRecord;->BPM_MAX:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateRecord;->BPM_MIN:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateRecord;->HEART_MEASUREMENTS_COUNT:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateRecord;->getSamples()Ljava/util/List;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateVariabilityRmssdRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;D)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateVariabilityRmssdRecord$Builder;->build()Landroid/health/connect/datatypes/HeartRateVariabilityRmssdRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateVariabilityRmssdRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/HeartRateVariabilityRmssdRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateVariabilityRmssdRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/HeartRateVariabilityRmssdRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateVariabilityRmssdRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateVariabilityRmssdRecord;->getHeartRateVariabilityMillis()D,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeartRateVariabilityRmssdRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeightRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Landroid/health/connect/datatypes/units/Length;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeightRecord$Builder;->build()Landroid/health/connect/datatypes/HeightRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeightRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/HeightRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeightRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/HeightRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeightRecord;->HEIGHT_AVG:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeightRecord;->HEIGHT_MAX:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeightRecord;->HEIGHT_MIN:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeightRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeightRecord;->getHeight()Landroid/health/connect/datatypes/units/Length;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HeightRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/HydrationRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;Landroid/health/connect/datatypes/units/Volume;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/HydrationRecord$Builder;->build()Landroid/health/connect/datatypes/HydrationRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HydrationRecord$Builder;->clearEndZoneOffset()Landroid/health/connect/datatypes/HydrationRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HydrationRecord$Builder;->clearStartZoneOffset()Landroid/health/connect/datatypes/HydrationRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HydrationRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/HydrationRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HydrationRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/HydrationRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HydrationRecord;->VOLUME_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HydrationRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/HydrationRecord;->getVolume()Landroid/health/connect/datatypes/units/Volume;,public-api,system-api,test-api
Landroid/health/connect/datatypes/HydrationRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/InstantRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/InstantRecord;->getTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/datatypes/InstantRecord;->getZoneOffset()Ljava/time/ZoneOffset;,public-api,system-api,test-api
Landroid/health/connect/datatypes/InstantRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/IntermenstrualBleedingRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/IntermenstrualBleedingRecord$Builder;->build()Landroid/health/connect/datatypes/IntermenstrualBleedingRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/IntermenstrualBleedingRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/IntermenstrualBleedingRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/IntermenstrualBleedingRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/IntermenstrualBleedingRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/IntermenstrualBleedingRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/IntermenstrualBleedingRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/IntervalRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/IntervalRecord;->getEndTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/datatypes/IntervalRecord;->getEndZoneOffset()Ljava/time/ZoneOffset;,public-api,system-api,test-api
Landroid/health/connect/datatypes/IntervalRecord;->getStartTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/datatypes/IntervalRecord;->getStartZoneOffset()Ljava/time/ZoneOffset;,public-api,system-api,test-api
Landroid/health/connect/datatypes/IntervalRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/LeanBodyMassRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Landroid/health/connect/datatypes/units/Mass;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/LeanBodyMassRecord$Builder;->build()Landroid/health/connect/datatypes/LeanBodyMassRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/LeanBodyMassRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/LeanBodyMassRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/LeanBodyMassRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/LeanBodyMassRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/LeanBodyMassRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/LeanBodyMassRecord;->getMass()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/LeanBodyMassRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/MealType;->MEAL_TYPE_BREAKFAST:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/MealType;->MEAL_TYPE_DINNER:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/MealType;->MEAL_TYPE_LUNCH:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/MealType;->MEAL_TYPE_SNACK:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/MealType;->MEAL_TYPE_UNKNOWN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/MenstruationFlowRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;I)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/MenstruationFlowRecord$Builder;->build()Landroid/health/connect/datatypes/MenstruationFlowRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/MenstruationFlowRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/MenstruationFlowRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/MenstruationFlowRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/MenstruationFlowRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/MenstruationFlowRecord$MenstruationFlowType;->FLOW_HEAVY:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/MenstruationFlowRecord$MenstruationFlowType;->FLOW_LIGHT:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/MenstruationFlowRecord$MenstruationFlowType;->FLOW_MEDIUM:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/MenstruationFlowRecord$MenstruationFlowType;->FLOW_UNKNOWN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/MenstruationFlowRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/MenstruationFlowRecord;->getFlow()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/MenstruationFlowRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/MenstruationPeriodRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/MenstruationPeriodRecord$Builder;->build()Landroid/health/connect/datatypes/MenstruationPeriodRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/MenstruationPeriodRecord$Builder;->clearEndZoneOffset()Landroid/health/connect/datatypes/MenstruationPeriodRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/MenstruationPeriodRecord$Builder;->clearStartZoneOffset()Landroid/health/connect/datatypes/MenstruationPeriodRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/MenstruationPeriodRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/MenstruationPeriodRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/MenstruationPeriodRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/MenstruationPeriodRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/MenstruationPeriodRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/MenstruationPeriodRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata$Builder;-><init>()V,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata$Builder;->build()Landroid/health/connect/datatypes/Metadata;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata$Builder;->setClientRecordId(Ljava/lang/String;)Landroid/health/connect/datatypes/Metadata$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata$Builder;->setClientRecordVersion(J)Landroid/health/connect/datatypes/Metadata$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata$Builder;->setDataOrigin(Landroid/health/connect/datatypes/DataOrigin;)Landroid/health/connect/datatypes/Metadata$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata$Builder;->setDevice(Landroid/health/connect/datatypes/Device;)Landroid/health/connect/datatypes/Metadata$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata$Builder;->setId(Ljava/lang/String;)Landroid/health/connect/datatypes/Metadata$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata$Builder;->setLastModifiedTime(Ljava/time/Instant;)Landroid/health/connect/datatypes/Metadata$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata$Builder;->setRecordingMethod(I)Landroid/health/connect/datatypes/Metadata$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata;->RECORDING_METHOD_ACTIVELY_RECORDED:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata;->RECORDING_METHOD_AUTOMATICALLY_RECORDED:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata;->RECORDING_METHOD_MANUAL_ENTRY:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata;->RECORDING_METHOD_UNKNOWN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata;->getClientRecordId()Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata;->getClientRecordVersion()J,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata;->getDataOrigin()Landroid/health/connect/datatypes/DataOrigin;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata;->getDevice()Landroid/health/connect/datatypes/Device;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata;->getId()Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata;->getLastModifiedTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata;->getRecordingMethod()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Metadata;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->build()Landroid/health/connect/datatypes/NutritionRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->clearEndZoneOffset()Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->clearStartZoneOffset()Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setBiotin(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setCaffeine(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setCalcium(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setChloride(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setCholesterol(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setChromium(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setCopper(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setDietaryFiber(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setEnergy(Landroid/health/connect/datatypes/units/Energy;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setEnergyFromFat(Landroid/health/connect/datatypes/units/Energy;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setFolate(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setFolicAcid(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setIodine(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setIron(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setMagnesium(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setManganese(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setMealName(Ljava/lang/String;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setMealType(I)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setMolybdenum(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setMonounsaturatedFat(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setNiacin(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setPantothenicAcid(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setPhosphorus(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setPolyunsaturatedFat(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setPotassium(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setProtein(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setRiboflavin(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setSaturatedFat(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setSelenium(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setSodium(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setSugar(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setThiamin(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setTotalCarbohydrate(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setTotalFat(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setTransFat(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setUnsaturatedFat(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setVitaminA(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setVitaminB12(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setVitaminB6(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setVitaminC(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setVitaminD(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setVitaminE(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setVitaminK(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord$Builder;->setZinc(Landroid/health/connect/datatypes/units/Mass;)Landroid/health/connect/datatypes/NutritionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->BIOTIN_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->CAFFEINE_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->CALCIUM_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->CHLORIDE_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->CHOLESTEROL_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->CHROMIUM_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->COPPER_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->DIETARY_FIBER_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->ENERGY_FROM_FAT_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->ENERGY_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->FOLATE_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->FOLIC_ACID_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->IODINE_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->IRON_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->MAGNESIUM_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->MANGANESE_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->MOLYBDENUM_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->MONOUNSATURATED_FAT_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->NIACIN_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->PANTOTHENIC_ACID_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->PHOSPHORUS_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->POLYUNSATURATED_FAT_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->POTASSIUM_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->PROTEIN_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->RIBOFLAVIN_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->SATURATED_FAT_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->SELENIUM_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->SODIUM_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->SUGAR_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->THIAMIN_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->TOTAL_CARBOHYDRATE_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->TOTAL_FAT_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->TRANS_FAT_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->UNSATURATED_FAT_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->VITAMIN_A_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->VITAMIN_B12_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->VITAMIN_B6_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->VITAMIN_C_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->VITAMIN_D_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->VITAMIN_E_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->VITAMIN_K_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->ZINC_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getBiotin()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getCaffeine()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getCalcium()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getChloride()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getCholesterol()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getChromium()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getCopper()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getDietaryFiber()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getEnergy()Landroid/health/connect/datatypes/units/Energy;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getEnergyFromFat()Landroid/health/connect/datatypes/units/Energy;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getFolate()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getFolicAcid()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getIodine()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getIron()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getMagnesium()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getManganese()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getMealName()Ljava/lang/String;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getMealType()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getMolybdenum()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getMonounsaturatedFat()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getNiacin()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getPantothenicAcid()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getPhosphorus()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getPolyunsaturatedFat()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getPotassium()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getProtein()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getRiboflavin()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getSaturatedFat()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getSelenium()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getSodium()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getSugar()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getThiamin()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getTotalCarbohydrate()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getTotalFat()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getTransFat()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getUnsaturatedFat()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getVitaminA()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getVitaminB12()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getVitaminB6()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getVitaminC()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getVitaminD()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getVitaminE()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getVitaminK()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->getZinc()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/NutritionRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/OvulationTestRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;I)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/OvulationTestRecord$Builder;->build()Landroid/health/connect/datatypes/OvulationTestRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/OvulationTestRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/OvulationTestRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/OvulationTestRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/OvulationTestRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/OvulationTestRecord$OvulationTestResult;->RESULT_HIGH:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/OvulationTestRecord$OvulationTestResult;->RESULT_INCONCLUSIVE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/OvulationTestRecord$OvulationTestResult;->RESULT_NEGATIVE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/OvulationTestRecord$OvulationTestResult;->RESULT_POSITIVE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/OvulationTestRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/OvulationTestRecord;->getResult()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/OvulationTestRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/OxygenSaturationRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Landroid/health/connect/datatypes/units/Percentage;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/OxygenSaturationRecord$Builder;->build()Landroid/health/connect/datatypes/OxygenSaturationRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/OxygenSaturationRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/OxygenSaturationRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/OxygenSaturationRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/OxygenSaturationRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/OxygenSaturationRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/OxygenSaturationRecord;->getPercentage()Landroid/health/connect/datatypes/units/Percentage;,public-api,system-api,test-api
Landroid/health/connect/datatypes/OxygenSaturationRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/PowerRecord$$ExternalSyntheticLambda0;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/PowerRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;Ljava/util/List;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/PowerRecord$Builder;->build()Landroid/health/connect/datatypes/PowerRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/PowerRecord$Builder;->clearEndZoneOffset()Landroid/health/connect/datatypes/PowerRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/PowerRecord$Builder;->clearStartZoneOffset()Landroid/health/connect/datatypes/PowerRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/PowerRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/PowerRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/PowerRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/PowerRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/PowerRecord$PowerRecordSample;-><init>(Landroid/health/connect/datatypes/units/Power;Ljava/time/Instant;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/PowerRecord$PowerRecordSample;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/PowerRecord$PowerRecordSample;->getPower()Landroid/health/connect/datatypes/units/Power;,public-api,system-api,test-api
Landroid/health/connect/datatypes/PowerRecord$PowerRecordSample;->getTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/datatypes/PowerRecord$PowerRecordSample;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/PowerRecord;->POWER_AVG:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/PowerRecord;->POWER_MAX:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/PowerRecord;->POWER_MIN:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/PowerRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/PowerRecord;->getSamples()Ljava/util/List;,public-api,system-api,test-api
Landroid/health/connect/datatypes/PowerRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/Record;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/Record;->getMetadata()Landroid/health/connect/datatypes/Metadata;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Record;->getRecordType()I,system-api,test-api
Landroid/health/connect/datatypes/Record;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_ACTIVE_CALORIES_BURNED:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_BASAL_BODY_TEMPERATURE:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_BASAL_METABOLIC_RATE:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_BLOOD_GLUCOSE:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_BLOOD_PRESSURE:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_BODY_FAT:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_BODY_TEMPERATURE:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_BODY_WATER_MASS:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_BONE_MASS:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_CERVICAL_MUCUS:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_CYCLING_PEDALING_CADENCE:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_DISTANCE:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_ELEVATION_GAINED:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_EXERCISE_SESSION:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_FLOORS_CLIMBED:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_HEART_RATE:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_HEART_RATE_VARIABILITY_RMSSD:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_HEIGHT:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_HYDRATION:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_INTERMENSTRUAL_BLEEDING:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_LEAN_BODY_MASS:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_MENSTRUATION_FLOW:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_MENSTRUATION_PERIOD:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_NUTRITION:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_OVULATION_TEST:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_OXYGEN_SATURATION:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_POWER:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_RESPIRATORY_RATE:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_RESTING_HEART_RATE:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_SEXUAL_ACTIVITY:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_SLEEP_SESSION:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_SPEED:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_STEPS:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_STEPS_CADENCE:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_TOTAL_CALORIES_BURNED:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_UNKNOWN:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_VO2_MAX:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_WEIGHT:I,system-api,test-api
Landroid/health/connect/datatypes/RecordTypeIdentifier;->RECORD_TYPE_WHEELCHAIR_PUSHES:I,system-api,test-api
Landroid/health/connect/datatypes/RespiratoryRateRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;D)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/RespiratoryRateRecord$Builder;->build()Landroid/health/connect/datatypes/RespiratoryRateRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/RespiratoryRateRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/RespiratoryRateRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/RespiratoryRateRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/RespiratoryRateRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/RespiratoryRateRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/RespiratoryRateRecord;->getRate()D,public-api,system-api,test-api
Landroid/health/connect/datatypes/RespiratoryRateRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/RestingHeartRateRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;J)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/RestingHeartRateRecord$Builder;->build()Landroid/health/connect/datatypes/RestingHeartRateRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/RestingHeartRateRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/RestingHeartRateRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/RestingHeartRateRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/RestingHeartRateRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/RestingHeartRateRecord;->BPM_AVG:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/RestingHeartRateRecord;->BPM_MAX:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/RestingHeartRateRecord;->BPM_MIN:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/RestingHeartRateRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/RestingHeartRateRecord;->getBeatsPerMinute()J,public-api,system-api,test-api
Landroid/health/connect/datatypes/RestingHeartRateRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/SexualActivityRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;I)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/SexualActivityRecord$Builder;->build()Landroid/health/connect/datatypes/SexualActivityRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SexualActivityRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/SexualActivityRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SexualActivityRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/SexualActivityRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SexualActivityRecord$SexualActivityProtectionUsed;->PROTECTION_USED_PROTECTED:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/SexualActivityRecord$SexualActivityProtectionUsed;->PROTECTION_USED_UNKNOWN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/SexualActivityRecord$SexualActivityProtectionUsed;->PROTECTION_USED_UNPROTECTED:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/SexualActivityRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/SexualActivityRecord;->getProtectionUsed()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/SexualActivityRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$$ExternalSyntheticLambda0;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$Builder;->build()Landroid/health/connect/datatypes/SleepSessionRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$Builder;->clearEndZoneOffset()Landroid/health/connect/datatypes/SleepSessionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$Builder;->clearStartZoneOffset()Landroid/health/connect/datatypes/SleepSessionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/SleepSessionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$Builder;->setNotes(Ljava/lang/CharSequence;)Landroid/health/connect/datatypes/SleepSessionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$Builder;->setStages(Ljava/util/List;)Landroid/health/connect/datatypes/SleepSessionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/SleepSessionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$Builder;->setTitle(Ljava/lang/CharSequence;)Landroid/health/connect/datatypes/SleepSessionRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$Stage;-><init>(Ljava/time/Instant;Ljava/time/Instant;I)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$Stage;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$Stage;->getEndTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$Stage;->getStartTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$Stage;->getType()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$Stage;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$StageType;->STAGE_TYPE_AWAKE:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$StageType;->STAGE_TYPE_AWAKE_IN_BED:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$StageType;->STAGE_TYPE_AWAKE_OUT_OF_BED:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$StageType;->STAGE_TYPE_SLEEPING:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$StageType;->STAGE_TYPE_SLEEPING_DEEP:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$StageType;->STAGE_TYPE_SLEEPING_LIGHT:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$StageType;->STAGE_TYPE_SLEEPING_REM:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord$StageType;->STAGE_TYPE_UNKNOWN:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord;->SLEEP_DURATION_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord;->getNotes()Ljava/lang/CharSequence;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord;->getStages()Ljava/util/List;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord;->getTitle()Ljava/lang/CharSequence;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SleepSessionRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/SpeedRecord$$ExternalSyntheticLambda0;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/SpeedRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;Ljava/util/List;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/SpeedRecord$Builder;->build()Landroid/health/connect/datatypes/SpeedRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SpeedRecord$Builder;->clearEndZoneOffset()Landroid/health/connect/datatypes/SpeedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SpeedRecord$Builder;->clearStartZoneOffset()Landroid/health/connect/datatypes/SpeedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SpeedRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/SpeedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SpeedRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/SpeedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SpeedRecord$SpeedRecordSample;-><init>(Landroid/health/connect/datatypes/units/Velocity;Ljava/time/Instant;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/SpeedRecord$SpeedRecordSample;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/SpeedRecord$SpeedRecordSample;->getSpeed()Landroid/health/connect/datatypes/units/Velocity;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SpeedRecord$SpeedRecordSample;->getTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SpeedRecord$SpeedRecordSample;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/SpeedRecord;->SPEED_AVG:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SpeedRecord;->SPEED_MAX:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SpeedRecord;->SPEED_MIN:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SpeedRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/SpeedRecord;->getSamples()Ljava/util/List;,public-api,system-api,test-api
Landroid/health/connect/datatypes/SpeedRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsCadenceRecord$$ExternalSyntheticLambda0;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsCadenceRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;Ljava/util/List;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsCadenceRecord$Builder;->build()Landroid/health/connect/datatypes/StepsCadenceRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsCadenceRecord$Builder;->clearEndZoneOffset()Landroid/health/connect/datatypes/StepsCadenceRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsCadenceRecord$Builder;->clearStartZoneOffset()Landroid/health/connect/datatypes/StepsCadenceRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsCadenceRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/StepsCadenceRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsCadenceRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/StepsCadenceRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsCadenceRecord$StepsCadenceRecordSample;-><init>(DLjava/time/Instant;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsCadenceRecord$StepsCadenceRecordSample;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsCadenceRecord$StepsCadenceRecordSample;->getRate()D,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsCadenceRecord$StepsCadenceRecordSample;->getTime()Ljava/time/Instant;,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsCadenceRecord$StepsCadenceRecordSample;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsCadenceRecord;->STEPS_CADENCE_RATE_AVG:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsCadenceRecord;->STEPS_CADENCE_RATE_MAX:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsCadenceRecord;->STEPS_CADENCE_RATE_MIN:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsCadenceRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsCadenceRecord;->getSamples()Ljava/util/List;,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsCadenceRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;J)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsRecord$Builder;->build()Landroid/health/connect/datatypes/StepsRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsRecord$Builder;->clearEndZoneOffset()Landroid/health/connect/datatypes/StepsRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsRecord$Builder;->clearStartZoneOffset()Landroid/health/connect/datatypes/StepsRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/StepsRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/StepsRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsRecord;->STEPS_COUNT_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsRecord;->getCount()J,public-api,system-api,test-api
Landroid/health/connect/datatypes/StepsRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/TimeInterval;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/TimeInterval;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/TimeInterval;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/TotalCaloriesBurnedRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;Landroid/health/connect/datatypes/units/Energy;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/TotalCaloriesBurnedRecord$Builder;->build()Landroid/health/connect/datatypes/TotalCaloriesBurnedRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/TotalCaloriesBurnedRecord$Builder;->clearEndZoneOffset()Landroid/health/connect/datatypes/TotalCaloriesBurnedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/TotalCaloriesBurnedRecord$Builder;->clearStartZoneOffset()Landroid/health/connect/datatypes/TotalCaloriesBurnedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/TotalCaloriesBurnedRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/TotalCaloriesBurnedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/TotalCaloriesBurnedRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/TotalCaloriesBurnedRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/TotalCaloriesBurnedRecord;->ENERGY_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/TotalCaloriesBurnedRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/TotalCaloriesBurnedRecord;->getEnergy()Landroid/health/connect/datatypes/units/Energy;,public-api,system-api,test-api
Landroid/health/connect/datatypes/TotalCaloriesBurnedRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/Vo2MaxRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;ID)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/Vo2MaxRecord$Builder;->build()Landroid/health/connect/datatypes/Vo2MaxRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Vo2MaxRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/Vo2MaxRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Vo2MaxRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/Vo2MaxRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/Vo2MaxRecord$Vo2MaxMeasurementMethod;->MEASUREMENT_METHOD_COOPER_TEST:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Vo2MaxRecord$Vo2MaxMeasurementMethod;->MEASUREMENT_METHOD_HEART_RATE_RATIO:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Vo2MaxRecord$Vo2MaxMeasurementMethod;->MEASUREMENT_METHOD_METABOLIC_CART:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Vo2MaxRecord$Vo2MaxMeasurementMethod;->MEASUREMENT_METHOD_MULTISTAGE_FITNESS_TEST:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Vo2MaxRecord$Vo2MaxMeasurementMethod;->MEASUREMENT_METHOD_OTHER:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Vo2MaxRecord$Vo2MaxMeasurementMethod;->MEASUREMENT_METHOD_ROCKPORT_FITNESS_TEST:I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Vo2MaxRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/Vo2MaxRecord;->getMeasurementMethod()I,public-api,system-api,test-api
Landroid/health/connect/datatypes/Vo2MaxRecord;->getVo2MillilitersPerMinuteKilogram()D,public-api,system-api,test-api
Landroid/health/connect/datatypes/Vo2MaxRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/WeightRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Landroid/health/connect/datatypes/units/Mass;)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/WeightRecord$Builder;->build()Landroid/health/connect/datatypes/WeightRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/WeightRecord$Builder;->clearZoneOffset()Landroid/health/connect/datatypes/WeightRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/WeightRecord$Builder;->setZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/WeightRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/WeightRecord;->WEIGHT_AVG:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/WeightRecord;->WEIGHT_MAX:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/WeightRecord;->WEIGHT_MIN:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/WeightRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/WeightRecord;->getWeight()Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/WeightRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/WheelchairPushesRecord$Builder;-><init>(Landroid/health/connect/datatypes/Metadata;Ljava/time/Instant;Ljava/time/Instant;J)V,public-api,system-api,test-api
Landroid/health/connect/datatypes/WheelchairPushesRecord$Builder;->build()Landroid/health/connect/datatypes/WheelchairPushesRecord;,public-api,system-api,test-api
Landroid/health/connect/datatypes/WheelchairPushesRecord$Builder;->clearEndZoneOffset()Landroid/health/connect/datatypes/WheelchairPushesRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/WheelchairPushesRecord$Builder;->clearStartZoneOffset()Landroid/health/connect/datatypes/WheelchairPushesRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/WheelchairPushesRecord$Builder;->setEndZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/WheelchairPushesRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/WheelchairPushesRecord$Builder;->setStartZoneOffset(Ljava/time/ZoneOffset;)Landroid/health/connect/datatypes/WheelchairPushesRecord$Builder;,public-api,system-api,test-api
Landroid/health/connect/datatypes/WheelchairPushesRecord;->WHEEL_CHAIR_PUSHES_COUNT_TOTAL:Landroid/health/connect/datatypes/AggregationType;,public-api,system-api,test-api
Landroid/health/connect/datatypes/WheelchairPushesRecord;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/WheelchairPushesRecord;->getCount()J,public-api,system-api,test-api
Landroid/health/connect/datatypes/WheelchairPushesRecord;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/BloodGlucose;->compareTo(Landroid/health/connect/datatypes/units/BloodGlucose;)I,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/BloodGlucose;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/BloodGlucose;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/BloodGlucose;->fromMillimolesPerLiter(D)Landroid/health/connect/datatypes/units/BloodGlucose;,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/BloodGlucose;->getInMillimolesPerLiter()D,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/BloodGlucose;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/BloodGlucose;->toString()Ljava/lang/String;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Energy;->compareTo(Landroid/health/connect/datatypes/units/Energy;)I,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Energy;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Energy;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Energy;->fromCalories(D)Landroid/health/connect/datatypes/units/Energy;,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Energy;->getInCalories()D,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Energy;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Energy;->toString()Ljava/lang/String;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Length;->compareTo(Landroid/health/connect/datatypes/units/Length;)I,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Length;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Length;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Length;->fromMeters(D)Landroid/health/connect/datatypes/units/Length;,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Length;->getInMeters()D,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Length;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Length;->toString()Ljava/lang/String;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Mass;->compareTo(Landroid/health/connect/datatypes/units/Mass;)I,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Mass;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Mass;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Mass;->fromGrams(D)Landroid/health/connect/datatypes/units/Mass;,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Mass;->getInGrams()D,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Mass;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Mass;->toString()Ljava/lang/String;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Percentage;->compareTo(Landroid/health/connect/datatypes/units/Percentage;)I,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Percentage;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Percentage;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Percentage;->fromValue(D)Landroid/health/connect/datatypes/units/Percentage;,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Percentage;->getValue()D,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Percentage;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Percentage;->toString()Ljava/lang/String;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Power;->compareTo(Landroid/health/connect/datatypes/units/Power;)I,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Power;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Power;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Power;->fromWatts(D)Landroid/health/connect/datatypes/units/Power;,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Power;->getInWatts()D,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Power;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Power;->toString()Ljava/lang/String;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Pressure;->compareTo(Landroid/health/connect/datatypes/units/Pressure;)I,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Pressure;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Pressure;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Pressure;->fromMillimetersOfMercury(D)Landroid/health/connect/datatypes/units/Pressure;,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Pressure;->getInMillimetersOfMercury()D,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Pressure;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Pressure;->toString()Ljava/lang/String;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Temperature;->compareTo(Landroid/health/connect/datatypes/units/Temperature;)I,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Temperature;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Temperature;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Temperature;->fromCelsius(D)Landroid/health/connect/datatypes/units/Temperature;,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Temperature;->getInCelsius()D,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Temperature;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Temperature;->toString()Ljava/lang/String;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Velocity;->compareTo(Landroid/health/connect/datatypes/units/Velocity;)I,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Velocity;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Velocity;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Velocity;->fromMetersPerSecond(D)Landroid/health/connect/datatypes/units/Velocity;,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Velocity;->getInMetersPerSecond()D,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Velocity;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Velocity;->toString()Ljava/lang/String;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Volume;->compareTo(Landroid/health/connect/datatypes/units/Volume;)I,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Volume;->compareTo(Ljava/lang/Object;)I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Volume;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Volume;->fromLiters(D)Landroid/health/connect/datatypes/units/Volume;,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Volume;->getInLiters()D,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Volume;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/units/Volume;->toString()Ljava/lang/String;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/datatypes/validation/ValidationUtils$$ExternalSyntheticLambda0;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/CyclingPedalingCadenceRecordInternal$CyclingPedalingCadenceRecordSample;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/CyclingPedalingCadenceRecordInternal$CyclingPedalingCadenceRecordSample;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/ExerciseLapInternal$$ExternalSyntheticLambda0;->accept(Ljava/lang/Object;)V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/ExerciseLapInternal;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/ExerciseLapInternal;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/ExerciseRouteInternal$LocationInternal;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/ExerciseRouteInternal$LocationInternal;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/ExerciseRouteInternal;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/ExerciseRouteInternal;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/ExerciseSegmentInternal$$ExternalSyntheticLambda0;->accept(Ljava/lang/Object;)V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/ExerciseSegmentInternal$$ExternalSyntheticLambda1;->accept(Ljava/lang/Object;)V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/ExerciseSegmentInternal;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/ExerciseSegmentInternal;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/HeartRateRecordInternal$HeartRateSample;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/HeartRateRecordInternal$HeartRateSample;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/PowerRecordInternal$PowerRecordSample;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/PowerRecordInternal$PowerRecordSample;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/SleepStageInternal$$ExternalSyntheticLambda0;->accept(Ljava/lang/Object;)V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/SleepStageInternal$$ExternalSyntheticLambda1;->accept(Ljava/lang/Object;)V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/SleepStageInternal;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/SleepStageInternal;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/SpeedRecordInternal$SpeedRecordSample;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/SpeedRecordInternal$SpeedRecordSample;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/StepsCadenceRecordInternal$StepsCadenceRecordSample;->equals(Ljava/lang/Object;)Z,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/StepsCadenceRecordInternal$StepsCadenceRecordSample;->hashCode()I,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/internal/datatypes/utils/RecordMapper$$ExternalSyntheticLambda0;->accept(Ljava/lang/Object;Ljava/lang/Object;)V,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/migration/AppInfoMigrationPayload$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/AppInfoMigrationPayload$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/AppInfoMigrationPayload$Builder;-><init>(Ljava/lang/String;Ljava/lang/String;)V,system-api,test-api
Landroid/health/connect/migration/AppInfoMigrationPayload$Builder;->build()Landroid/health/connect/migration/AppInfoMigrationPayload;,system-api,test-api
Landroid/health/connect/migration/AppInfoMigrationPayload$Builder;->setAppIcon([B)Landroid/health/connect/migration/AppInfoMigrationPayload$Builder;,system-api,test-api
Landroid/health/connect/migration/AppInfoMigrationPayload$Builder;->setAppName(Ljava/lang/String;)Landroid/health/connect/migration/AppInfoMigrationPayload$Builder;,system-api,test-api
Landroid/health/connect/migration/AppInfoMigrationPayload$Builder;->setPackageName(Ljava/lang/String;)Landroid/health/connect/migration/AppInfoMigrationPayload$Builder;,system-api,test-api
Landroid/health/connect/migration/AppInfoMigrationPayload;->CREATOR:Landroid/os/Parcelable$Creator;,system-api,test-api
Landroid/health/connect/migration/AppInfoMigrationPayload;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/migration/AppInfoMigrationPayload;->getAppIcon()[B,system-api,test-api
Landroid/health/connect/migration/AppInfoMigrationPayload;->getAppName()Ljava/lang/String;,system-api,test-api
Landroid/health/connect/migration/AppInfoMigrationPayload;->getPackageName()Ljava/lang/String;,system-api,test-api
Landroid/health/connect/migration/AppInfoMigrationPayload;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/migration/HealthConnectMigrationUiState$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/HealthConnectMigrationUiState$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/HealthConnectMigrationUiState;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/migration/HealthConnectMigrationUiState;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/migration/MetadataMigrationPayload$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/MetadataMigrationPayload$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/MetadataMigrationPayload$Builder;-><init>()V,system-api,test-api
Landroid/health/connect/migration/MetadataMigrationPayload$Builder;->build()Landroid/health/connect/migration/MetadataMigrationPayload;,system-api,test-api
Landroid/health/connect/migration/MetadataMigrationPayload$Builder;->setRecordRetentionPeriodDays(I)Landroid/health/connect/migration/MetadataMigrationPayload$Builder;,system-api,test-api
Landroid/health/connect/migration/MetadataMigrationPayload;->CREATOR:Landroid/os/Parcelable$Creator;,system-api,test-api
Landroid/health/connect/migration/MetadataMigrationPayload;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/migration/MetadataMigrationPayload;->getRecordRetentionPeriodDays()I,system-api,test-api
Landroid/health/connect/migration/MetadataMigrationPayload;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/migration/MigrationEntity$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/MigrationEntity$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/MigrationEntity;-><init>(Ljava/lang/String;Landroid/health/connect/migration/MigrationPayload;)V,system-api,test-api
Landroid/health/connect/migration/MigrationEntity;->CREATOR:Landroid/os/Parcelable$Creator;,system-api,test-api
Landroid/health/connect/migration/MigrationEntity;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/migration/MigrationEntity;->getEntityId()Ljava/lang/String;,system-api,test-api
Landroid/health/connect/migration/MigrationEntity;->getPayload()Landroid/health/connect/migration/MigrationPayload;,system-api,test-api
Landroid/health/connect/migration/MigrationEntity;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/migration/MigrationEntityParcel$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/MigrationEntityParcel$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/MigrationEntityParcel;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/migration/MigrationEntityParcel;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/migration/MigrationException$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/MigrationException$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/MigrationException;-><init>(Ljava/lang/String;ILjava/lang/String;)V,system-api,test-api
Landroid/health/connect/migration/MigrationException;->CREATOR:Landroid/os/Parcelable$Creator;,system-api,test-api
Landroid/health/connect/migration/MigrationException;->ERROR_INTERNAL:I,system-api,test-api
Landroid/health/connect/migration/MigrationException;->ERROR_MIGRATE_ENTITY:I,system-api,test-api
Landroid/health/connect/migration/MigrationException;->ERROR_MIGRATION_UNAVAILABLE:I,system-api,test-api
Landroid/health/connect/migration/MigrationException;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/migration/MigrationException;->getErrorCode()I,system-api,test-api
Landroid/health/connect/migration/MigrationException;->getFailedEntityId()Ljava/lang/String;,system-api,test-api
Landroid/health/connect/migration/MigrationException;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/migration/MigrationPayload$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/MigrationPayload$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/MigrationPayload;->CREATOR:Landroid/os/Parcelable$Creator;,system-api,test-api
Landroid/health/connect/migration/MigrationPayload;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/migration/PermissionMigrationPayload$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/PermissionMigrationPayload$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/PermissionMigrationPayload$Builder;-><init>(Ljava/lang/String;Ljava/time/Instant;)V,system-api,test-api
Landroid/health/connect/migration/PermissionMigrationPayload$Builder;->addPermission(Ljava/lang/String;)Landroid/health/connect/migration/PermissionMigrationPayload$Builder;,system-api,test-api
Landroid/health/connect/migration/PermissionMigrationPayload$Builder;->build()Landroid/health/connect/migration/PermissionMigrationPayload;,system-api,test-api
Landroid/health/connect/migration/PermissionMigrationPayload$Builder;->setFirstGrantTime(Ljava/time/Instant;)Landroid/health/connect/migration/PermissionMigrationPayload$Builder;,system-api,test-api
Landroid/health/connect/migration/PermissionMigrationPayload$Builder;->setHoldingPackageName(Ljava/lang/String;)Landroid/health/connect/migration/PermissionMigrationPayload$Builder;,system-api,test-api
Landroid/health/connect/migration/PermissionMigrationPayload;->CREATOR:Landroid/os/Parcelable$Creator;,system-api,test-api
Landroid/health/connect/migration/PermissionMigrationPayload;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/migration/PermissionMigrationPayload;->getFirstGrantTime()Ljava/time/Instant;,system-api,test-api
Landroid/health/connect/migration/PermissionMigrationPayload;->getHoldingPackageName()Ljava/lang/String;,system-api,test-api
Landroid/health/connect/migration/PermissionMigrationPayload;->getPermissions()Ljava/util/List;,system-api,test-api
Landroid/health/connect/migration/PermissionMigrationPayload;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/migration/PriorityMigrationPayload$$ExternalSyntheticLambda0;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/migration/PriorityMigrationPayload$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/PriorityMigrationPayload$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/PriorityMigrationPayload$Builder;-><init>()V,system-api,test-api
Landroid/health/connect/migration/PriorityMigrationPayload$Builder;->addDataOrigin(Landroid/health/connect/datatypes/DataOrigin;)Landroid/health/connect/migration/PriorityMigrationPayload$Builder;,system-api,test-api
Landroid/health/connect/migration/PriorityMigrationPayload$Builder;->build()Landroid/health/connect/migration/PriorityMigrationPayload;,system-api,test-api
Landroid/health/connect/migration/PriorityMigrationPayload$Builder;->setDataCategory(I)Landroid/health/connect/migration/PriorityMigrationPayload$Builder;,system-api,test-api
Landroid/health/connect/migration/PriorityMigrationPayload;->CREATOR:Landroid/os/Parcelable$Creator;,system-api,test-api
Landroid/health/connect/migration/PriorityMigrationPayload;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/migration/PriorityMigrationPayload;->getDataCategory()I,system-api,test-api
Landroid/health/connect/migration/PriorityMigrationPayload;->getDataOrigins()Ljava/util/List;,system-api,test-api
Landroid/health/connect/migration/PriorityMigrationPayload;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/migration/RecordMigrationPayload$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/RecordMigrationPayload$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/migration/RecordMigrationPayload$Builder;-><init>(Ljava/lang/String;Ljava/lang/String;Landroid/health/connect/datatypes/Record;)V,system-api,test-api
Landroid/health/connect/migration/RecordMigrationPayload$Builder;->build()Landroid/health/connect/migration/RecordMigrationPayload;,system-api,test-api
Landroid/health/connect/migration/RecordMigrationPayload$Builder;->setOriginAppName(Ljava/lang/String;)Landroid/health/connect/migration/RecordMigrationPayload$Builder;,system-api,test-api
Landroid/health/connect/migration/RecordMigrationPayload$Builder;->setOriginPackageName(Ljava/lang/String;)Landroid/health/connect/migration/RecordMigrationPayload$Builder;,system-api,test-api
Landroid/health/connect/migration/RecordMigrationPayload$Builder;->setRecord(Landroid/health/connect/datatypes/Record;)Landroid/health/connect/migration/RecordMigrationPayload$Builder;,system-api,test-api
Landroid/health/connect/migration/RecordMigrationPayload;->CREATOR:Landroid/os/Parcelable$Creator;,system-api,test-api
Landroid/health/connect/migration/RecordMigrationPayload;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/migration/RecordMigrationPayload;->getOriginAppName()Ljava/lang/String;,system-api,test-api
Landroid/health/connect/migration/RecordMigrationPayload;->getOriginPackageName()Ljava/lang/String;,system-api,test-api
Landroid/health/connect/migration/RecordMigrationPayload;->getRecord()Landroid/health/connect/datatypes/Record;,system-api,test-api
Landroid/health/connect/migration/RecordMigrationPayload;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/ratelimiter/RateLimiter$$ExternalSyntheticLambda0;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/ratelimiter/RateLimiter$$ExternalSyntheticLambda1;->apply(Ljava/lang/Object;)Ljava/lang/Object;,core-platform-api,public-api,system-api,test-api
Landroid/health/connect/restore/BackupFileNamesSet$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/restore/BackupFileNamesSet$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/restore/BackupFileNamesSet;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/restore/BackupFileNamesSet;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/restore/StageRemoteDataException$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/restore/StageRemoteDataException$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/restore/StageRemoteDataException;->CREATOR:Landroid/os/Parcelable$Creator;,system-api,test-api
Landroid/health/connect/restore/StageRemoteDataException;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/restore/StageRemoteDataException;->getExceptionsByFileNames()Ljava/util/Map;,system-api,test-api
Landroid/health/connect/restore/StageRemoteDataException;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
Landroid/health/connect/restore/StageRemoteDataRequest$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/restore/StageRemoteDataRequest$1;->newArray(I)[Ljava/lang/Object;,public-api,system-api,test-api
Landroid/health/connect/restore/StageRemoteDataRequest;->describeContents()I,public-api,system-api,test-api
Landroid/health/connect/restore/StageRemoteDataRequest;->writeToParcel(Landroid/os/Parcel;I)V,public-api,system-api,test-api
