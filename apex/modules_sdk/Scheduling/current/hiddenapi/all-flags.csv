Landroid/scheduling/IRebootReadinessManager$Default;-><init>()V,blocked
Landroid/scheduling/IRebootReadinessManager$Default;->addRequestRebootReadinessStatusListener(Landroid/scheduling/IRequestRebootReadinessStatusListener;)V,blocked
Landroid/scheduling/IRebootReadinessManager$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/scheduling/IRebootReadinessManager$Default;->cancelPendingReboot(Ljava/lang/String;)V,blocked
Landroid/scheduling/IRebootReadinessManager$Default;->isReadyToReboot()Z,blocked
Landroid/scheduling/IRebootReadinessManager$Default;->markRebootPending(Ljava/lang/String;)V,blocked
Landroid/scheduling/IRebootReadinessManager$Default;->removeRequestRebootReadinessStatusListener(Landroid/scheduling/IRequestRebootReadinessStatusListener;)V,blocked
Landroid/scheduling/IRebootReadinessManager$Stub$Proxy;-><init>(Landroid/os/IBinder;)V,blocked
Landroid/scheduling/IRebootReadinessManager$Stub$Proxy;->addRequestRebootReadinessStatusListener(Landroid/scheduling/IRequestRebootReadinessStatusListener;)V,blocked
Landroid/scheduling/IRebootReadinessManager$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/scheduling/IRebootReadinessManager$Stub$Proxy;->cancelPendingReboot(Ljava/lang/String;)V,blocked
Landroid/scheduling/IRebootReadinessManager$Stub$Proxy;->getInterfaceDescriptor()Ljava/lang/String;,blocked
Landroid/scheduling/IRebootReadinessManager$Stub$Proxy;->isReadyToReboot()Z,blocked
Landroid/scheduling/IRebootReadinessManager$Stub$Proxy;->mRemote:Landroid/os/IBinder;,blocked
Landroid/scheduling/IRebootReadinessManager$Stub$Proxy;->markRebootPending(Ljava/lang/String;)V,blocked
Landroid/scheduling/IRebootReadinessManager$Stub$Proxy;->removeRequestRebootReadinessStatusListener(Landroid/scheduling/IRequestRebootReadinessStatusListener;)V,blocked
Landroid/scheduling/IRebootReadinessManager$Stub$Proxy;->sDefaultImpl:Landroid/scheduling/IRebootReadinessManager;,blocked
Landroid/scheduling/IRebootReadinessManager$Stub;-><init>()V,blocked
Landroid/scheduling/IRebootReadinessManager$Stub;->TRANSACTION_addRequestRebootReadinessStatusListener:I,blocked
Landroid/scheduling/IRebootReadinessManager$Stub;->TRANSACTION_cancelPendingReboot:I,blocked
Landroid/scheduling/IRebootReadinessManager$Stub;->TRANSACTION_isReadyToReboot:I,blocked
Landroid/scheduling/IRebootReadinessManager$Stub;->TRANSACTION_markRebootPending:I,blocked
Landroid/scheduling/IRebootReadinessManager$Stub;->TRANSACTION_removeRequestRebootReadinessStatusListener:I,blocked
Landroid/scheduling/IRebootReadinessManager$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/scheduling/IRebootReadinessManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/scheduling/IRebootReadinessManager;,blocked
Landroid/scheduling/IRebootReadinessManager$Stub;->getDefaultImpl()Landroid/scheduling/IRebootReadinessManager;,blocked
Landroid/scheduling/IRebootReadinessManager$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/scheduling/IRebootReadinessManager$Stub;->setDefaultImpl(Landroid/scheduling/IRebootReadinessManager;)Z,blocked
Landroid/scheduling/IRebootReadinessManager;->DESCRIPTOR:Ljava/lang/String;,blocked
Landroid/scheduling/IRebootReadinessManager;->addRequestRebootReadinessStatusListener(Landroid/scheduling/IRequestRebootReadinessStatusListener;)V,blocked
Landroid/scheduling/IRebootReadinessManager;->cancelPendingReboot(Ljava/lang/String;)V,blocked
Landroid/scheduling/IRebootReadinessManager;->isReadyToReboot()Z,blocked
Landroid/scheduling/IRebootReadinessManager;->markRebootPending(Ljava/lang/String;)V,blocked
Landroid/scheduling/IRebootReadinessManager;->removeRequestRebootReadinessStatusListener(Landroid/scheduling/IRequestRebootReadinessStatusListener;)V,blocked
Landroid/scheduling/IRequestRebootReadinessStatusListener$Default;-><init>()V,blocked
Landroid/scheduling/IRequestRebootReadinessStatusListener$Default;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/scheduling/IRequestRebootReadinessStatusListener$Default;->onRequestRebootReadinessStatus(Landroid/os/RemoteCallback;)V,blocked
Landroid/scheduling/IRequestRebootReadinessStatusListener$Stub$Proxy;-><init>(Landroid/os/IBinder;)V,blocked
Landroid/scheduling/IRequestRebootReadinessStatusListener$Stub$Proxy;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/scheduling/IRequestRebootReadinessStatusListener$Stub$Proxy;->getInterfaceDescriptor()Ljava/lang/String;,blocked
Landroid/scheduling/IRequestRebootReadinessStatusListener$Stub$Proxy;->mRemote:Landroid/os/IBinder;,blocked
Landroid/scheduling/IRequestRebootReadinessStatusListener$Stub$Proxy;->onRequestRebootReadinessStatus(Landroid/os/RemoteCallback;)V,blocked
Landroid/scheduling/IRequestRebootReadinessStatusListener$Stub$Proxy;->sDefaultImpl:Landroid/scheduling/IRequestRebootReadinessStatusListener;,blocked
Landroid/scheduling/IRequestRebootReadinessStatusListener$Stub;-><init>()V,blocked
Landroid/scheduling/IRequestRebootReadinessStatusListener$Stub;->TRANSACTION_onRequestRebootReadinessStatus:I,blocked
Landroid/scheduling/IRequestRebootReadinessStatusListener$Stub;->asBinder()Landroid/os/IBinder;,public-api,sdk,system-api,test-api
Landroid/scheduling/IRequestRebootReadinessStatusListener$Stub;->asInterface(Landroid/os/IBinder;)Landroid/scheduling/IRequestRebootReadinessStatusListener;,blocked
Landroid/scheduling/IRequestRebootReadinessStatusListener$Stub;->getDefaultImpl()Landroid/scheduling/IRequestRebootReadinessStatusListener;,blocked
Landroid/scheduling/IRequestRebootReadinessStatusListener$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z,public-api,sdk,system-api,test-api
Landroid/scheduling/IRequestRebootReadinessStatusListener$Stub;->setDefaultImpl(Landroid/scheduling/IRequestRebootReadinessStatusListener;)Z,blocked
Landroid/scheduling/IRequestRebootReadinessStatusListener;->DESCRIPTOR:Ljava/lang/String;,blocked
Landroid/scheduling/IRequestRebootReadinessStatusListener;->onRequestRebootReadinessStatus(Landroid/os/RemoteCallback;)V,blocked
Landroid/scheduling/RebootReadinessManager$RebootReadinessCallbackProxy$$ExternalSyntheticLambda0;-><init>(Landroid/scheduling/RebootReadinessManager$RebootReadinessCallbackProxy;Landroid/os/RemoteCallback;)V,blocked
Landroid/scheduling/RebootReadinessManager$RebootReadinessCallbackProxy$$ExternalSyntheticLambda0;->f$0:Landroid/scheduling/RebootReadinessManager$RebootReadinessCallbackProxy;,blocked
Landroid/scheduling/RebootReadinessManager$RebootReadinessCallbackProxy$$ExternalSyntheticLambda0;->f$1:Landroid/os/RemoteCallback;,blocked
Landroid/scheduling/RebootReadinessManager$RebootReadinessCallbackProxy$$ExternalSyntheticLambda0;->run()V,core-platform-api,public-api,sdk,system-api,test-api
Landroid/scheduling/RebootReadinessManager$RebootReadinessCallbackProxy;-><init>(Landroid/scheduling/RebootReadinessManager$RequestRebootReadinessStatusListener;Ljava/util/concurrent/Executor;)V,blocked
Landroid/scheduling/RebootReadinessManager$RebootReadinessCallbackProxy;->lambda$onRequestRebootReadinessStatus$0$RebootReadinessManager$RebootReadinessCallbackProxy(Landroid/os/RemoteCallback;)V,blocked
Landroid/scheduling/RebootReadinessManager$RebootReadinessCallbackProxy;->mCallback:Landroid/scheduling/RebootReadinessManager$RequestRebootReadinessStatusListener;,blocked
Landroid/scheduling/RebootReadinessManager$RebootReadinessCallbackProxy;->mExecutor:Ljava/util/concurrent/Executor;,blocked
Landroid/scheduling/RebootReadinessManager$RebootReadinessCallbackProxy;->onRequestRebootReadinessStatus(Landroid/os/RemoteCallback;)V,blocked
Landroid/scheduling/RebootReadinessManager$RebootReadinessStatus;-><init>(ZJLjava/lang/String;)V,sdk,system-api,test-api
Landroid/scheduling/RebootReadinessManager$RebootReadinessStatus;->getEstimatedFinishTime()J,sdk,system-api,test-api
Landroid/scheduling/RebootReadinessManager$RebootReadinessStatus;->getLogSubsystemName()Ljava/lang/String;,sdk,system-api,test-api
Landroid/scheduling/RebootReadinessManager$RebootReadinessStatus;->isReadyToReboot()Z,sdk,system-api,test-api
Landroid/scheduling/RebootReadinessManager$RebootReadinessStatus;->mEstimatedFinishTime:J,blocked
Landroid/scheduling/RebootReadinessManager$RebootReadinessStatus;->mIsReadyToReboot:Z,blocked
Landroid/scheduling/RebootReadinessManager$RebootReadinessStatus;->mLogSubsystemName:Ljava/lang/String;,blocked
Landroid/scheduling/RebootReadinessManager$RequestRebootReadinessStatusListener;->onRequestRebootReadinessStatus()Landroid/scheduling/RebootReadinessManager$RebootReadinessStatus;,sdk,system-api,test-api
Landroid/scheduling/RebootReadinessManager;-><init>(Landroid/content/Context;Landroid/scheduling/IRebootReadinessManager;)V,blocked
Landroid/scheduling/RebootReadinessManager;->ACTION_REBOOT_READY:Ljava/lang/String;,sdk,system-api,test-api
Landroid/scheduling/RebootReadinessManager;->ESTIMATED_FINISH_TIME_KEY:Ljava/lang/String;,blocked
Landroid/scheduling/RebootReadinessManager;->EXTRA_IS_READY_TO_REBOOT:Ljava/lang/String;,sdk,system-api,test-api
Landroid/scheduling/RebootReadinessManager;->IS_REBOOT_READY_KEY:Ljava/lang/String;,blocked
Landroid/scheduling/RebootReadinessManager;->SUBSYSTEM_NAME_KEY:Ljava/lang/String;,blocked
Landroid/scheduling/RebootReadinessManager;->TAG:Ljava/lang/String;,blocked
Landroid/scheduling/RebootReadinessManager;->addRequestRebootReadinessStatusListener(Ljava/util/concurrent/Executor;Landroid/scheduling/RebootReadinessManager$RequestRebootReadinessStatusListener;)V,sdk,system-api,test-api
Landroid/scheduling/RebootReadinessManager;->cancelPendingReboot()V,sdk,system-api,test-api
Landroid/scheduling/RebootReadinessManager;->isReadyToReboot()Z,sdk,system-api,test-api
Landroid/scheduling/RebootReadinessManager;->mContext:Landroid/content/Context;,blocked
Landroid/scheduling/RebootReadinessManager;->mProxyList:Landroid/util/ArrayMap;,blocked
Landroid/scheduling/RebootReadinessManager;->mService:Landroid/scheduling/IRebootReadinessManager;,blocked
Landroid/scheduling/RebootReadinessManager;->markRebootPending()V,sdk,system-api,test-api
Landroid/scheduling/RebootReadinessManager;->removeRequestRebootReadinessStatusListener(Landroid/scheduling/RebootReadinessManager$RequestRebootReadinessStatusListener;)V,sdk,system-api,test-api
Landroid/scheduling/SchedulingFrameworkInitializer$$ExternalSyntheticLambda0;-><clinit>()V,blocked
Landroid/scheduling/SchedulingFrameworkInitializer$$ExternalSyntheticLambda0;-><init>()V,blocked
Landroid/scheduling/SchedulingFrameworkInitializer$$ExternalSyntheticLambda0;->INSTANCE:Landroid/scheduling/SchedulingFrameworkInitializer$$ExternalSyntheticLambda0;,blocked
Landroid/scheduling/SchedulingFrameworkInitializer$$ExternalSyntheticLambda0;->createService(Landroid/content/Context;Landroid/os/IBinder;)Ljava/lang/Object;,sdk,system-api,test-api
Landroid/scheduling/SchedulingFrameworkInitializer;-><init>()V,blocked
Landroid/scheduling/SchedulingFrameworkInitializer;->lambda$registerServiceWrappers$0(Landroid/content/Context;Landroid/os/IBinder;)Landroid/scheduling/RebootReadinessManager;,blocked
Landroid/scheduling/SchedulingFrameworkInitializer;->registerServiceWrappers()V,blocked
